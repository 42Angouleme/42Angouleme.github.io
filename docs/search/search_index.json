{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"La biblioth\u00e8que Pybot","text":"<p>Ce qu'est Pybot</p> <p>Pybot est une biblioth\u00e8que logicielle permettant \u00e0 des \u00e9l\u00e8ves de coll\u00e9ge de programmer eux m\u00eame un robot.</p> <p>Vous trouverez ici les informations pour utiliser la biblioth\u00e8que pybot avec des exemples concret pour r\u00e9aliser des programmes d'un simple affichage de cam\u00e9ra jusqu'\u00e0 un robot conversationnel complet.</p>"},{"location":"#les-fonctionnalites-du-robot","title":"Les fonctionnalit\u00e9s du robot :","text":"<p>Le robot complet.</p> <p>Le Robot a \u00e9t\u00e9 pens\u00e9 pour fonctionner sur un Raspberry Pi configur\u00e9 avec Linux (Debian). Un \u00e9cran pour le visage, une camera pour les yeux, un haut parleur pour la bouche et un micro pour les oreilles. La coquille entourant le raspberry pi est libre d'interpr\u00e9tation esth\u00e9tique.</p> <p>Avec la biblioth\u00e8que vous pouvez :</p> <p>  Construire une interface graphique pour int\u00e9ragir avec le robot.  Utiliser une reconnaissance visuelle par cam\u00e9ra (pas biom\u00e9trique comme le visage mais des dessins sur cartes).  Des fonctionnalit\u00e9s de communication avec une IA utilisant une transformation de l'audio en texte (microphone) et de texte en audio (haut parleur) qui interagisse avec une IA conversationnelle de type chatGPT.  Une base de donn\u00e9e et une administration web pour configurer le robot, par exemple: enregistrer les cartes d'identification des \u00e9l\u00e8ves, pr\u00e9parer des questions qui seront pos\u00e9 aux \u00e9l\u00e8ves et dont les r\u00e9ponses seront enregistr\u00e9 en base de donn\u00e9e pour consultation.</p>"},{"location":"#utilisation-de-la-bibliotheque","title":"Utilisation de la biblioth\u00e8que","text":"<pre><code>print(\"bonjour, Pybot!\")\n</code></pre> <p>Pybot se pr\u00e9sente comme un objet avec des m\u00e9thodes que l'on peut utiliser ensemble pour faire le programme.</p> <p>Les chapitres suivant vous pr\u00e9sentent les diff\u00e9rentes m\u00e9thodes possibles et des exemples d'utilisation.</p> <p>Avant de suivre ce tutoriel, vous souhaitez peut-\u00eatre savoir comment configurer et utiliser pybot.</p>"},{"location":"chap1/","title":"Chapitre 1: Un premier programme","text":""},{"location":"chap1/#1-pour-demarrer-nous-avons-besoin-dimporter-la-bibliotheque-et-de-demarrer-le-robot","title":"1. Pour demarrer nous avons besoin d'importer la biblioth\u00e8que et de d\u00e9marrer le robot","text":"<p>Le programme doit toujours commencer par ces deux lignes de code.</p> <p>Importer et activer le robot</p> <pre><code>from pybot import Robot\nrobot = Robot()\n</code></pre>"},{"location":"chap1/#2-lancer-lapplication-web-pour-faire-tourner-la-base-de-donnees","title":"2. Lancer l'application web pour faire tourner la base de donn\u00e9es.","text":"<p>Une des premi\u00e8res choses \u00e0 faire est de lancer le serveur qui permettra d'acc\u00e9der \u00e0 l'application web et ainsi travailler avec la base de donn\u00e9e, on utilise pour cela la m\u00e9thode demarrer_webapp.  Il est aussi possible de configurer le robot depuis un site web, par exemple pour ajouter des \u00e9l\u00e8ves \u00e0 la base de donn\u00e9es.</p> <p>demarrer_webapp()</p> <pre><code>robot.demarrer_webapp()\n</code></pre> <p>Le serveur web se lance et ne bloque pas le programme, on peut donc ensuite s'occuper de programmer le robot.</p> <p>Info</p> <p>Le site sera accessible en local \u00e0 l'adresse : http://127.0.0.1:5000</p> <p>Note</p> <p>Il est possible de configurer le raspberry pi pour faire serveur et rendre le site accessible sur le r\u00e9seau local pour ainsi se connecter \u00e0 distance au robot.</p> <p>Warning</p> <p>Pour terminer le serveur il faut taper dans le terminal la combinaison au clavier : CTRL+C.</p>"},{"location":"chap1/#3-allumer-lecran-pour-demarrer-laffichage","title":"3. Allumer l'\u00e9cran pour d\u00e9marrer l'affichage.","text":"<p>Il est ensuite important de d\u00e9marrer l'affichage qui met en action le robot. La m\u00e9thode allumer_ecran utilise deux param\u00e8tres, la longueur et la hauteur de la fen\u00eatre qui correspond aux nombres de pixels horizontal et vertical. Ces deux param\u00e8tres sont optionnels, si aucun param\u00e8tre n'est donn\u00e9 (ou un seul), la fenetre aura pour taille 800 pixels de longueur et 600 pixels de hauteur.</p> <p>allumer_ecran(longueur, hauteur)</p> <p><pre><code>robot.allumer_ecran()\n</code></pre> ou bien <pre><code>l = 1000\nh = 400\nrobot.allumer_ecran(l, h)\n</code></pre></p>"},{"location":"chap1/#4-changer-le-titre-de-la-fenetre","title":"4. Changer le titre de la fen\u00eatre.","text":"<p>La m\u00e9thode changer_titre(titre) change le titre de la fen\u00eatre avec le param\u00e8tre titre.</p> <p>changer_titre(titre)</p> <pre><code>titre = \"Mon Programme\"\nrobot.changer_titre(titre)\n</code></pre> <p>Une message d'erreur</p> <p>Il est a noter qu'il important d'avoir allum\u00e9 l'\u00e9cran avant de pouvoir changer son titre. Des erreurs avec plusieurs m\u00e9thodes peuvent survenir et il est utile de regarder dans le terminal le message d'erreur pour pouvoir ensuite r\u00e9parer le programme. <pre><code>robot.changer_titre(\"Mon super titre\")\nrobot.allumer_ecran()\n</code></pre> Dans le terminal: <pre><code>Erreur: Le titre doit \u00eatre d\u00e9fini apr\u00e9s cr\u00e9ation de l'\u00e9cran.\n</code></pre></p>"},{"location":"chap1/#5-mettre-a-jour-laffichage-de-lecran","title":"5. Mettre \u00e0 jour l'affichage de l'\u00e9cran.","text":"<p>\u00c0 chaque fois qu'une modification est faites (ex: un changement de titre, un nouveau bouton, un texte \u00e0 afficher), il est important de mettre \u00e0 jour l'affichage de l'\u00e9cran. On utilise la m\u00e9thode dessiner_ecran.</p> <p>Id\u00e9alement, cette m\u00e9thode est appel\u00e9e dans une boucle afin de garder l'affichage \u00e0 jour.</p> <p>dessiner_ecran()</p> <pre><code>robot.dessiner_ecran()\n</code></pre>"},{"location":"chap1/#6-passer-laffichage-en-plein-ecran","title":"6. Passer l'affichage en plein \u00e9cran.","text":"<p>Pour que l'affichage remplisse l'\u00e9cran, on peut utiliser la m\u00e9thode plein_ecran(changer) avec le param\u00e8tre changer ayant la valeur vrai (True) ou faux (False). </p> <p>plein_ecran(changer)</p> <p>pour passer en plein \u00e9cran <pre><code>robot.plein_ecran(True)\n</code></pre> ou pour en sortir <pre><code>robot.plein_ecran(False)\n</code></pre></p>"},{"location":"chap1/#7-faire-dormir-le-robot","title":"7. Faire dormir le robot.","text":"<p>Il est parfois utile de ralentir l'ex\u00e9cution du programme en lui faisant faire des pauses. La m\u00e9thode dort(secondes) le permet, il suffit de passer en param\u00e8tre le nombre de secondes \u00e0 attendre.</p> <p>dort(secondes)</p> <pre><code>secondes = 2\nrobot.dort(secondes)\n</code></pre>"},{"location":"chap1/#exemple-1-un-premier-programme","title":"Exemple 1: Un premier programme.","text":"<p>Nous verrons apr\u00e9s comment maintenir le programme actif avec une boucle et des \u00e9v\u00e8nements. Mais pour le moment nous allons faire dormir le robot pour ralentir l'ex\u00e9cution du robot.</p> <pre><code>from pybot import Robot\nrobot = Robot()\n\nrobot.changer_titre(\"bonjour,pybot!\") # Erreur\nrobot.allumer_ecran()\nrobot.changer_titre(\"bonjour,pybot!\")\nrobot.dessiner_ecran()\nrobot.dort(1)\nrobot.changer_titre(\"plein \u00e9cran dans une seconde\")\nrobot.dessiner_ecran()\nrobot.dort(1)\nrobot.plein_ecran(True)\nrobot.dessiner_ecran()\nrobot.dort(1)\nrobot.changer_titre(\"fin du programme dans une seconde\")\nrobot.plein_ecran(False)\nrobot.dessiner_ecran()\nrobot.dort(1)\n</code></pre>"},{"location":"chap2/","title":"Chapitre 2: Une boucle et des \u00e9v\u00e8nements.","text":""},{"location":"chap2/#1-boucle-et-controle-de-lactivite-du-robot","title":"1. Boucle et contr\u00f4le de l'activit\u00e9 du robot.","text":"<p>\u00c0 l'initiation du robot, il est possible de v\u00e9rifier ce status avec la m\u00e9thode robot.est_actif() qui peut alors servir de v\u00e9rification dans une boucle while et ainsi maintenir le programme en cours d'ex\u00e9cution.</p> <p>Note</p> <p>Au lancement du programme robot.est_actif() retourn vrai (True). Il est possible de rendre le robot inactif avec la m\u00e9thode robot.desactiver() qui fera simplement retourner Faux (False) \u00e0 la m\u00e9thode robot.est_actif().</p> <p>Activit\u00e9 du robot</p> <pre><code>while robot.est_actif():\n    robot.dort(2)\n    robot.desactiver()\n</code></pre>"},{"location":"chap2/#2-eteindre-lecran-et-terminer-le-programme","title":"2. \u00c9teindre l'\u00e9cran et terminer le programme.","text":"<p>La m\u00e9thode robot.eteindre_ecran permet d'arr\u00eater l'affichage de l'\u00e9cran.</p> <p>Note</p> <p>Le status du robot devient inactif, la m\u00e9thode robot.est_actif() retournera alors False.</p> <p>\u00c9teindre \u00e9cran</p> <pre><code>while robot.est_actif():\n    robot.dort(2)\n    robot.eteindre_ecran()\n</code></pre> <p>Note</p> <p>En g\u00e9n\u00e9ral, il est pr\u00e9f\u00e9rable d'utiliser robot.eteindre_ecran car le programme s'arr\u00eatera plus proprement qu'en sortant simplement de la boucle avec robot.desactiver.</p>"},{"location":"chap2/#3-creer-un-evenement","title":"3. Cr\u00e9er un \u00e9v\u00e8nement.","text":"<p>Note</p> <p>Un \u00e9v\u00e8nement est une action sur le clavier associ\u00e9e \u00e0 un nom d'\u00e9v\u00e8nement. Nous cr\u00e9ons un nouvel \u00e9v\u00e8nement avec la m\u00e9thode ajouter_evenement(touche, nom).</p> <p>Ajouter un \u00e9v\u00e8nement</p> <pre><code>robot.ajouter_evenement(\"echap\", \"stop\")\n</code></pre> <p>Info</p> <p>Voir la r\u00e9f\u00e9rence pour voir une liste des touches possible, par exemple la touche du clavier a s'appelera \"a\". \u00c0 noter, les touches qui se nomment \"espace\" et \"echap\" pour la barre d'espace et la touche d'\u00e9chappement.</p>"},{"location":"chap2/#4-verifier-un-evenement","title":"4. V\u00e9rifier un \u00e9v\u00e8nement.","text":"<p>Nous pouvons r\u00e9cup\u00e9rer les \u00e9v\u00e8nements dans une boucle en faisant appel \u00e0 la m\u00e9thode robot.verifier_evenements().</p> <p>Info</p> <p>La m\u00e9thode retourne une liste avec les \u00e9v\u00e8nements qui viennent d'\u00eatre execut\u00e9s. Il est possible ensuite d'utiliser une v\u00e9rification avec if ... in ...: comme dans l'exemple si dessous.</p> <p>V\u00e9rifier les \u00e9v\u00e8nements.</p> <pre><code>    evenements = robot.verifier_evenements(\"echap\", \"stop\")\n    if \"stop\" in evenements:\n        print(\"stop\")\n</code></pre>"},{"location":"chap2/#5-supprimer-un-evenement","title":"5. Supprimer un \u00e9v\u00e8nement.","text":"<p>Il est ensuite possible de supprimer un \u00e9v\u00e8nement avec la m\u00e9thode robot.supprimer_evenement(nom).</p> <p>Supprimer un \u00e9v\u00e8nement.</p> <pre><code>    robot.supprimer_evenement(\"stop\")\n</code></pre> <p>Warning</p> <p>Si plusieurs touches sont attribu\u00e9es au m\u00eame \u00e9v\u00e8nement, elles seront toutes supprim\u00e9es de la liste des \u00e9v\u00e8nements.</p>"},{"location":"chap2/#exemple-2-utiliser-des-evenements","title":"Exemple 2: Utiliser des \u00e9v\u00e8nements.","text":"<p>Info</p> <p>Le robot final n'utilisera pas de clavier mais simplement une int\u00e9raction par la voix et par le touch\u00e9 sur \u00e9cran. Ces \u00e9v\u00e8nements par clavier servent principalement \u00e0 l'apprentissage du code python. Il s'agit d'une p\u00e9riode de transition.</p> <p>Warning</p> <p>Pour travailler avec cet exemple, pensez \u00e0 garder un oeil sur le terminal pour voir l'affichage des fonctions print.</p> <pre><code>from pybot import Robot\nrobot = Robot()\n\nlong = 1024\nhaut = 800\n\ndef ecrire_nom_evenement(event_name):\n    print(\"L'\u00e9v\u00e8nement est:\", event_name)\n\ndef preparer_robot():\n    robot.allumer_ecran(long, haut)\n    robot.changer_titre(\"Bonjour!\")\n    robot.ajouter_evenement(\"echap\", \"stop\")\n    robot.ajouter_evenement(\"B\", \"banane\")\n    robot.ajouter_evenement(\"C\", \"carotte\")\n    print(\"Vous pouvez maintenant utiliser Echap et C\")\n\npreparer_robot()\n\nnom = \"poireau\"\nwhile robot.est_actif():\n    evenements = robot.verifier_evenements()    \n    if \"stop\" in evenements:\n        robot.eteindre_ecran()\n    elif \"carotte\" in evenements:\n        print(\"Vous pouvez maintenant utiliser P\")\n        ecrire_nom_evenement(\"carotte\")\n        robot.supprimer_evenement(\"carotte\")\n        robot.ajouter_evenement(\"P\", \"poireau\")\n    elif nom in evenements:\n        ecrire_nom_evenement(nom)\n        if nom == \"poireau\":\n            print(\"Vous pouvez maintenant utiliser B\")\n            robot.supprimer_evenement(\"poireau\")\n            nom = \"banane\"\n        elif nom == \"banane\":\n            print(\"Echap ne permet plus de quitter, il faut maintenant utiliser Q\")\n            robot.supprimer_evenement(\"stop\")\n            robot.supprimer_evenement(\"banane\")\n            robot.ajouter_evenement(\"Q\", \"stop\")\n    robot.dessiner_ecran()\n</code></pre>"},{"location":"chap3/","title":"Chapitre 3: Des boutons et des couleurs.","text":""},{"location":"chap3/#pour-ajouter-un-bouton-avec-le-nom-du-bouton-et-la-fonction-executee-au-click-de-ce-bouton","title":"Pour ajouter un bouton, avec le nom du bouton et la fonction execut\u00e9e au click de ce bouton :","text":"<pre><code>robot.ajouter_bouton(\"Quitter\", robot.eteindre_ecran)\n</code></pre>"},{"location":"chap4/","title":"Chapitre 4: Prendre une photo avec une cam\u00e9ra et appliquer des filtres.","text":""},{"location":"chap4/#pour-afficher-la-camera","title":"Pour afficher la cam\u00e9ra :","text":"<pre><code>robot.afficher_camera()\n</code></pre>"},{"location":"chap4/#pour-eteindre-la-camera","title":"Pour \u00e9teindre la cam\u00e9ra :","text":"<pre><code>robot.\u00e9teindre_camera()\n</code></pre>"},{"location":"chap4/#pour-enregistrer-une-photo","title":"Pour enregistrer une photo :","text":"<pre><code>robot.enregistrer_photo()\n</code></pre>"},{"location":"chap4/#pour-afficher-une-photo","title":"Pour afficher une photo :","text":"<pre><code>robot.afficher_photo()\n</code></pre>"},{"location":"chap4/#pour-supprimer-une-photo","title":"Pour supprimer une photo :","text":"<pre><code>robot.supprimer_photo()\n</code></pre>"},{"location":"chap4/#pour-appliquer-un-filtre-sur-une-photo","title":"Pour appliquer un filtre sur une photo :","text":"<pre><code>robot.appliquer_filtre_noir_et_blanc()\nrobot.appliquer_filtre_amour()\nrobot.tourner_photo()\n</code></pre>"},{"location":"chap5/","title":"Chapitre 5: Reconnaissance d'un \u00e9l\u00e8ve avec sa carte.","text":""},{"location":"chap6/","title":"Chapitre 6: Parler au robot.","text":""},{"location":"chap7/","title":"Chapitre 7: Le robot r\u00e9pond.","text":""},{"location":"chap8/","title":"Chapitre 8: Le visage et les \u00e9motions du robot.","text":""},{"location":"chap8/#pour-afficher-un-visage","title":"Pour afficher un visage :","text":"<pre><code>robot.afficher_visage_triste()\nrobot.afficher_visage_content()\nrobot.afficher_visage_colere()\nrobot.afficher_visage_fier()\n</code></pre>"},{"location":"config/","title":"Configurer l'\u00e9diteur VS Code pour programmer le robot","text":""},{"location":"config/#configurer-lenvironnement-python-et-installer-les-dependances","title":"Configurer l'environnement python et installer les d\u00e9pendances","text":"<pre><code>git clone git@github.com:42Angouleme/initiation_python.git\ncd initiation_python\npython -m venv venv\nsource venv/bin/activate\npip install -r requirements.txt\n</code></pre>"},{"location":"config/#ajouter-un-package-python-et-mettre-a-jour-le-fichier-requirementstxt","title":"Ajouter un package python et mettre \u00e0 jour le fichier requirements.txt","text":"<pre><code>python3 -m pip install &lt;package_name&gt;\npython3 -m pip freeze &gt; requirements.txt\n</code></pre>"},{"location":"config/#lancer-le-programme-principal","title":"Lancer le programme principal","text":"<pre><code>python3 main.py\n</code></pre> <p>ou</p> <pre><code>chmod +x main.py\n./main.py\n</code></pre>"},{"location":"config/#pour-preparer-vscode","title":"Pour pr\u00e9parer vscode","text":"<pre><code>code --install-extension ms-python.python\ncode --install-extension MS-CEINTL.vscode-language-pack-fr\ncd initiation_python\ncode main.py\n</code></pre>"},{"location":"config/#cliquer-sur-licone-extension","title":"Cliquer sur l'icone extension","text":""},{"location":"config/#chercher-python-et-installer","title":"Chercher python et installer","text":""},{"location":"config/#python-est-installe","title":"Python est install\u00e9","text":""},{"location":"config/#ouvrir-lexplorateur-de-fichiers","title":"Ouvrir l'explorateur de fichiers","text":""},{"location":"config/#creer-un-nouveau-fichier","title":"Cr\u00e9er un nouveau fichier","text":""},{"location":"config/#nommer-le-fichier","title":"Nommer le fichier","text":""},{"location":"config/#ecrire-son-code-dans-le-fichier","title":"\u00c9crire son code dans le fichier","text":""},{"location":"config/#lancer-le-programme","title":"Lancer le programme","text":""},{"location":"contribute/","title":"Contribuer au projet Pybot","text":"<p>L'objectif est de cr\u00e9er une biblioth\u00e8que logicielle qui permettra \u00e0 des \u00e9l\u00e8ves de coll\u00e8ge de niveau 3\u00e9me de r\u00e9aliser un robot par eux m\u00eame (Tout en s'initiant \u00e0 la programmation Python).</p> <p>Il existe deux d\u00e9p\u00f4ts public sur github, l'un avec la biblioth\u00e8que pybot et l'autre avec la d\u00e9mo qui a servi aux coll\u00e8giens lors de la journ\u00e9e d'immersion \u00e0 l'\u00e9cole de 42 Angoul\u00eame le 27 Novembre 2023.</p> <p>La d\u00e9mo est archiv\u00e9e et sert seulement comme r\u00e9f\u00e9rence, le d\u00e9veloppement se d\u00e9roule exclusivement sur le d\u00e9p\u00f4t de la biblioth\u00e8que pybot et les tickets sont tous rassembl\u00e9s ici.</p>"},{"location":"contribute/#installation-du-projet","title":"Installation du projet","text":"<p>La biblioth\u00e8que utilise le language Python avec un grand nombre de d\u00e9pendances (pygame, flask, opencv...), pour l'installer en local il suffit de cloner le d\u00e9p\u00f4t, installer un environnement virtuel python avec les d\u00e9pendances.</p> <pre><code>git clone git@github.com:42Angouleme/pybot.git\ncd pybot\npython3 -m venv venv\nsource venv/bin/activate\npython3 -m pip install -r requirements.txt\n</code></pre>"},{"location":"contribute/#exploration-et-creation-de-tickets","title":"Exploration et cr\u00e9ation de tickets","text":"<p>Pour participer au d\u00e9veloppement vous pouvez explorer les diff\u00e9rents tickets en cours ou bien en ajouter de nouveaux.</p> <p></p> <p>Pour ajouter un ticket, il suffit de donner une indication sur le bug \u00e0 corriger ou la fonctionnalit\u00e9 \u00e0 ajouter. Il est aussi int\u00e9ressant de mettre des tags pour indiquer quel est le type du ticket. Par exemple, un ticket avec le tag good first issue est utile pour signifier aux nouveaux d\u00e9veloppeurs qui souhaitent contribuer que ce ticket est un point d'entr\u00e9e interressant pour d\u00e9couvrir et commencer \u00e0 participer au code.</p> <p></p> <p>Une fois que le ticket est cr\u00e9\u00e9, tout le monde peut participer \u00e0 la discussion pour aider \u00e0 la r\u00e9solution du probl\u00e8me. Lorsque vous souhaitez adopter un ticket pour le r\u00e9soudre il suffit de s'assigner \u00e0 soi-m\u00eame la r\u00e9solution du ticket (que ce soit le votre ou un ticket disponible qui est assign\u00e9 \u00e0 personne) et de cr\u00e9er la branche depuis le ticket (ce qui permet de fermer automatiquement le ticket lorsque la branche sera merge \u00e0 la branche main).</p> <p></p> <p></p> <p>Apr\u00e9s avoir cr\u00e9\u00e9 la branche, il faut la r\u00e9cup\u00e9rer sur son code localement.</p> <pre><code>git fetch origin\ngit checkout numero-nom-de-la-branche\n</code></pre> <p>Il suffit ensuite de faire les modifications.</p> <p></p>"},{"location":"contribute/#resolution-de-tickets","title":"R\u00e9solution de tickets","text":"<p>Une fois que l'on a r\u00e9solu le ticket, l'objectif est d'amener sa contribution \u00e0 \u00eatre ajout\u00e9 \u00e0 la base de code principale (merge). Avec git on ajoute ses modifications sur la branche que l'on pousse sur le d\u00e9p\u00f4t.</p> <p></p> <p>En retournant sur la page du d\u00e9p\u00f4t on constate maintenant qu'il est possible de cr\u00e9er une pull request. La pull request ne bloque pas la branche, il est ensuite toujours possible de faire d'autres modifications sur la branche. Toutes les modifications pouss\u00e9es sur la branche d'une pull request seront automatiquement ajout\u00e9es au futur merge.</p> <p></p> <p>Comme les tickets, les pull requests sont des espaces de discussions ouvert \u00e0 tous et am\u00e9liorable jusqu'\u00e0 ce que le mainteneur valide et merge votre branche \u00e0 la branche main.</p> <p></p> <p>Il existe une liste des pull request comme il existe une liste de ticket (issues).</p> <p></p> <p>Quand le mainteneur fera le merge il supprimera la branche (ce qui supprimera par la m\u00eame occasion le ticket li\u00e9).</p> <p></p> <p>La branche est merge et la modification est ajout\u00e9e \u00e0 la branche main principale.</p> <p></p> <p>Bravo, vous savez maintenant contribuer \u00e0 un projet open source.</p>"},{"location":"python/","title":"Apprendre python","text":"<p>Un cours d'initiation au language python avec des exemples.</p>"},{"location":"python/#1-les-variables","title":"1. Les Variables","text":"<p>Une variable est une mani\u00e8re de stocker une donn\u00e9e. La variable doit avoir un type pour d\u00e9finir la donn\u00e9e stock\u00e9e.</p> <p>Les types possibles sont: - int =&gt; Chiffre ou nombre - str =&gt; Caract\u00e8re ou cha\u00eene de caract\u00e8res - bool =&gt; Boolean True (\"Vrai\") ou False (\"Faux\") - ...</p>"},{"location":"python/#exemple","title":"Exemple:","text":"<pre><code>un_bool = True\nun_int = 42\nune_str = \"Coucou\"\n\nprint(\"Ceci est un boolean:\", un_bool)\nprint(\"Ceci est un integer:\", un_int)\nprint(\"Ceci est une chaine de caracteres:\", une_str)\n</code></pre>"},{"location":"python/#2-les-fonctions","title":"2. Les fonctions","text":"<p>Les fonctions d\u00e9finissent des actions \u00e0 faire lors de leur appel. Une fonction est constitu\u00e9e de son nom, des param\u00e8tres pris en entr\u00e9e et de son type de retour.</p>"},{"location":"python/#exemple_1","title":"Exemple:","text":"<pre><code># Cette fonction affiche \"bonjour\"\ndef afficher_bonjour():\n    print(\"Bonjour\")\n\n# Cette fonction affiche le contenu de mot\ndef afficher_argument(mot=\"Salut\"):\n    print(mot)\n\n# Cette fonction affiche \"Coucou\" et renvoi le m\u00eame mot\ndef afficher_et_renvoyer_coucou() -&gt; str:\n    mot = \"Coucou\"\n    print(mot)\n    return mot\n\ndef main():\n    afficher_bonjour()\n    afficher_argument(\"Bonjour \u00e0 tous, je suis un argument\")\n    afficher_argument()\n    retour = afficher_et_renvoyer_coucou()\n    print(\"retour =\", retour)\n</code></pre>"},{"location":"python/#3-les-conditions","title":"3. Les conditions","text":"<p>Les conditions permettent de limiter l'ex\u00e9cution d'une action si et seulement si la condition est valide.</p>"},{"location":"python/#exemple_2","title":"Exemple:","text":"<pre><code>def positif_ou_negatif(nombre: int):\n    if nombre &gt; 0:\n        print(nombre, \"est positif !\")\n    else:\n        print(nombre, \"est negatif !\")\n</code></pre>"},{"location":"python/#4-les-boucles","title":"4. Les Boucles","text":"<p>Les boucles sont des \u00e9l\u00e9ments qui permettent de r\u00e9p\u00e9ter une action, un nombre de fois d\u00e9finit par la condition d'arr\u00eat.</p>"},{"location":"python/#exemple_3","title":"Exemple:","text":"<pre><code>def dire_bonjour_a_tous_les_etudiants(nombre_etudiants: int):\n    indice = 1\n    while indice &lt;= nombre_etudiants:\n        print(\"Bonjour etudiant numero\", indice, \"\\n\")\n        indice = indice + 1\n</code></pre>"},{"location":"python/#5-les-classes","title":"5. Les classes","text":"<p>Les classes sont des structures de code qui d\u00e9finissent un objet et les comportements qu'il peut r\u00e9aliser. Comme dans l'exemple suivant, vous pouvez importer une classes \"Robot\" depuis la biblioth\u00e8que \"Robot\".  Ensuite, il vous faut cr\u00e9er un objet Robot, avec ici un nom et un \u00e2ge. Par la suite, vous pouvez donner des ordres \u00e0 votre robot, en faisant appel aux m\u00e9thodes que la classes Robot contient.</p>"},{"location":"python/#exemple_4","title":"Exemple:","text":"<pre><code>from pybot import Robot\n\n\ndef main():\n    robot = Robot(\"Nono\", 11)\n    robot.dire_bonjour()\n    robot.rendre_muet()\n    robot.dire_bonjour()\n    robot.donner_la_parole()\n    robot.dire_bonjour()\n</code></pre>"},{"location":"ref/","title":"R\u00e9f\u00e9rence de la biblioth\u00e8que","text":"<p>Pour en savoir plus, dans un \u00e9diteur tel que vscode, il suffit de passer la souris sur une fonction pour voir les commentaires la concernant.</p> <p></p>"},{"location":"ref/#lecran","title":"l'\u00e9cran","text":"<ul> <li> <p>Importer et utiliser pybot <pre><code>from pybot import Robot\nrobot = Robot()\n</code></pre></p> </li> <li> <p>D\u00e9marrer webapp. <pre><code>robot.demarrer_webapp()\n</code></pre></p> </li> <li> <p>Allumer l'\u00e9cran. <pre><code>robot.allumer_ecran(longeur, hauteur)\n</code></pre></p> </li> <li> <p>Changer le titre. <pre><code>robot.changer_titre(titre)\n</code></pre></p> </li> <li> <p>Mettre \u00e0 jour l'affichage dans la fen\u00eatre. <pre><code>robot.dessiner_ecran()\n</code></pre></p> </li> <li> <p>Entrer ou sortir du plein \u00e9cran. <pre><code>plein_ecran(changer)\n</code></pre></p> </li> <li> <p>Mettre en pause le robot. <pre><code>robot.dort(secondes)\n</code></pre></p> </li> <li> <p>V\u00e9rifier si le robot est actif (Vrai ou Faux). <pre><code>robot.est_actif()\n</code></pre></p> </li> <li> <p>Passer le robot en mode inactif. <pre><code>robot.desactiver()\n</code></pre></p> </li> <li> <p>Passet le robot en mode inactif et fermer l'affichage. <pre><code>robot.eteindre_ecran()\n</code></pre></p> </li> </ul>"},{"location":"ref/#les-evenements","title":"les \u00e9v\u00e8nements","text":"<p>Liste des touches pour cr\u00e9er des \u00e9v\u00e8nements: <pre><code>* echap (touche \u00c9chap)\n* espace (touche Espace)\n* 0\n* 1\n* 2\n* 3\n* 4\n* 5\n* 6\n* 7\n* 8\n* 9\n* a\n* b\n* c\n* d\n* e\n* f\n* g\n* h\n* i\n* j\n* k\n* l\n* m\n* n\n* o\n* p\n* q\n* r\n* s\n* t\n* u\n* v\n* w\n* x\n* y\n* z\n* F1\n* F2\n* F3\n* F4\n* F5\n* F6\n* F7\n* F8\n* F9\n* F10\n* F11\n* F12\n* F13\n* F14\n* F15\n</code></pre></p> <ul> <li> <p>Cr\u00e9er un nouvel \u00e9v\u00e8nement. <pre><code>robot.ajouter_evenement(touche, nom)\n</code></pre></p> </li> <li> <p>V\u00e9rifier les \u00e9v\u00e8nements. <pre><code>robot.verifier_evenements()\n</code></pre></p> </li> <li> <p>Supprimer un \u00e9v\u00e8nement. <pre><code>robot.supprimer_evenement(nom)\n</code></pre></p> </li> </ul>"},{"location":"ref/#les-boutons","title":"les boutons","text":""},{"location":"ref/#la-camera-et-la-carte","title":"la cam\u00e9ra et la carte","text":""},{"location":"ref/#parler-avec-le-robot","title":"parler avec le robot","text":""},{"location":"roadmap/","title":"Progression g\u00e9n\u00e9rale","text":"<p>L'objectif est d'obtenir une librairie qui permettra aux \u00e9l\u00e8ves d'interagir avec lui par la voix, le texte et l\u2019image. Une IA (conversationnelle) interagira avec eux. Ce robot aura pour fonction principale d'accueillir le public dans le Hall de l'\u00e9tablissement et pourrait par exemple, si entrain\u00e9 avec les donn\u00e9es du coll\u00e8ge, r\u00e9pondre \u00e0 des questions comme: \"Que mange t'on ce midi \u00e0 la cantine ?\".</p> <p>Le projet se d\u00e9coupe en deux niveaux, la classe g\u00e9n\u00e9rale Robot qui doit avoir des m\u00e9thodes acc\u00e9dant \u00e0 toutes les fonctionnalit\u00e9s des modules de mani\u00e8re simple, correctement nomm\u00e9es et document\u00e9es (en fran\u00e7ais) pour l'utilisation par les \u00e9l\u00e8ves.</p> <p>Les modules, avec leurs fonctionnalit\u00e9s plus bas niveau doivent aussi \u00e9tre document\u00e9 pour que les \u00e9tudiants de 42 puisse s'int\u00e9grer plus facilement et participer au d\u00e9veloppement.</p>"},{"location":"roadmap/#liste-des-fonctionnalites-de-la-classe-robot-et-leur-avancement","title":"Liste des fonctionnalit\u00e9s de la classe Robot et leur avancement:","text":""},{"location":"roadmap/#fonctionnalitees-a-creer-commenter-et-documenter","title":"fonctionnalit\u00e9es \u00e0 cr\u00e9er, commenter et documenter","text":"<ul> <li> commentaire attach\u00e9 \u00e0 la fonction dans le code</li> <li> fonction document\u00e9e dans un chapitre et la r\u00e9f\u00e9rence</li> </ul>"},{"location":"roadmap/#part-1-screen-basics","title":"part 1 - screen basics","text":"<ul> <li>robot.demarrer_webapp() :  , </li> <li>robot.allumer_ecran(longueur, hauteur) :  , </li> <li>robot.changer_titre() :  , </li> <li>robot.dessiner_ecran() :  , </li> <li>robot.plein_ecran(changer) :  , </li> <li>robot.dort() :  , </li> </ul>"},{"location":"roadmap/#part-2-loop-and-events","title":"part 2 - loop and events","text":"<ul> <li>robot.est_actif() :  , </li> <li>robot.desactiver() :  , </li> <li>robot.eteindre_ecran() :  , </li> <li>robot.ajouter_evenement(touche, nom) :  , </li> <li>robot.verifier_evenements() :  , </li> <li>robot.supprimer_evenement(touche) :  , </li> </ul>"},{"location":"roadmap/#part-3-buttons-layout-and-theming","title":"part 3 - buttons, layout and theming","text":"<ul> <li>robot.couleur_fond(couleur) :  , </li> <li>robot.ajouter_bouton(longueur, hauteur, couleur, nom, fonction) :  , </li> <li>robot.supprimer_bouton(nom) :  , </li> <li>robot.ajouter_espace_de_texte(longueur, hauteur, couleur, nom) :  , </li> <li>robot.afficher_texte(nom_espace_de_texte, texte) :  , </li> <li>robot.supprimer_espace_de_texte(nom) :  , </li> </ul>"},{"location":"roadmap/#part-4-camera-photo-and-filters","title":"part 4 - camera, photo and filters","text":""},{"location":"roadmap/#part-5-card-detection","title":"part 5 - card detection","text":""},{"location":"roadmap/#part-6-talk-to-robot","title":"part 6 - talk to robot","text":""},{"location":"roadmap/#part-7-robot-is-talking","title":"part 7 - robot is talking","text":""},{"location":"roadmap/#part-8-robot-face-and-emotions","title":"part 8 - robot face and emotions","text":""},{"location":"roadmap/#extra","title":"extra","text":"<ul> <li>robot.message_erreur() :  , </li> <li>robot.xxx() :  , </li> </ul>"},{"location":"roadmap/#liste-des-different-modules-et-leur-avancement","title":"Liste des diff\u00e9rent modules et leur avancement:","text":""},{"location":"roadmap/#module-ecran","title":"Module \u00e9cran","text":"<ul> <li>Wrapper pygame et pygame_gui</li> <li>Visage minimaliste avec expressions. S\u2019anime en cas de connexion ou r\u00e9agit aux erreurs.</li> <li>Possibilit\u00e9 d'affichage de texte d\u00e9filant des interactions, pouvant remplacer le speaker.</li> <li> <p>Un application graphique (pygame GUI) client pour afficher le stream camera, des boutons, du texte ou des images depuis la base de donn\u00e9es.</p> </li> <li> <p>D\u00e8s l\u2019identification :</p> </li> <li>saluer, variable</li> <li>d\u00e9clencher les questions pr\u00e9-enregistr\u00e9es actives de la DB</li> <li>\u00e9change libre</li> </ul>"},{"location":"roadmap/#module-camera","title":"Module cam\u00e9ra","text":"<ul> <li>Reconnaissance (identification) via la cam\u00e9ra d\u2019un \u00e9l\u00e8ve gr\u00e2ce \u00e0 son motif.</li> </ul>"},{"location":"roadmap/#module-webapp","title":"Module webapp","text":"<ul> <li>Permet de faire le backend pour travailler avec la base de donn\u00e9e, propose aussi un interface client web pour aider \u00e0 l'administration du robot.</li> <li>Un serveur web flask local avec base de donn\u00e9es dans laquelle se trouvent les \u00e9l\u00e8ves. Cette base de donn\u00e9e contient a minima:</li> <li>nom</li> <li>pr\u00e9nom</li> <li>image carte (chemin vers un dossier local)</li> <li>ann\u00e9e ou date de cr\u00e9ation (RGPD)</li> <li> <p>string: r\u00e9sum\u00e9 du dernier \u00e9change pour des conversations fil\u00e9es</p> </li> <li> <p>Application web permettant :</p> <ul> <li>CRUD : formulaire nom + pr\u00e9nom + image.</li> <li>Avec bouton image qui d\u00e9clenche une photo, en analyse la validit\u00e9 : carte valide (sens, pr\u00e9sence d\u2019une carte), et pas de match d\u2019un motif existant.</li> <li>Puis l\u2019enregistre.</li> <li>Modifier des champs existants.</li> <li>Supprimer un utilisateur.</li> <li>Lire le tableau des utilisateurs.</li> <li>Page de logs (erreurs)</li> </ul> </li> <li> <p>DB question \u00e0 poser avec fen\u00eatre de temps (deux dates), avec une liste d\u00e9finie de r\u00e9ponses possibles : oui/non, ou une \u201cenum\u201d (chat gpt saura retranscrire la r\u00e9ponse de l\u2019\u00e9l\u00e8ve).</p> </li> <li>Champs :<ul> <li>from</li> <li>to</li> <li>question</li> <li>r\u00e9ponse valide</li> <li>Liste <li>Liste des questions actives</li> <li>Liste des r\u00e9ponses \u00e0 une question + nombre d\u2019occurences de chaque r\u00e9ponse</li>"},{"location":"roadmap/#module-ia","title":"Module IA","text":"<ul> <li>Communiquer avec chatgpt</li> </ul>"},{"location":"roadmap/#module-audio-speaker","title":"Module Audio (Speaker)","text":"<ul> <li>Text to speech. Le texte est l\u2019output de l\u2019IA vers speaker.</li> <li>Capable de r\u00e9agir de mani\u00e8re adaptee au public, r\u00e9pondre \u00e0 des questions. R\u00e9ponses courtes.</li> </ul>"},{"location":"roadmap/#module-microphone","title":"Module Microphone","text":"<ul> <li>Speech to text. Capture du son et transformation en texte pour donner en input a l\u2019IA.</li> <li>Partir d\u2019un input (module microphone), pr\u00e9parer un prompt pour obtenir la r\u00e9ponse qui servira d\u2019output (module speaker et module \u00e9cran).</li> <li>Limitations des tokens, r\u00e9ponses courtes. Des sujets de discussions.</li> <li>Donner de la donn\u00e9e concernant le college en apprentissage au mod\u00e8le. (Par exemple renseigner sur les horaires cantines.)</li> <li>Actif sur commande (fonction listen on/off), capable d\u2019\u00e9couter la voix en isolant les bruits parasites et transcrire le contenu en texte.</li> </ul>"},{"location":"roadmap/#liste-des-different-materiel-et-fonctionnement","title":"Liste des diff\u00e9rent mat\u00e9riel et fonctionnement :","text":"<ul> <li> <p>Raspberry PI alimente un microphone, une camera, des hauts-parleurs</p> <ul> <li>Raspberry 4B 4GO</li> <li>2 cartes micro SD 64 GO</li> <li>\u00e9cran tactile LCD tactile</li> <li>c\u00e2ble HDMI vers micro-hdmi</li> <li>alimentation 48W</li> <li>heat sinks</li> <li>camera v3</li> <li>camera HQ</li> <li>objectif camera HQ</li> <li>Nappe c\u00e2ble</li> <li>mini haut parleur usb</li> <li>microphone usb</li> </ul> </li> </ul>"},{"location":"rpi/","title":"Configurer la biblioth\u00e8que pybot sur le Raspberry pi","text":"<ul> <li>notes pour bien configurer linux (Debian) pour que la biblioth\u00e8que fonctionne correctement avec tout les p\u00e9riph\u00e9riques.</li> </ul>"}]}