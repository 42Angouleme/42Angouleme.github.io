{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"La biblioth\u00e8que Pybot","text":"<p>Pybot est une biblioth\u00e8que logicielle permettant \u00e0 des \u00e9l\u00e8ves de coll\u00e9ge \u00e0 programmer eux m\u00eame un robot.</p> <p>Bonjour vous trouverez ici les informations pour utiliser la biblioth\u00e8que pybot avec des exemples concret pour r\u00e9aliser des programmes jusqu'\u00e0 un robot conversationnel complet.</p>"},{"location":"#les-fonctionnalites-du-robot","title":"Les fonctionnalit\u00e9s du robot :","text":"<ul> <li>Une interface graphique pour int\u00e9ragir avec le robot.</li> <li>Une reconnaissance visuelle par cam\u00e9ra (pas biom\u00e9trique comme le visage mais des dessins sur cartes).</li> <li>Des fonctionnalit\u00e9s de communication avec une IA utilisant un microphone et un haut parleur.</li> <li>Une base de donn\u00e9e et une administration web pour configurer le robot, par exemple: enregistrer les cartes d'identification des \u00e9l\u00e8ves.</li> </ul>"},{"location":"#utilisation-de-la-bibliotheque","title":"Utilisation de la biblioth\u00e8que","text":"<pre><code>print(\"bonjour, pybot\")\n</code></pre> <p>Pybot est une biblioth\u00e8que avec une Class Robot que l'on peut utiliser pour faire un programme graphique.</p> <p>Voici les m\u00e9thodes et des exemples d'utilisation:</p>"},{"location":"#pour-demarrer-nous-avons-besoin-dimporter-la-bibliotheque-et-de-demarrer-le-robot","title":"Pour demarrer nous avons besoin d'importer la biblioth\u00e8que et de d\u00e9marrer le robot :","text":"<pre><code>from pybot import Robot\n\nrobot = Robot()\n</code></pre>"},{"location":"#pour-allumer-lecran-avec-une-longueur-et-une-hauteur","title":"Pour allumer l'\u00e9cran avec une longueur et une hauteur :","text":"<pre><code>robot.allumer_ecran(800, 600)\n</code></pre>"},{"location":"#pour-eteindre-lecran","title":"Pour \u00e9teindre l'\u00e9cran :","text":"<pre><code>robot.eteindre_ecran()\n</code></pre>"},{"location":"#pour-changer-le-titre","title":"Pour changer le titre :","text":"<pre><code>robot.changer_titre(\"Exemple 1\")\n</code></pre>"},{"location":"#pour-terminer-le-programme-nous-avons-besoin-de-lancer-la-boucle","title":"Pour terminer le programme nous avons besoin de lancer la boucle :","text":"<pre><code>robot.lancer_boucle()\n</code></pre>"},{"location":"#un-exemple-de-programme-complet","title":"Un exemple de programme complet :","text":"<pre><code>from pybot import Robot\n\nrobot = Robot()\n\nrobot.allumer_ecran()\n\nrobot.changer_titre(\"Exemple 1\")\n\nrobot.lancer_boucle()\n</code></pre>"},{"location":"#pour-ajouter-un-bouton-avec-le-nom-du-bouton-et-la-fonction-executee-au-click-de-ce-bouton","title":"Pour ajouter un bouton, avec le nom du bouton et la fonction execut\u00e9e au click de ce bouton :","text":"<pre><code>robot.ajouter_bouton(\"Quitter\", robot.eteindre_ecran)\n</code></pre>"},{"location":"#pour-afficher-la-camera","title":"Pour afficher la cam\u00e9ra :","text":"<pre><code>robot.afficher_camera()\n</code></pre>"},{"location":"#pour-eteindre-la-camera","title":"Pour \u00e9teindre la cam\u00e9ra :","text":"<pre><code>robot.\u00e9teindre_camera()\n</code></pre>"},{"location":"#pour-enregistrer-une-photo","title":"Pour enregistrer une photo :","text":"<pre><code>robot.enregistrer_photo()\n</code></pre>"},{"location":"#pour-afficher-une-photo","title":"Pour afficher une photo :","text":"<pre><code>robot.afficher_photo()\n</code></pre>"},{"location":"#pour-supprimer-une-photo","title":"Pour supprimer une photo :","text":"<pre><code>robot.supprimer_photo()\n</code></pre>"},{"location":"#pour-afficher-un-visage","title":"Pour afficher un visage :","text":"<pre><code>robot.afficher_visage_triste()\nrobot.afficher_visage_content()\nrobot.afficher_visage_colere()\nrobot.afficher_visage_fier()\n</code></pre>"},{"location":"#pour-appliquer-un-filtre-sur-une-photo","title":"Pour appliquer un filtre sur une photo :","text":"<pre><code>robot.appliquer_filtre_noir_et_blanc()\nrobot.appliquer_filtre_amour()\nrobot.tourner_photo()\n</code></pre>"},{"location":"#un-autre-exemple-de-programme-complet","title":"Un autre exemple de programme complet :","text":"<pre><code>from pybot import Robot\n\nrobot = Robot()\n\nlongueur = 800\nhauteur = 600\n\nrobot.allumer_ecran(longueur, hauteur)\n\nrobot.changer_titre(\"Exemple 2\")\n\nrobot.ajouter_bouton(\"Quitter\", robot.eteindre_ecran)\nrobot.ajouter_bouton(\"Afficher visage\", robot.afficher_visage_content)\n\nrobot.lancer_boucle()\n</code></pre>"},{"location":"#objectif-du-programme-a-realiser-aujourdhui","title":"Objectif du programme \u00e0 r\u00e9aliser aujourd'hui:","text":"<pre><code>Faire un programme qui affiche la cam\u00e9ra, prend une photo et qui applique un filtre sur la photo.\n</code></pre>"},{"location":"config/","title":"Configurer l'\u00e9diteur VS Code pour programmer le robot","text":"<p>Pour installer les d\u00e9pendances <pre><code>git clone git@github.com:42Angouleme/initiation_python.git\ncd initiation_python\npython -m venv venv\nsource venv/bin/activate\npip install -r requirements.txt\n</code></pre></p> <p>Pour pr\u00e9parer vscode <pre><code>code --install-extension ms-python.python\ncode --install-extension MS-CEINTL.vscode-language-pack-fr\ncd initiation_python\ncode main.py\n</code></pre></p>"},{"location":"config/#cliquer-sur-licone-extension","title":"Cliquer sur l'icone extension","text":""},{"location":"config/#chercher-python-et-installer","title":"Chercher python et installer","text":""},{"location":"config/#python-est-installe","title":"Python est install\u00e9","text":""},{"location":"config/#ouvrir-lexplorateur-de-fichiers","title":"Ouvrir l'explorateur de fichiers","text":""},{"location":"config/#creer-un-nouveau-fichier","title":"Cr\u00e9er un nouveau fichier","text":""},{"location":"config/#nommer-le-fichier","title":"Nommer le fichier","text":""},{"location":"config/#ecrire-son-code-dans-le-fichier","title":"\u00c9crire son code dans le fichier","text":""},{"location":"config/#lancer-le-programme","title":"Lancer le programme","text":""},{"location":"config/#configurer-la-librairie-pybot-sur-debian-la-distribution-linux-sur-le-raspberry-pi","title":"Configurer la librairie pybot sur Debian (La distribution linux sur le raspberry pi)","text":""},{"location":"contribute/","title":"Contribuer au projet Pybot","text":"<p>L'objectif est de cr\u00e9er une biblioth\u00e8que logicielle qui permettra \u00e0 des \u00e9l\u00e8ves de coll\u00e8ge de niveau 3\u00e9me de r\u00e9aliser un robot par eux m\u00eame (Tout en s'initiant \u00e0 la programmation Python).</p> <p>Il existe deux d\u00e9p\u00f4ts public sur github, l'un avec la biblioth\u00e8que pybot et l'autre avec la d\u00e9mo qui a servi aux coll\u00e8giens lors de la journ\u00e9e d'immersion \u00e0 l'\u00e9cole de 42 Angoul\u00eame le 27 Novembre 2023.</p> <p>La d\u00e9mo est archiv\u00e9e est sert seulement comme r\u00e9f\u00e9rence, le d\u00e9veloppement se d\u00e9roule exclusivement sur le d\u00e9p\u00f4t de la biblioth\u00e8que pybot et les tickets sont tous rassembl\u00e9s ici.</p>"},{"location":"contribute/#installation-du-projet","title":"Installation du projet","text":"<p>La biblioth\u00e8que utilise le language Python avec un grand nombre de d\u00e9pendances (pygame, flask, opencv...), pour l'installer en local il suffit de cloner le d\u00e9p\u00f4t, installer un environnement virtuel python avec les d\u00e9pendances.</p> <pre><code>git clone git@github.com:42Angouleme/pybot.git\ncd pybot\npython3 -m venv venv\nsource venv/bin/activate\npython3 -m pip install -r requirements.txt\n</code></pre>"},{"location":"contribute/#exploration-et-creation-de-tickets","title":"Exploration et cr\u00e9ation de tickets","text":"<p>Pour participer au d\u00e9veloppement vous pouvez explorer les diff\u00e9rents tickets en cours ou bien en ajouter de nouveaux.</p> <p></p> <p>Pour ajouter un ticket, il suffit de donner une indication sur le bug \u00e0 corriger ou la fonctionnalit\u00e9 \u00e0 ajouter. Il est aussi int\u00e9ressant de mettre des tags pour indiquer quel est le type du ticket. Par exemple, un ticket avec le tag good first issue est utile pour signifier aux nouveaux d\u00e9veloppeurs qui souhaitent contribuer que ce ticket est un point d'entr\u00e9e interressant pour d\u00e9couvrir et commencer \u00e0 participer au code.</p> <p></p> <p>Une fois que le ticket est cr\u00e9\u00e9, tout le monde peut participer \u00e0 la discussion pour aider \u00e0 la r\u00e9solution du probl\u00e8me. Lorsque vous souhaitez adopter un ticket pour le r\u00e9soudre il suffit de s'assigner \u00e0 soi-m\u00eame la r\u00e9solution du ticket (que ce soit le votre ou un ticket disponible qui est assign\u00e9 \u00e0 personne) et de cr\u00e9er la branche depuis le ticket (ce qui permet de fermer automatiquement le ticket lorsque la branche sera merge \u00e0 la branche main).</p> <p></p> <p></p> <p>Apr\u00e9s avoir cr\u00e9\u00e9 la branche, il faut la r\u00e9cup\u00e9rer sur son code localement.</p> <pre><code>git fetch origin\ngit checkout numero-nom-de-la-branche\n</code></pre> <p>Il suffit ensuite de faire les modifications.</p> <p></p>"},{"location":"contribute/#resolution-de-tickets","title":"R\u00e9solution de tickets","text":"<p>Une fois que l'on a r\u00e9solu le ticket, l'objectif est d'amener sa contribution \u00e0 \u00eatre ajout\u00e9 \u00e0 la base de code principale (merge). Avec git on ajoute ses modifications sur la branche que l'on pousse sur le d\u00e9p\u00f4t.</p> <p></p> <p>En retournant sur la page du d\u00e9p\u00f4t on constate maintenant qu'il est possible de cr\u00e9er une pull request. La pull request ne bloque pas la branche, il est ensuite toujours possible de faire d'autres modifications sur la branche. Toutes les modifications pouss\u00e9es sur la branche d'une pull request seront automatiquement ajout\u00e9es au futur merge.</p> <p></p> <p>Comme les tickets, les pull requests sont des espaces de discussions ouvert \u00e0 tous et am\u00e9liorable jusqu'\u00e0 ce que le mainteneur valide et merge votre branche \u00e0 la branche main.</p> <p></p> <p>Il existe une liste des pull request comme il existe une liste de ticket (issues).</p> <p></p> <p>Quand le mainteneur fera le merge il supprimera la branche (ce qui supprimera par la m\u00eame occasion le ticket li\u00e9).</p> <p></p> <p>La branche est merge et la modification est ajout\u00e9e \u00e0 la branche main principale.</p> <p></p> <p>Bravo, vous savez maintenant contribuer \u00e0 un projet open source.</p>"},{"location":"python/","title":"Apprendre python","text":"<p>Un cours d'initiation au language python avec des exemples.</p>"},{"location":"python/#1-les-variables","title":"1. Les Variables","text":"<p>Une variable est une mani\u00e8re de stocker une donn\u00e9e. La variable doit avoir un type pour d\u00e9finir la donn\u00e9e stock\u00e9e.</p> <p>Les types possibles sont: - int =&gt; Chiffre ou nombre - str =&gt; Caract\u00e8re ou cha\u00eene de caract\u00e8res - bool =&gt; Boolean True (\"Vrai\") ou False (\"Faux\") - ...</p>"},{"location":"python/#exemple","title":"Exemple:","text":"<pre><code>un_bool = True\nun_int = 42\nune_str = \"Coucou\"\n\nprint(\"Ceci est un boolean:\", un_bool)\nprint(\"Ceci est un integer:\", un_int)\nprint(\"Ceci est une chaine de caracteres:\", une_str)\n</code></pre>"},{"location":"python/#2-les-fonctions","title":"2. Les fonctions","text":"<p>Les fonctions d\u00e9finissent des actions \u00e0 faire lors de leur appel. Une fonction est constitu\u00e9e de son nom, des param\u00e8tres pris en entr\u00e9e et de son type de retour.</p>"},{"location":"python/#exemple_1","title":"Exemple:","text":"<pre><code># Cette fonction affiche \"bonjour\"\ndef afficher_bonjour():\n    print(\"Bonjour\")\n\n# Cette fonction affiche le contenu de mot\ndef afficher_argument(mot=\"Salut\"):\n    print(mot)\n\n# Cette fonction affiche \"Coucou\" et renvoi le m\u00eame mot\ndef afficher_et_renvoyer_coucou() -&gt; str:\n    mot = \"Coucou\"\n    print(mot)\n    return mot\n\ndef main():\n    afficher_bonjour()\n    afficher_argument(\"Bonjour \u00e0 tous, je suis un argument\")\n    afficher_argument()\n    retour = afficher_et_renvoyer_coucou()\n    print(\"retour =\", retour)\n</code></pre>"},{"location":"python/#3-les-conditions","title":"3. Les conditions","text":"<p>Les conditions permettent de limiter l'ex\u00e9cution d'une action si et seulement si la condition est valide.</p>"},{"location":"python/#exemple_2","title":"Exemple:","text":"<pre><code>def positif_ou_negatif(nombre: int):\n    if nombre &gt; 0:\n        print(nombre, \"est positif !\")\n    else:\n        print(nombre, \"est negatif !\")\n</code></pre>"},{"location":"python/#4-les-boucles","title":"4. Les Boucles","text":"<p>Les boucles sont des \u00e9l\u00e9ments qui permettent de r\u00e9p\u00e9ter une action, un nombre de fois d\u00e9finit par la condition d'arr\u00eat.</p>"},{"location":"python/#exemple_3","title":"Exemple:","text":"<pre><code>def dire_bonjour_a_tous_les_etudiants(nombre_etudiants: int):\n    indice = 1\n    while indice &lt;= nombre_etudiants:\n        print(\"Bonjour etudiant numero\", indice, \"\\n\")\n        indice = indice + 1\n</code></pre>"},{"location":"python/#5-les-classes","title":"5. Les classes","text":"<p>Les classes sont des structures de code qui d\u00e9finissent un objet et les comportements qu'il peut r\u00e9aliser. Comme dans l'exemple suivant, vous pouvez importer une classes \"Robot\" depuis la biblioth\u00e8que \"Robot\".  Ensuite, il vous faut cr\u00e9er un objet Robot, avec ici un nom et un \u00e2ge. Par la suite, vous pouvez donner des ordres \u00e0 votre robot, en faisant appel aux m\u00e9thodes que la classes Robot contient.</p>"},{"location":"python/#exemple_4","title":"Exemple:","text":"<p>```python {.line-numbers} from pybot import Robot</p> <p>def main():     robot = Robot(\"Nono\", 11)     robot.dire_bonjour()     robot.rendre_muet()     robot.dire_bonjour()     robot.donner_la_parole()     robot.dire_bonjour() ```</p>"},{"location":"roadmap/","title":"Progression g\u00e9n\u00e9rale","text":"<p>L'objectif est d'obtenir une librairie qui permettra aux \u00e9l\u00e8ves d'interagir avec lui par la voix, le texte et l\u2019image. Une IA (conversationnelle) interagira avec eux. Ce robot aura pour fonction principale d'accueillir le public dans le Hall de l'\u00e9tablissement et pourrait par exemple, si entrain\u00e9 avec les donn\u00e9es du coll\u00e8ge, r\u00e9pondre \u00e0 des questions comme: \"Que mange t'on ce midi \u00e0 la cantine ?\".</p> <p>Le projet se d\u00e9coupe en deux niveaux, la classe g\u00e9n\u00e9rale Robot qui doit avoir des m\u00e9thodes acc\u00e9dant \u00e0 toutes les fonctionnalit\u00e9s des modules de mani\u00e8re simple, correctement nomm\u00e9es et document\u00e9es (en fran\u00e7ais) pour l'utilisation par les \u00e9l\u00e8ves.</p> <p>Les modules, avec leurs fonctionnalit\u00e9s plus bas niveau doivent aussi \u00e9tre document\u00e9 pour que les \u00e9tudiants de 42 puisse s'int\u00e9grer plus facilement et participer au d\u00e9veloppement.</p>"},{"location":"roadmap/#liste-des-fonctionnalites-de-la-classe-robot-et-leur-avancement","title":"Liste des fonctionnalit\u00e9s de la classe Robot et leur avancement:","text":""},{"location":"roadmap/#liste-des-different-modules-et-leur-avancement","title":"Liste des diff\u00e9rent modules et leur avancement:","text":""},{"location":"roadmap/#module-ecran","title":"Module \u00e9cran","text":"<ul> <li>Wrapper pygame et pygame_gui</li> <li>Visage minimaliste avec expressions. S\u2019anime en cas de connexion ou r\u00e9agit aux erreurs.</li> <li>Possibilit\u00e9 d'affichage de texte d\u00e9filant des interactions, pouvant remplacer le speaker.</li> <li> <p>Un application graphique (pygame GUI) client pour afficher le stream camera, des boutons, du texte ou des images depuis la base de donn\u00e9es.</p> </li> <li> <p>D\u00e8s l\u2019identification :</p> </li> <li>saluer, variable</li> <li>d\u00e9clencher les questions pr\u00e9-enregistr\u00e9es actives de la DB</li> <li>\u00e9change libre</li> </ul>"},{"location":"roadmap/#module-camera","title":"Module cam\u00e9ra","text":"<ul> <li>[x] Reconnaissance (identification) via la cam\u00e9ra d\u2019un \u00e9l\u00e8ve gr\u00e2ce \u00e0 son motif.</li> </ul>"},{"location":"roadmap/#module-webapp","title":"Module webapp","text":"<ul> <li>Permet de faire le backend pour travailler avec la base de donn\u00e9e, propose aussi un interface client web pour aider \u00e0 l'administration du robot.</li> <li>Un serveur web flask local avec base de donn\u00e9es dans laquelle se trouvent les \u00e9l\u00e8ves. Cette base de donn\u00e9e contient a minima:</li> <li>nom</li> <li>pr\u00e9nom</li> <li>image carte (chemin vers un dossier local)</li> <li>ann\u00e9e ou date de cr\u00e9ation (RGPD)</li> <li> <p>string: r\u00e9sum\u00e9 du dernier \u00e9change pour des conversations fil\u00e9es</p> </li> <li> <p>Application web permettant :</p> <ul> <li>CRUD : formulaire nom + pr\u00e9nom + image.</li> <li>Avec bouton image qui d\u00e9clenche une photo, en analyse la validit\u00e9 : carte valide (sens, pr\u00e9sence d\u2019une carte), et pas de match d\u2019un motif existant.</li> <li>Puis l\u2019enregistre.</li> <li>Modifier des champs existants.</li> <li>Supprimer un utilisateur.</li> <li>Lire le tableau des utilisateurs.</li> <li>Page de logs (erreurs)</li> </ul> </li> <li> <p>DB question \u00e0 poser avec fen\u00eatre de temps (deux dates), avec une liste d\u00e9finie de r\u00e9ponses possibles : oui/non, ou une \u201cenum\u201d (chat gpt saura retranscrire la r\u00e9ponse de l\u2019\u00e9l\u00e8ve).</p> </li> <li>Champs :<ul> <li>from</li> <li>to</li> <li>question</li> <li>r\u00e9ponse valide</li> <li>Liste <li>Liste des questions actives</li> <li>Liste des r\u00e9ponses \u00e0 une question + nombre d\u2019occurences de chaque r\u00e9ponse</li>"},{"location":"roadmap/#module-ia","title":"Module IA","text":"<ul> <li>Communiquer avec chatgpt</li> </ul>"},{"location":"roadmap/#module-audio-speaker","title":"Module Audio (Speaker)","text":"<ul> <li>Text to speech. Le texte est l\u2019output de l\u2019IA vers speaker.</li> <li>Capable de r\u00e9agir de mani\u00e8re adaptee au public, r\u00e9pondre \u00e0 des questions. R\u00e9ponses courtes.</li> </ul>"},{"location":"roadmap/#module-microphone","title":"Module Microphone","text":"<ul> <li>Speech to text. Capture du son et transformation en texte pour donner en input a l\u2019IA.</li> <li>Partir d\u2019un input (module microphone), pr\u00e9parer un prompt pour obtenir la r\u00e9ponse qui servira d\u2019output (module speaker et module \u00e9cran).</li> <li>Limitations des tokens, r\u00e9ponses courtes. Des sujets de discussions.</li> <li>Donner de la donn\u00e9e concernant le college en apprentissage au mod\u00e8le. (Par exemple renseigner sur les horaires cantines.)</li> <li>Actif sur commande (fonction listen on/off), capable d\u2019\u00e9couter la voix en isolant les bruits parasites et transcrire le contenu en texte.</li> </ul>"},{"location":"roadmap/#liste-des-different-materiel-et-fonctionnement","title":"Liste des diff\u00e9rent mat\u00e9riel et fonctionnement :","text":"<ul> <li> <p>Raspberry PI alimente un microphone, une camera, des hauts-parleurs</p> <ul> <li>Raspberry 4B 4GO</li> <li>2 cartes micro SD 64 GO</li> <li>\u00e9cran tactile LCD tactile</li> <li>c\u00e2ble HDMI vers micro-hdmi</li> <li>alimentation 48W</li> <li>heat sinks</li> <li>camera v3</li> <li>camera HQ</li> <li>objectif camera HQ</li> <li>Nappe c\u00e2ble</li> <li>mini haut parleur usb</li> <li>microphone usb</li> </ul> </li> </ul>"},{"location":"roadmap/#documentation","title":"Documentation","text":"<ul> <li>Documentation en fran\u00e7ais, accessible par le web, d\u00e9crivant les fonctions et fonctionnalit\u00e9s du robot.</li> </ul>"}]}