{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"La biblioth\u00e8que Pybot","text":"<p>Ce qu'est Pybot</p> <p>Pybot est une biblioth\u00e8que logicielle permettant \u00e0 des \u00e9l\u00e8ves de coll\u00e8ge de programmer eux m\u00eame un robot immobile.</p> <p>Vous trouverez ici les informations pour utiliser la biblioth\u00e8que pybot avec des exemples concret pour r\u00e9aliser des programmes d'un simple affichage de cam\u00e9ra jusqu'\u00e0 un robot conversationnel complet.</p>"},{"location":"#les-fonctionnalites-du-robot","title":"Les fonctionnalit\u00e9s du robot","text":"<p>Le robot complet.</p> <p>Le Robot a \u00e9t\u00e9 pens\u00e9 pour fonctionner sur un Raspberry Pi configur\u00e9 avec Linux (Debian). Un \u00e9cran pour le visage, une cam\u00e9ra pour les yeux, un haut-parleur pour la bouche et un microphone pour les oreilles. La coquille entourant le raspberry pi est libre d'interpr\u00e9tation esth\u00e9tique.</p> <p>Avec la biblioth\u00e8que, vous avez acc\u00e8s aux modules :</p> <p>Robot : Module principal regroupant tous les autres modules et servant de corps au code du robot. Fen\u00eatre - Window: Module permettant de construire une interface graphique pour interagir avec le robot. Cam\u00e9ra - Camera : Module permettant de prendre des photos, d\u2019y appliquer des filtres, reconnaissance par cam\u00e9ra (pas biom\u00e9trique comme le visage, mais des dessins sur cartes). IA - AI : Module permettant de discuter avec le robot gr\u00e2ce \u00e0 une IA conversationnelle de type ChatGPT et permettant aussi de donner des \"\u00e9motions\" au robot. Utilisateur - User : Module permettant de cr\u00e9er et de g\u00e9rer la connexion/d\u00e9connexion des utilisateurs \u00e0 l'aide des cartes. Audio (Non fonctionnel) : Module permettant \u00e0 l\u2019utilisateur de parler directement au robot. Microphone (Non fonctionnel) : Module permettant au robot de parler \u00e0 l\u2019utilisateur.</p> <p>Avant d'utiliser un module</p> <p>Avant d\u2019utiliser un module, il faudra toujours le lancer sinon il vous sera impossible d\u2019utiliser le module et les m\u00e9thodes lier \u00e0 celui-ci.</p> <p>Important</p> <p>Les exemples d'utilisation des m\u00e9thodes sont en fran\u00e7ais et en anglais. Et il suppose pour la plus part d'avoir d\u00e9j\u00e0 un code de base fonctionnel pour le robot. Seul les exemples complet de programme sont en fran\u00e7ais et ne suppose pas d'avoir un code de base.</p>"},{"location":"#utilisation-de-la-bibliotheque","title":"Utilisation de la biblioth\u00e8que","text":"<pre><code>print(\"bonjour, Pybot!\")\n</code></pre> <p>Pybot se pr\u00e9sente comme un objet avec des m\u00e9thodes et des sous-objets (modules pr\u00e9sent\u00e9s ci-dessus) que l\u2019on peut utiliser ensemble pour faire le programme et ainsi cr\u00e9er le robot. Les chapitres suivants vont vous pr\u00e9senter les diff\u00e9rentes m\u00e9thodes et modules possibles avec des exemples d'utilisation.</p> <p>Avant de suivre ce tutoriel, vous souhaitez peut-\u00eatre savoir\u00a0comment configurer et utiliser pybot.</p> <p>Ensuite, pour d\u00e9marrer \u00e0 programmer le robot, il faudra toujours commencer par ces deux lignes de code.</p> <pre><code>from pybot import Robot\n\nrobot = Robot()\n</code></pre> <p>Ce robot est utilisable en fran\u00e7ais et en anglais. En effet, toutes les m\u00e9thodes et les modules pr\u00e9sent\u00e9s dans la suite de la documentation sont disponibles en fran\u00e7ais comme en anglais (avec les commentaires des fonctions traduits aussi). Le m\u00e9lange des langues et d\u2019ailleurs possible m\u00eame si fortement d\u00e9conseiller pour des questions de lisibilit\u00e9 et de compr\u00e9hension du code.</p>"},{"location":"admin/","title":"Utiliser l'administration web","text":""},{"location":"admin/#ajouter-une-nouvelle-carte-eleve","title":"Ajouter une nouvelle carte \u00e9l\u00e8ve","text":""},{"location":"button/","title":"Les Boutons - Buttons","text":"<p>Les boutons sont des \u00e9l\u00e9ments graphiques qui permettent \u00e0 l'utilisateur d'interagir avec le robot. Ils sont utilis\u00e9s pour d\u00e9clencher des actions lorsqu'ils sont cliqu\u00e9s.</p>"},{"location":"button/#creer-un-bouton","title":"Cr\u00e9er un bouton","text":"<p>Voir la documentation de la fen\u00eatre.</p> <p>Apr\u00e8s avoir cr\u00e9\u00e9 un bouton, vous obtenez un objet (le bouton) qui vous permet de manipuler et personnaliser le bouton. Pour cela, vous pouvez utiliser les m\u00e9thodes qui vont vous \u00eatre pr\u00e9sent\u00e9es ci-dessous.</p> <p>Attention</p> <p>Les m\u00e9thodes pr\u00e9sent\u00e9es ci-dessous sont utilisables uniquement sur un objet cr\u00e9\u00e9 par la m\u00e9thode <code>creer_bouton() (fr) - create_button() (en)</code>.</p>"},{"location":"button/#ajouter-un-texte-au-bouton","title":"Ajouter un texte au bouton","text":"<p>Pour afficher le fond de la fen\u00eatre, il suffit d\u2019appeler la m\u00e9thode <code>ajouter_texte(texte : str, position_x : int, position_y : int, taille : int, couleur : Couleur) (fr) - add_text(text : str, position_x : int, position_y : int, size : int, color : Couleur) (en)</code>.</p> <p>Ajouter un texte au bouton</p> <pre><code>bouton = robot.fenetre.creer_bouton(100, 100, 100, 100, Couleur.BLANC)\nbouton.ajouter_texte(\"Cliquez-moi\", 10, 10, 20, Couleur.NOIR)\n\nou alors\n\nbutton = robot.window.create_button(100, 100, 100, 100, Couleur.BLANC)\nbutton.add_text(\"Click me\", 10, 10, 20, Couleur.NOIR)\n</code></pre>"},{"location":"button/#afficher-le-bouton","title":"Afficher le bouton","text":"<p>Quand vous cr\u00e9ez un bouton, il n'est pas affich\u00e9 dans la fen\u00eatre. Pour l'afficher, il suffit d\u2019appeler la m\u00e9thode <code>afficher() (fr) - display() (en)</code>.</p> <p>Afficher le bouton</p> <pre><code>bouton = robot.fenetre.creer_bouton(100, 100, 100, 100, Couleur.BLANC)\nbouton.afficher()\n\nou alors\n\nbutton = robot.window.create_button(100, 100, 100, 100, Couleur.BLANC)\nbutton.display()\n</code></pre>"},{"location":"button/#verifier-si-le-bouton-est-clique","title":"V\u00e9rifier si le bouton est cliqu\u00e9","text":"<p>Pour v\u00e9rifier si le bouton est cliqu\u00e9, il suffit d\u2019appeler la m\u00e9thode <code>est_actif() (fr) - is_active() (en)</code>. Cela permet de savoir si le bouton a \u00e9t\u00e9 cliqu\u00e9 ou non pour ainsi d\u00e9clencher une action.</p> <p>Warning</p> <p>Il faut absolument que la fonction verifier_evenements() soit appel\u00e9e pour que la m\u00e9thode est_actif() fonctionne.</p> <p>V\u00e9rifier si le bouton est cliqu\u00e9</p> <pre><code>bouton = robot.fenetre.creer_bouton(100, 100, 100, 100, Couleur.BLANC)\nbouton.afficher()\nif bouton.est_actif():\n    print(\"Le bouton a \u00e9t\u00e9 cliqu\u00e9\")\n\nou alors\n\nbutton = robot.window.create_button(100, 100, 100, 100, Couleur.BLANC)\nbutton.display()\nif button.is_active():\n    print(\"The button has been clicked\")\n</code></pre>"},{"location":"button/#exemple-complet","title":"Exemple complet","text":"<pre><code>from pybot import Robot, Couleur\n\nrobot = Robot()\nrobot.demarrer_module_fenetre()\n\nrobot.fenetre.ouvrir_fenetre(1200, 900)\n\nboutons = robot.attributs.boutons\nboutons.quitter = robot.fenetre.creer_bouton(100, 100, 100, 100, Couleur.BLANC)\nboutons.quitter.ajouter_texte(\"quitter\", 10, 10, 20, Couleur.NOIR)\n\nwhile robot.est_actif():\n    boutons = robot.attributs.boutons\n    robot.verifier_evenements()\n    boutons.quitter.afficher()\n    if boutons.quitter.est_actif():\n        robot.desactiver()\n    robot.fenetre.actualiser_affichage()\n</code></pre> <p>Conseil</p> <p>Il est conseill\u00e9 de mettre un nom diff\u00e9rent \u00e0 chaque bouton dans les attributs pour ne pas \u00e9craser le bouton qui etait d\u00e9j\u00e0 enregistr\u00e9 sous ce nom.</p> <p>Voir la documentation sur les attributs du robot pour plus d'informations.</p>"},{"location":"config/","title":"Configurer l'\u00e9diteur VS Code pour programmer le robot.","text":""},{"location":"config/#configurer-lenvironnement-python-et-installer-les-dependances","title":"Configurer l'environnement python et installer les d\u00e9pendances","text":"<p>Commandes :</p> <pre><code>git clone git@github.com:42Angouleme/pybot.git\ncd pybot\npython -m venv venv\nsource venv/bin/activate\npip install -r requirements.txt\n</code></pre>"},{"location":"config/#lancer-le-programme-principal","title":"Lancer le programme principal","text":"<p>Commandes :</p> <p>Utiliser la commande python avec le nom du fichier terminant avec .py o\u00f9 se trouve le programme.</p> <pre><code>python3 main.py\n</code></pre>"},{"location":"config/#pour-preparer-vscode","title":"Pour pr\u00e9parer vscode","text":"<p>Commandes :</p> <pre><code>code --install-extension ms-python.python\ncode --install-extension MS-CEINTL.vscode-language-pack-fr\ncd pybot\ncode main.py\n</code></pre>"},{"location":"config/#cliquer-sur-licone-extension","title":"Cliquer sur l'icone extension","text":""},{"location":"config/#chercher-python-et-installer","title":"Chercher python et installer","text":""},{"location":"config/#python-est-installe","title":"Python est install\u00e9","text":""},{"location":"config/#ouvrir-lexplorateur-de-fichiers","title":"Ouvrir l'explorateur de fichiers","text":""},{"location":"config/#creer-un-nouveau-fichier","title":"Cr\u00e9er un nouveau fichier","text":""},{"location":"config/#nommer-le-fichier","title":"Nommer le fichier","text":""},{"location":"config/#ecrire-son-code-dans-le-fichier","title":"\u00c9crire son code dans le fichier","text":""},{"location":"config/#lancer-le-programme","title":"Lancer le programme","text":""},{"location":"contribute/","title":"Contribuer au projet Pybot","text":"<p>L'objectif est de cr\u00e9er une biblioth\u00e8que logicielle qui permettra \u00e0 des \u00e9l\u00e8ves de coll\u00e8ge de niveau 3\u00e9me de r\u00e9aliser un robot par eux m\u00eame (Tout en s'initiant \u00e0 la programmation Python).</p> <p>Il existe trois d\u00e9p\u00f4ts github publics li\u00e9s au projet : - La biblioth\u00e8que pybot  - La documentation du projet (que tu lis actuellement)  - La d\u00e9mo (archive) qui a servi aux coll\u00e9giens lors de la journ\u00e9e d'immersion \u00e0 l'\u00e9cole de 42 Angoul\u00eame le 27 Novembre 2023.</p> <p>La d\u00e9mo est archiv\u00e9e et sert seulement comme r\u00e9f\u00e9rence, le d\u00e9veloppement se d\u00e9roule exclusivement sur le d\u00e9p\u00f4t de la biblioth\u00e8que pybot et les tickets sont rassembl\u00e9s ici.</p>"},{"location":"contribute/#installation-du-projet","title":"Installation du projet","text":"<p>La biblioth\u00e8que utilise le language Python (&gt;3.10) avec un grand nombre de d\u00e9pendances (pygame, flask, opencv...). Pour l'installer en local il suffit de cloner le d\u00e9p\u00f4t, installer un environnement virtuel python avec les d\u00e9pendances.</p> <p>Commandes :</p> <pre><code>git clone git@github.com:42Angouleme/pybot.git\ncd pybot\npython3 -m venv venv\nsource venv/bin/activate\npython3 -m pip install -r requirements.txt\n</code></pre>"},{"location":"contribute/#ajouter-un-package-python-et-mettre-a-jour-le-fichier-requirementstxt","title":"Ajouter un package python et mettre \u00e0 jour le fichier requirements.txt","text":"<p>Commandes :</p> <pre><code>python3 -m pip install &lt;package_name&gt;\npython3 -m pip freeze &gt; requirements.txt\n</code></pre>"},{"location":"contribute/#exploration-et-creation-de-tickets","title":"Exploration et cr\u00e9ation de tickets","text":"<p>Pour participer au d\u00e9veloppement vous pouvez explorer les diff\u00e9rents tickets en cours ou bien en ajouter de nouveaux.</p> <p></p> <p>Pour ajouter un ticket, il suffit de donner une indication sur le bug \u00e0 corriger ou la fonctionnalit\u00e9 \u00e0 ajouter. Il est aussi int\u00e9ressant de mettre des tags pour indiquer quel est le type du ticket. Par exemple, un ticket avec le tag good first issue est utile pour signifier aux nouveaux d\u00e9veloppeurs qui souhaitent contribuer que ce ticket est un point d'entr\u00e9e interressant pour d\u00e9couvrir et commencer \u00e0 participer au code.</p> <p></p> <p>Une fois que le ticket est cr\u00e9\u00e9, tout le monde peut participer \u00e0 la discussion pour aider \u00e0 la r\u00e9solution du probl\u00e8me. Lorsque vous souhaitez adopter un ticket pour le r\u00e9soudre il suffit de s'assigner \u00e0 soi-m\u00eame la r\u00e9solution du ticket (que ce soit le votre ou un ticket disponible qui est assign\u00e9 \u00e0 personne) et de cr\u00e9er la branche depuis le ticket (ce qui permet de fermer automatiquement le ticket lorsque la branche sera merge \u00e0 la branche main).</p> <p></p> <p></p> <p>Apr\u00e9s avoir cr\u00e9\u00e9 la branche, il faut la r\u00e9cup\u00e9rer sur son code localement.</p> <pre><code>git fetch origin\ngit checkout numero-nom-de-la-branche\n</code></pre> <p>Il suffit ensuite de faire les modifications.</p> <p></p>"},{"location":"contribute/#resolution-de-tickets","title":"R\u00e9solution de tickets","text":"<p>Une fois que l'on a r\u00e9solu le ticket, l'objectif est d'amener sa contribution \u00e0 \u00eatre ajout\u00e9 \u00e0 la base de code principale (merge). Avec git on ajoute ses modifications sur la branche que l'on pousse sur le d\u00e9p\u00f4t.</p> <p></p> <p>En retournant sur la page du d\u00e9p\u00f4t on constate maintenant qu'il est possible de cr\u00e9er une pull request. La pull request ne bloque pas la branche, il est ensuite toujours possible de faire d'autres modifications sur la branche. Toutes les modifications pouss\u00e9es sur la branche d'une pull request seront automatiquement ajout\u00e9es au futur merge.</p> <p></p> <p>Comme les tickets, les pull requests sont des espaces de discussions ouvert \u00e0 tous et am\u00e9liorable jusqu'\u00e0 ce que le mainteneur valide et merge votre branche \u00e0 la branche main.</p> <p></p> <p>Il existe une liste des pull request comme il existe une liste de ticket (issues).</p> <p></p> <p>Quand le mainteneur fera le merge il supprimera la branche (ce qui supprimera par la m\u00eame occasion le ticket li\u00e9).</p> <p></p> <p>La branche est merge et la modification est ajout\u00e9e \u00e0 la branche main principale.</p> <p></p> <p>Bravo, vous savez maintenant contribuer \u00e0 un projet open source.</p>"},{"location":"doc/","title":"The Pybot documentation","text":"<p>The pybot documentation use mkdocs https://www.mkdocs.org/ and the material theme https://squidfunk.github.io/mkdocs-material/.</p>"},{"location":"doc/#install-mkdocs","title":"Install mkdocs","text":"<pre><code>git clone git@github.com:42Angouleme/42Angouleme.github.io.git\ncd 42Angouleme.github.io\npython -m venv venv\nsource venv/bin/activate\npip install mkdocs mkdocs-material\nmkdocs --help\n</code></pre>"},{"location":"doc/#run-the-server","title":"Run the server","text":"<pre><code>cd src\nmkdocs serve\n</code></pre>"},{"location":"doc/#build-and-set-the-site-folder-as-the-new-site-version","title":"Build and set the site folder as the new site version","text":"<pre><code>rm -rf docs\ncd src\nmkdocs build\nmv site ../docs\ncd ..\nrm docs/assets/images/favicon.png\ncp favicon.png docs/assets/images\n</code></pre> <p>Then commit push to get the new version, the new site should be online.</p>"},{"location":"general/","title":"Information General sur Python","text":""},{"location":"general/#les-types-de-variables-en-python","title":"Les types de variables en Python","text":""},{"location":"general/#les-int-integers-entiers","title":"Les int (integers | entiers)","text":"<p>Les int sont des entiers (nombre). Ils peuvent \u00eatre positifs ou n\u00e9gatifs.</p> <pre><code>    a = 5\n    b = -3\n    c = 10 + 17\n</code></pre>"},{"location":"general/#les-float-floating-point-flottants","title":"Les float (floating point | flottants)","text":"<p>Les float sont des nombres \u00e0 virgule (nombre d\u00e9cimal). Ils peuvent \u00eatre positifs ou n\u00e9gatifs.</p> <pre><code>    a = 5.0\n    b = -3.5\n    c = 10.5 + 17.0\n</code></pre>"},{"location":"general/#les-str-strings-chaines-de-caracteres","title":"Les str (strings | cha\u00eenes de caract\u00e8res)","text":"<p>Les str sont des cha\u00eenes de caract\u00e8res (texte). Ils sont d\u00e9limit\u00e9s par des guillemets simples ou doubles.</p> <pre><code>    a = \"Bonjour\"\n    b = 'Bonjour'\n    c = \"Bonjour\" + ' ' + 'tout le monde'\n</code></pre>"},{"location":"general/#les-bool-booleans-booleens","title":"Les bool (booleans | bool\u00e9ens)","text":"<p>Les bool sont des bool\u00e9ens (vrai ou faux). Ils sont utilis\u00e9s pour les conditions.</p> <pre><code>    a = True\n    b = False\n    c = 5 &gt; 3 (vaut True)\n</code></pre>"},{"location":"general/#les-types-specifique-au-robot","title":"Les types specifique au robot","text":""},{"location":"general/#les-couleurs","title":"Les couleurs","text":"<p>!! note     En informatique, nous utilisons les couleurs de base dites RGB en anglais (Rouge (Red), Vert (Green), Bleu (Blue)).     Pour repr\u00e9senter une couleur, il faut combiner les diff\u00e9rentes intensit\u00e9s de ces trois couleurs de base.</p> <p></p> <p>Info</p> <p>La valeur num\u00e9rique d'une composante de base (R, G et B) est une valeur num\u00e9rique entre 0 et 255. 0 signifie aucune intensit\u00e9 de couleur, et 255 signifie une intensit\u00e9 maximale. Pour obtenir une couleur sp\u00e9cifique il faut combiner les trois valeurs de rouge, vert et bleu. Par exemple, le blanc pur est obtenu en ayant les trois composantes \u00e0 255 (255, 255, 255), tandis que le noir pur est obtenu en ayant toutes les composantes \u00e0 0 (0, 0, 0).</p> <p>Success</p> <p>Dans Pybot, nous associons les trois valeurs RGB dans une variable selon l'exemple ci-dessous: variable = (R, G, B)</p> <pre><code>    couleur_violette = (128, 0, 128)\n    couleur_noir = (0, 0, 0)\n    couleur_blanc = (128, 0, 128)\n    couleur_orange = (255, 127, 0)\n</code></pre> <p>Note</p> <p>Vous pouvez utiliser un s\u00e9lecteur de couleur pour trouver une couleur sp\u00e9cifique. Par exemple via ce site.</p> <p>On peut aussi utiliser la Class Couleur pour avoir des couleurs pr\u00e9d\u00e9finies.</p> <pre><code>    from pybot import Couleur\n\n    couleur_violette = Couleur.VIOLET\n    couleur_noir = Couleur.NOIR\n    couleur_blanc = Couleur.BLANC\n    couleur_orange = Couleur.ORANGE\n</code></pre> <p>Info</p> <p>Voila une liste de couleur pr\u00e9d\u00e9finie dans la class Couleur: ROUGE, VERT, BLEU, JAUNE, CYAN, MAGENTA, BLANC, GRIS, NOIR, ORANGE, ROSE, VIOLET, BLEU_CIEL, VERT_SAPIN</p>"},{"location":"general/#user","title":"User","text":"<p>C'est une structure de donn\u00e9es qui contient les informations de l'utilisateur.</p> <pre><code>    user = {\n        \"nom\": \"Jean\",\n        \"prenom\": \"Dupont\",\n    }\n\n    print(user[\"nom\"]) # Affiche \"Jean\"\n    print(user[\"prenom\"]) # Affiche \"Dupont\"\n</code></pre>"},{"location":"general/#les-positions","title":"Les positions","text":"<p>Les positions x et y de la fen\u00eatre     Les coordonn\u00e9es dans une fen\u00eatre informatique sont g\u00e9n\u00e9ralement d\u00e9finies \u00e0 partir du coin sup\u00e9rieur gauche.     Le premier pixel qui se trouve en haut \u00e0 gauche correspond aux coordonn\u00e9es x = 0 et y = 0.     Alors que le dernier pixel en bas \u00e0 droite correspond \u00e0 la coordonn\u00e9e x maximale et \u00e0 la coordonn\u00e9e y maximale.  Par exemple, si la fen\u00eatre fait 300 pixels de long et 200 pixels de haut. Le dernier pixel a les coordonn\u00e9es x = 299 et y = 199.  </p> <p></p>"},{"location":"general/#les-boucles","title":"Les boucles","text":""},{"location":"general/#la-boucle-while","title":"La boucle while","text":"<p>La boucle while est une boucle qui r\u00e9p\u00e8te un bloc d'instructions tant qu'une condition est vraie. Il faut indent\u00e9 le bloc d'instructions (Tabulation) pour l'avoir dans la boucle.</p> <pre><code>    i = 1\n    while i &lt; 6 :\n        print(i)\n        i += 1\n    print(\"Fin de la boucle\") # Ne sera pas dans la boucle\n</code></pre>"},{"location":"general/#break","title":"break","text":"<p>Avec la boucle while, on peut utiliser le mot-cl\u00e9 break pour arr\u00eater la boucle m\u00eame si la condition est vraie.</p> <p>Info</p> <p>Dans l'exemple ci-dessous, la boucle s'arr\u00eate lorsque i est \u00e9gal \u00e0 3. Les lignes en dessous du break et contenu dans la boucle ne seront pas ex\u00e9cut\u00e9es.</p> <pre><code>    i = 1\n    while i &lt; 6 :\n        print(i)\n        if i == 3 :\n            break\n        i += 1\n</code></pre>"},{"location":"general/#les-conditions","title":"Les conditions","text":""},{"location":"general/#la-condition-if","title":"La condition if","text":"<p>La condition if est utilis\u00e9e pour ex\u00e9cuter un bloc de code si une condition est vraie.</p> <pre><code>    a = 33\n    b = 200\n    if b &gt; a :\n        print(\"b est plus grand que a\")\n</code></pre>"},{"location":"general/#la-condition-else","title":"La condition else","text":"<p>La condition else est utilis\u00e9e pour ex\u00e9cuter un bloc de code si la condition if est fausse.</p> <pre><code>    a = 33\n    b = 200\n    if b &gt; a :\n        print(\"b est plus grand que a\")\n    else :\n        print(\"b est plus petit que a\")\n</code></pre>"},{"location":"general/#la-condition-elif","title":"La condition elif","text":"<p>La condition elif est utilis\u00e9e pour ex\u00e9cuter un bloc de code si la condition if est fausse, mais une autre condition est vraie.</p> <pre><code>    a = 33\n    b = 33\n    if b &gt; a :\n        print(\"b est plus grand que a\")\n    elif a == b :\n        print(\"a et b sont \u00e9gaux\")\n</code></pre>"},{"location":"general/#les-fonctions","title":"Les fonctions","text":"<p>Une fonction est une s\u00e9quence d'instructions qui effectue une t\u00e2che. Elles d\u00e9finissent des actions \u00e0 faire lors de leur appel. Une fonction est constitu\u00e9e de son nom, des param\u00e8tres pris en entr\u00e9e et de son type de retour.</p> <pre><code># Cette fonction affiche \"bonjour\"\ndef afficher_bonjour():\n    print(\"Bonjour\")\n\n# Cette fonction affiche le contenu de mot\ndef afficher_argument(mot=\"Salut\"):\n    print(mot)\n\n# Cette fonction affiche \"Coucou\" et renvoi le m\u00eame mot\ndef afficher_et_renvoyer_coucou() -&gt; str:\n    mot = \"Coucou\"\n    print(mot)\n    return mot\n\ndef main():\n    afficher_bonjour()\n    afficher_argument(\"Bonjour \u00e0 tous, je suis un argument\")\n    afficher_argument()\n    retour = afficher_et_renvoyer_coucou()\n    print(\"retour =\", retour)\n</code></pre>"},{"location":"module_ai/","title":"Module IA - AI","text":"<p>Vous \u00eates ici dans la documentation du module IA du robot.</p> <p>Ce module sert a dialoguer avec le robot, il est capable de comprendre et de r\u00e9pondre \u00e0 des questions. Il peut aussi avoir des emotions et des r\u00e9actions.</p> <p>Warning</p> <p>Avant d\u2019utiliser un module, il faudra toujours le lancer sinon il vous sera impossible d\u2019utiliser le module et les m\u00e9thodes lier \u00e0 celui-ci.</p> <p>Note</p> <p>Il est conseiller de lancer le module fen\u00eatre avant de lancer le module IA pour pouvoir voir les r\u00e9actions du robot et recuperer plus facilement les questions et les r\u00e9ponses.</p> <p>Demmarer le module IA</p> <pre><code>robot.demarrer_module_IA()\n\nou alors\n\nrobot.start_AI_module()\n</code></pre> <p>\u00c0 partir de ce moment, l'objet IA est initialis\u00e9 dans le robot il est donc utilisable.</p> <p>Note</p> <p>La m\u00e9thode <code>demarrer_module_IA()</code> initialise l'objet IA et AI dans le robot et c'est pareil pour <code>start_AI_module()</code>.</p>"},{"location":"module_ai/#discuter-avec-le-robot","title":"Discuter avec le robot","text":""},{"location":"module_ai/#commencer-a-discuter-avec-le-robot","title":"Commencer \u00e0 discuter avec le robot","text":"<p>Pour commencer une discussion avec le robot, il faut utiliser la m\u00e9thode <code>demarrer_discussion() (fr) - start_conversation() (en)</code>.</p> <p>Demarrer une discussion</p> <pre><code>robot.IA.demarrer_discussion()\n\nou alors\n\nrobot.AI.start_conversation()\n</code></pre> <p>Warning</p> <p>Il faut toujours commencer une discussion avec le robot avant d'utiliser les m\u00e9thodes suivantes.</p>"},{"location":"module_ai/#arreter-de-discuter-avec-le-robot","title":"Arr\u00eater de discuter avec le robot","text":"<p>Pour arr\u00eater la discussion avec le robot, il faut utiliser la m\u00e9thode <code>arreter_discussion() (fr) - stop_conversation() (en)</code>.</p> <p>Arreter une discussion</p> <pre><code>robot.IA.arreter_discussion()\n\nou alors\n\nrobot.AI.stop_conversation()\n</code></pre> <p>Warning</p> <p>A partir de ce moment l\u00e0 le robot ne pourra plus vous r\u00e9pondre et il faudra recommencer la discussion avec <code>demarrer_discussion()</code>.</p>"},{"location":"module_ai/#poser-une-question-parler-au-robot","title":"Poser une question / parler au robot","text":"<p>Pour pouvoir parler au robot (poser des questions, donner des informations, ...), il faut utiliser la m\u00e9thode <code>poser_question(question : str) (fr) - ask_question(question : str) (en)</code>.</p> <p>Poser une question</p> <pre><code>question = \"Quel est ton nom ?\"\nrobot.IA.poser_question(question)\n\nou alors\n\nquestion = \"Quel est ton nom ?\"\nrobot.AI.ask_question(question)\n</code></pre> <p>Le robot r\u00e9pondra \u00e0 la question pos\u00e9e en param\u00e8tre. Cette fonction retourne la r\u00e9ponse du robot.</p> <p>Info</p> <p>Le robot peut prendre un certain temps de r\u00e9flexion pour vous r\u00e9pondre pendant ce temps de r\u00e9flexion le robot semblera \u00eatre en pause (inutilisable). Il suffit simplement d'attendre sa r\u00e9ponse pour qu'il ne soit plus en pause (utilisable).</p> <p>Warning</p> <p>Tant qu'aucun historique n'est charg\u00e9 le robot ne fera pas un suivit de la conversation et ne pourra pas se souvenir de la conversation pr\u00e9c\u00e9dente. Car tout sera oubli\u00e9 \u00e0 la fin de la discussion.</p>"},{"location":"module_ai/#la-memoire-du-robot","title":"La m\u00e9moire du robot","text":"<p>Comme dit pr\u00e9c\u00e9demment si on ne donne pas de m\u00e9moire au robot, il ne pourra pas se souvenir de la conversation pr\u00e9c\u00e9dente.</p> <p>La m\u00e9thode <code>creer_historique_conversation() (fr) - create_conversation_history() (en)</code> permet au robot de lui demander cr\u00e9er un historique de conversation.</p> <p>Cr\u00e9er un historique de conversation</p> <pre><code>robot.IA.creer_historique_conversation()\n\nou alors\n\nrobot.AI.create_conversation_history()\n</code></pre> <p>Note</p> <p>Il est pr\u00e9f\u00e9rable d'avoir un historique de conversation par utilisateur et aussi de sauvegarder l'historique de conversation dans les donn\u00e9es de l'utilisateur correspondant. L'enregistrement de l'historique de conversation dans les donn\u00e9es de l'utilisateur n'est pas encore impl\u00e9ment\u00e9.</p>"},{"location":"module_ai/#gerer-lhistorique-de-conversation","title":"G\u00e9rer l'historique de conversation","text":""},{"location":"module_ai/#se-souvenir","title":"Se souvenir","text":"<p>Une fois l'historique de conversation cr\u00e9\u00e9 il faut le charger dans le robot avec la m\u00e9thode <code>charger_historique(historique_de_conversation : ConversationSummaryBufferMemory) (fr) - load_history(conversation_history : ConversationSummaryBufferMemory) (en)</code>. Ici, vous donnez donc au robot la capacit\u00e9 de se souvenir des interactions qu'il a eu avec l'utilisateur.</p> <p>Charger un historique de conversation</p> <pre><code>historique = robot.IA.cree_historique_conversation()\nrobot.IA.charger_historique(historique)\n\nou alors\n\nhistory = robot.AI.create_conversation_history()\nrobot.AI.load_history(history)\n</code></pre> <p>Warning</p> <p>Si un historique de conversation est d\u00e9j\u00e0 charg\u00e9 et qu'un autre historique vient \u00e0 \u00eatre charg\u00e9 l'ancien historique sera \u00e9cras\u00e9.</p> <p>Note</p> <p>Si l'historique n'est pas vide, le robot reprendra la discussion l\u00e0 o\u00f9 l'utilisateur l'avait arr\u00eat\u00e9e la derni\u00e8re fois.</p>"},{"location":"module_ai/#effacer-la-memoire","title":"Effacer la m\u00e9moire","text":"<p>Si vous voulez changer de discussion ou bien effacer l'historique de la conversation vous pouvez utilisez la m\u00e9thode <code>supprimer_historique() (fr) - delete_history() (en)</code>.</p> <p>Supprimer l'historique de conversation</p> <pre><code>robot.IA.supprimer_historique()\n\nou alors\n\nrobot.AI.delete_history()\n</code></pre> <p>A partir de ce moment l\u00e0 le robot n'aura plus de m\u00e9moire de conversation.</p> <p>Warning</p> <p>Pensez \u00e0 recuperer et sauvegarder l'historique avant de le supprimer</p>"},{"location":"module_ai/#recuperer-la-memoire-du-robot","title":"R\u00e9cup\u00e9rer la m\u00e9moire du robot","text":"<p>Pour pouvoir sauvegarder l'historique de conversation (m\u00e9moire du robot), il faut pouvoir r\u00e9cup\u00e9rer l'historique de conversation pour cela il faut utiliser la m\u00e9thode <code>obtenir_historique_conversation() (fr) - get_current_conversation_history() (en)</code>.</p> <p>R\u00e9cup\u00e9rer l'historique de conversation</p> <pre><code>robot.IA.obtenir_historique_conversation()\n\nou alors\n\nrobot.AI.get_current_conversation_history()\n</code></pre> <p>Cette m\u00e9thode renvoit la m\u00e9moire du robot permettant ainsi la sauvegarde de celle-ci.</p>"},{"location":"module_ai/#exemple-complet-1","title":"Exemple complet 1","text":"<pre><code>from pybot import Robot\n\nrobot = Robot()\n\nrobot.demarrer_module_IA()\n\nrobot.IA.demarrer_discussion()\n\nwhile True:\n    question = input(\"Vous : \")\n    if question == \"stop\":\n        robot.IA.arreter_discussion()\n        break\n    if question == \"recommencer\":\n        robot.IA.supprimer_historique()\n        continue # Permet de revenir au d\u00e9but de la boucle sans poser de question\n    if question == \"sauvegarder\":\n        historique = robot.IA.create_conversation_history()\n        robot.IA.charger_historique(historique)\n        continue # Permet de revenir au d\u00e9but de la boucle sans poser de question\n    reponse = robot.IA.poser_question(question)\n    print(\"Pybot : \", reponse)\n</code></pre> <p>Warning</p> <p>L'appel \u00e0 la fonction <code>input()</code> devra etre remplac\u00e9 par la m\u00e9thode permettant de r\u00e9cup\u00e9rer les questions pos\u00e9es par l'utilisateur. On pourra le remplacer par une zone de texte dans la fen\u00eatre ou alors l'audio du micro.  </p> <p>De meme le print devra etre remplac\u00e9 par la m\u00e9thode permettant d'afficher les r\u00e9ponses du robot. On pourra le remplacer par un appel \u00e0 la m\u00e9thode afficher_texte() de la fen\u00eatre ou autre.</p>"},{"location":"module_ai/#les-emotions-du-robot","title":"Les \u00e9motions du robot","text":"<p>Le robot peut avoir des \u00e9motions et des r\u00e9actions. Pour cela il faut utiliser la m\u00e9thode <code>obtenir_emotion(phrase : str) (fr) - get_emotion(sentence : str) (en)</code>. Cette m\u00e9thode prend en param\u00e8tre une phrase (cha\u00eene de caract\u00e8re) et renvoit l'\u00e9motion que le robot exprime en fonction de celle-ci. Si aucune \u00e9motion enregistr\u00e9e ne correspond a la phrase, il reste Neutre.</p> <p>Obtenir l'\u00e9motion du robot</p> <pre><code>phrase = \"Je suis content\"\nemotion = robot.IA.obtenir_emotion(phrase)\n\nou alors\n\nsentence = \"I am happy\"\nemotion = robot.AI.get_emotion(sentence)\n</code></pre> <p>Note</p> <p>Voici la liste des \u00e9motions que le robot peut interpreter :     - C\u00e9l\u00e9bration     - Joie     - Amusement     - Soulagement     - Suprise     - Neutre     - R\u00e9flexion     - Incomprehension     - Fatigue     - Inqui\u00e9tude     - Contrari\u00e9t\u00e9     - Tristesse     - Col\u00e8re     - Peur</p> <p>Voir la documentation de la fen\u00eatre pour voir comment afficher les \u00e9motions du robot.</p>"},{"location":"module_ai/#exemple-complet-2","title":"Exemple complet 2","text":"<pre><code>from pybot import Robot\n\nrobot = Robot()\n\nrobot.demarrer_module_fenetre()\nrobot.demarrer_module_IA()\n\nrobot.fenetre.ouvrir_fenetre()\nrobot.ajouter_evenement(\"echap\", \"stop\")\n\ni = 0\nwhile i &lt; 15 :\n\n    evenement =  robot.verifier_evenements()\n    if evenement == \"stop\" :\n        robot.desactiver()\n        break\n\n    if i == 0 :\n        phrase = \"Je celebre ma victoire\"\n    elif i == 1 :\n        phrase = \"Je suis content\"\n    elif i == 2 :\n        phrase = \"Je suis amus\u00e9\"\n    elif i == 3 :\n        phrase = \"Je suis soulag\u00e9\"\n    elif i == 4 :\n        phrase = \"Je suis surpris\"\n    elif i == 5 :\n        phrase = \"Je suis neutre\"\n    elif i == 6 :\n        phrase = \"Je suis en pleine reflexion\"\n    elif i == 7 :\n        phrase = \"Je ne comprends pas\"\n    elif i == 8 :\n        phrase = \"Je suis fatigu\u00e9\"\n    elif i == 9 :\n        phrase = \"Je suis inquiet\"\n    elif i == 10 :\n        phrase = \"Je suis tr\u00e8s contrari\u00e9\"\n    elif i == 11 :\n        phrase = \"Je suis triste\"\n    elif i == 12 :\n        phrase = \"Je suis tr\u00e8s en col\u00e8re\"\n    elif i == 13 :\n        phrase = \"Je suis effray\u00e9\"\n    elif i == 14 :\n        robot.desactiver()\n        break\n\n    emotion = robot.IA.obtenir_emotion(phrase)\n    print(phrase, \" : \", emotion)\n    chemin_image_emotion = robot.fenetre.obtenir_image_emotion(emotion)\n    robot.fenetre.afficher_fond()\n    robot.fenetre.afficher_image(chemin_image_emotion, 346, 246)\n    robot.fenetre.actualiser_affichage()\n    robot.dort(1)\n    i += 1\n</code></pre> <p>Warning</p> <p>La compr\u00e9hension des emotions est quelque chose de complexe et il se peut que le robot ne comprenne pas l'\u00e9motion que vous voulez lui faire exprimer.</p>"},{"location":"module_camera/","title":"Module Camera","text":"<p>Vous \u00eates ici dans la documentation du module Camera du robot.</p> <p>Ce module permet de prendre des photos, d\u2019y appliquer des filtres, reconnaissance par cam\u00e9ra (pas biom\u00e9trique comme le visage, mais des dessins sur cartes).</p> <p>Warning</p> <p>Avant d\u2019utiliser un module, il faudra toujours le lancer sinon il vous sera impossible d\u2019utiliser le module et les m\u00e9thodes lier \u00e0 celui-ci.</p> <p>Note</p> <p>Il faut avoir demarrer le module fen\u00eatre et l'avoir ouverte pour pouvoir utliser la m\u00e9thode <code>demarrer_module_camera</code> ou <code>start_camera_module</code>. Voir la documentation du module fen\u00eatre pour plus d'informations.</p> <p>Demmarer le module Camera</p> <pre><code>robot.demarrer_module_camera()\n\nou alors\n\nrobot.start_camera_module()\n</code></pre> <p>\u00c0 partir de ce moment, l'objet camera est initialis\u00e9 dans le robot il est donc utilisable.</p> <p>Note</p> <p>La m\u00e9thode <code>demarrer_module_camera()</code> initialise l'objet camera dans le robot et c'est pareil pour <code>start_camera_module()</code>.</p>"},{"location":"module_camera/#afficher-la-camera","title":"Afficher la cam\u00e9ra","text":"<p>Pour afficher la cam\u00e9ra, il suffit d'utiliser la m\u00e9thode <code>afficher_camera(position_x: int, position_y: int) (fr) - display_camera(position_x : int, position_y : int) (en)</code>.</p> <p>Warning</p> <p>Mettez cette m\u00e9thode dans une boucle pour que l'image de la cam\u00e9ra soit actualis\u00e9e et reste fluide.</p> <p>Afficher la cam\u00e9ra</p> <pre><code>while robot.est_actif():\n    robot.afficher_camera(100, 100)\n    robot.fenetre.actualiser_affichage()\n\nou alors\n\nwhile robot.is_active():\n    robot.display_camera(100, 100)\n    robot.window.refresh_display()\n</code></pre> <p>Note</p> <p>La cam\u00e9ra afficher fait 640 pixels de long et 480 pixels de haut. Le dernier pixel a les coordonn\u00e9es x = 299 et y = 199.</p>"},{"location":"module_camera/#prendre-une-photo","title":"Prendre une photo","text":"<p>Pour prendre une photo, il suffit d'utiliser la m\u00e9thode <code>prendre_photo(nom_fichier: str) (fr) - take_picture(file_name : str) (en)</code>. La photo sera enregistr\u00e9e dans le dossier <code>images</code> du robot.</p> <p>Warning</p> <p>Si le fichier existe d\u00e9j\u00e0, il sera \u00e9cras\u00e9.</p> <p>Prendre une photo</p> <pre><code>robot.prendre_photo(\"photo1\")\n\nou alors\n\nrobot.take_picture(\"photo1\")\n</code></pre> <p>Conseil</p> <p>Il est conseill\u00e9 de mettre un nom de fichier diff\u00e9rent \u00e0 chaque photo pour ne pas \u00e9craser les photos pr\u00e9c\u00e9dentes. Declench\u00e9 cette m\u00e9thode par un bouton dans l'interface graphique.</p> <p>Note</p> <p>Voir la documentation du module fen\u00eatre pour pouvoir afficher la photo prise. L'image sera de la m\u00eame taille que la cam\u00e9ra soit 640 pixels de long et 480 pixels de haut.</p>"},{"location":"module_camera/#appliquer-un-filtre","title":"Appliquer un filtre","text":"<p>Pour appliquer un filtre \u00e0 une photo, il suffit d'utiliser la m\u00e9thode <code>appliquer_filtre(chemin_fichier: str, nom_filtre: str) (fr) - apply_filter(file_name : str, filter_name : str) (en)</code>.</p> <p>Voir la r\u00e9ference pour la liste compl\u00e8te des filtres</p> <p>Warning</p> <p>Le fichier sera \u00e9cras\u00e9 par la photo avec le filtre appliqu\u00e9.</p> <p>Appliquer un filtre</p> <pre><code>robot.appliquer_filtre(\"/images/photo1.jpg\", \"cartoon\")\n\nou alors\n\nrobot.apply_filter(\"/images/photo1.jpg\", \"cartoon\")\n</code></pre>"},{"location":"module_camera/#exemple-complet","title":"Exemple complet","text":"<pre><code>from pybot import Robot, Couleur\n\nrobot = Robot()\n\nrobot.demarrer_module_fenetre()\nrobot.fenetre.ouvrir_fenetre(1500, 1000)\n\nrobot.demarrer_module_camera()\n\nboutons = robot.attributs.boutons\nboutons.bouton_photo = robot.fenetre.creer_bouton(200, 50, 10, 10, Couleur.BLANC)\nboutons.bouton_photo.ajouter_texte(\"prendre_photo\", 10, 10, 20, Couleur.NOIR)\nboutons.quitter = robot.fenetre.creer_bouton(100, 50, 10, 80, Couleur.BLANC)\nboutons.quitter.ajouter_texte(\"quitter\", 10, 10, 20, Couleur.NOIR)\n\nwhile robot.est_actif():\n\n    boutons = robot.attributs.boutons\n    robot.verifier_evenements()\n    boutons.bouton_photo.afficher()\n    boutons.quitter.afficher() \n\n    if boutons.bouton_photo.est_actif():\n        robot.camera.prendre_photo(\"photo1\")\n        robot.fenetre.afficher_image(\"/images/photo1.jpg\",  10, 500)\n        robot.camera.appliquer_filtre(\"/images/photo1.jpg\", \"cartoon\")\n        robot.fenetre.afficher_image(\"/images/photo1.jpg\",  655, 500)\n    if boutons.quitter.est_actif():\n        robot.desactiver()\n\n    robot.camera.afficher_camera(300, 10)\n    robot.fenetre.actualiser_affichage()\n</code></pre>"},{"location":"module_robot/","title":"Module Robot","text":"<p>Et oui, le robot peut \u00eatre consid\u00e9r\u00e9 comme un module \u00e0 part enti\u00e8re vu qu\u2019il a ses propres m\u00e9thodes qui lui sont attach\u00e9es, m\u00eame si vous verrez qu\u2019il est impossible de les utiliser \u00e0 proprement parler sans utiliser le module Fen\u00eatre.</p> <p>Pour utiliser le module Robot on vas directement utiliser l\u2019objet Robot que l\u2019on cr\u00e9e au d\u00e9but</p> <pre><code>robot = Robot()\n    ^\u00a0celui-ci\n</code></pre> <p>Ce module vous donne acc\u00e8s \u00e0 des m\u00e9thodes permettant la gestion globale du programme (d\u00e9but du programme, sortie du programme), mais aussi \u00e0 une premi\u00e8re mani\u00e8re de g\u00e9rer les \u00e9v\u00e9nements (interaction utilisateur -&gt; robot).</p> <p>Warning</p> <p>Il est fortement conseill\u00e9 d\u2019avoir au moins ouvert la fen\u00eatre \u201cvoir module fen\u00eatre \u2014 window\u201d avant de continuer \u00e0 lire cette section.</p>"},{"location":"module_robot/#demarrer-le-robot","title":"D\u00e9marrer le robot","text":"<p>Une fois le robot cr\u00e9\u00e9 (d\u00e9marr\u00e9), il passe dans l\u2019\u00e9tat actif ; dans cet \u00e9tat, le robot peut \u00eatre utilis\u00e9 lui et tous ses modules.</p> <p>Robot()</p> <pre><code>from pybot import Robot\nrobot = Robot()\n</code></pre>"},{"location":"module_robot/#eteindre-le-robot","title":"\u00c9teindre le robot","text":"<p>Si l'on veut passer le robot dans l\u2019\u00e9tat inactif (ce qui \u00e9quivaut \u00e0 \u00e9teindre le robot), on utilise la m\u00e9thode\u00a0<code>desactiver() (fr) - deactivate() (en).</code></p> <p>desactiver() - deactivate()</p> <pre><code>robot.desactiver()\n\nou alors\n\nrobot.deactivate()\n</code></pre> <p>Apr\u00e8s l\u2019appel de cette m\u00e9thode, le robot change son \u00e9tat en inactif (il deviendra donc inutilisable).</p>"},{"location":"module_robot/#verifier-letat-du-robot","title":"V\u00e9rifier l\u2019\u00e9tat du robot","text":"<p>On peut obtenir l\u2019\u00e9tat du robot gr\u00e2ce \u00e0 la m\u00e9thode <code>est_actif() (fr) - is_active() (en)</code>.</p> <p>est_actif() - is_active()</p> <pre><code>robot.est_actif()\n\nou alors\n\nrobot.is_active()\n</code></pre> <p>Note</p> <p>est_actif renvoi True si le robot est actif sinon il renvoie False.</p> <p>Cette m\u00e9thode peut \u00eatre utile \u00e0 l\u2019\u00e9laboration d\u2019une boucle While qui d\u00e9clencherait des actions tant que le robot est actif.</p> <pre><code>Exemple :\n\nwhile robot.est_actif() :\n    robot.fenetre.actualise_affichage()\n</code></pre>"},{"location":"module_robot/#faire-dormir-le-robot","title":"Faire dormir le robot","text":"<p>Il est parfois utile de ralentir l'ex\u00e9cution du programme en lui faisant faire des pauses. La m\u00e9thode <code>dort(secondes : int) (fr) - sleep(secondes : int) (en)</code> le permet, il suffit de passer en param\u00e8tre le nombre de secondes \u00e0 attendre.</p> <p>dort(int) - sleep(secondes)</p> <pre><code>secondes = 2\nrobot.dort(secondes)\n\nou alors\n\nsecondes = 2\nrobot.sleep(secondes)\n</code></pre>"},{"location":"module_robot/#les-attributs-du-robot","title":"Les attributs du robot","text":"<p>Le robot poss\u00e8de un moyen de contenir les boutons et les zones de texte que l\u2019on peut cr\u00e9er avec le module Fen\u00eatre.</p> <p>Voir la documentation du module fen\u00eatre avec celle des boutons et des zones de texte pour plus d'informations.</p>"},{"location":"module_robot/#ajouter-un-bouton-aux-attributs-du-robot","title":"Ajouter un bouton aux attributs du robot","text":"<p>Pour ajouter un bouton aux attributs du robot il faut suivre les \u00e9tapes suivantes :</p> <pre><code>boutons = robot.attributs.boutons # On r\u00e9cup\u00e8re l'endroit o\u00f9 sont stock\u00e9s les boutons dans le robot\nboutons.nom_du_bouton = robot.fenetre.creer_bouton(\"nom_du_bouton\", 100, 100, 100, 100) # On cr\u00e9e un bouton et on l'ajoute aux attributs du robot.\n</code></pre> <p>Note</p> <p>nom_du_bouton est le nom que l\u2019on veut donner au bouton. C\u2019est ce nom qui sera utilis\u00e9 pour acc\u00e9der au bouton depuis les attributs du robot. Veillez \u00e0 ne pas mettre d\u2019espace dans le nom du bouton et gardez le nom simple.</p>"},{"location":"module_robot/#acceder-a-un-bouton-depuis-les-attributs-du-robot","title":"Acc\u00e9der \u00e0 un bouton depuis les attributs du robot","text":"<p>Pour acc\u00e9der \u00e0 un bouton depuis les attributs du robot il faut suivre les \u00e9tapes suivantes :</p> <pre><code>boutons = robot.attributs.boutons # On r\u00e9cup\u00e8re l'endroit o\u00f9 sont stock\u00e9s les boutons dans le robot.\nboutons.nom_du_bouton # On acc\u00e8de au bouton grace \u00e0 son nom.\n</code></pre> <p>Note</p> <p>nom_du_bouton est le nom que l\u2019on a donn\u00e9 au bouton lors de sa cr\u00e9ation. boutons.nom_du_bouton est un objet de type bouton sur lequel on peut appliquer les m\u00e9thodes li\u00e9es au bouton.</p>"},{"location":"module_robot/#ajouter-une-zone-de-texte-aux-attributs-du-robot","title":"Ajouter une zone de texte aux attributs du robot","text":"<p>Pour ajouter une zone de texte aux attributs du robot il faut suivre les \u00e9tapes suivantes :</p> <pre><code>zones_de_texte = robot.attributs.zones_de_texte # On r\u00e9cup\u00e8re l'endroit o\u00f9 sont stock\u00e9es les zones de texte dans le robot.\nzones_de_texte.nom_de_la_zone_de_texte = robot.fenetre.creer_zone_de_texte(\"nom_de_la_zone_de_texte\", 100, 100, 100, 100) # On cr\u00e9e une zone de texte et on l'ajoute aux attributs du robot.\n</code></pre> <p>Note</p> <p>nom_de_la_zone_de_texte est le nom que l\u2019on veut donner \u00e0 la zone de texte. C\u2019est ce nom qui sera utilis\u00e9 pour acc\u00e9der \u00e0 la zone de texte depuis les attributs du robot. Veillez \u00e0 ne pas mettre d\u2019espace dans le nom de la zone de texte et gardez le nom simple.</p>"},{"location":"module_robot/#acceder-a-une-zone-de-texte-depuis-les-attributs-du-robot","title":"Acc\u00e9der \u00e0 une zone de texte depuis les attributs du robot","text":"<p>Pour acc\u00e9der \u00e0 une zone de texte depuis les attributs du robot il faut suivre les \u00e9tapes suivantes :</p> <pre><code>zones_de_texte = robot.attributs.zones_de_texte # On r\u00e9cup\u00e8re l'endroit o\u00f9 sont stock\u00e9es les zones de texte dans le robot.\nzones_de_texte.nom_de_la_zone_de_texte # On acc\u00e8de \u00e0 la zone de texte grace \u00e0 son nom.\n</code></pre> <p>Note</p> <p>nom_de_la_zone_de_texte est le nom que l\u2019on a donn\u00e9 \u00e0 la zone de texte lors de sa cr\u00e9ation. zones_de_texte.nom_de_la_zone_de_texte est un objet de type zone de texte sur lequel on peut appliquer les m\u00e9thodes li\u00e9es \u00e0 la zone de texte.</p>"},{"location":"module_robot/#autre","title":"Autre","text":"<p>Ces attributs sont utiles pour stocker les boutons et les zones de texte que l\u2019on cr\u00e9e avec le module Fen\u00eatre. Mais ils peuvent aussi \u00eatre utilis\u00e9s pour stocker d\u2019autres objets, variables, etc.</p> <p>Pour cela, il suffit de cr\u00e9er un attribut dans l\u2019objet attributs du robot.</p> <pre><code>robot.attributs.nom_de_l_attribut = \"valeur de l'attribut\"\n</code></pre> <p>pour ensuite y acc\u00e9der avec</p> <pre><code>robot.attributs.nom_de_l_attribut\n</code></pre>"},{"location":"module_robot/#interaction-avec-lutilisateur","title":"Interaction avec l\u2019utilisateur","text":"<p>En plus de tout cela, le robot offre une premi\u00e8re mani\u00e8re assez rudimentaire pour g\u00e9rer les interactions avec l\u2019utilisateur.</p> <p>On appelle cela les \u00e9v\u00e9nements.</p>"},{"location":"module_robot/#creer-un-evenement","title":"Cr\u00e9er un \u00e9v\u00e8nement","text":"<p>Un \u00e9v\u00e8nement est une action sur le clavier associ\u00e9e \u00e0 un nom d'\u00e9v\u00e8nement. Nous cr\u00e9ons un nouvel \u00e9v\u00e8nement avec la m\u00e9thode <code>ajouter_evenement(touche : str, nom : str) (fr) - add_event(key : str, name : str) (en)</code> en lui passant en param\u00e8tre la touche \u00e0 laquelle on veut associer l\u2019\u00e9v\u00e9nement et le nom que l\u2019on veut donner \u00e0 celui-ci.</p> <p>Ajouter un \u00e9v\u00e8nement</p> <pre><code>robot.ajouter_evenement(\"echap\", \"stop\")\n\nou alors\n\nrobot.add_event(\"echap\", \"stop\")\n</code></pre> <p>Info</p> <p>Voir la r\u00e9f\u00e9rence pour voir une liste des touches possible, par exemple la touche du clavier a s'appelera \"a\". \u00c0 noter, les touches qui se nomment \"espace\" et \"echap\" pour la barre d'espace et la touche d'\u00e9chappement.</p>"},{"location":"module_robot/#verifier-un-evenement","title":"V\u00e9rifier un \u00e9v\u00e8nement","text":"<p>Une fois un \u00e9v\u00e8nement enregistr\u00e9, il faut v\u00e9rifier si l\u2019\u00e9v\u00e9nement se produit ou non.</p> <p>Pour cela, on a la m\u00e9thode <code>verifier_evenements() (fr) - check_events() (en)</code> .</p> <p>Info</p> <p>La m\u00e9thode retourne une liste avec les \u00e9v\u00e8nements qui viennent d'\u00eatre ex\u00e9cut\u00e9s. Il est possible ensuite d'utiliser une v\u00e9rification avec if\u2026 in ... : comme dans l'exemple ci-dessous.</p> <p>V\u00e9rifier les \u00e9v\u00e8nements</p> <pre><code>evenements = robot.verifier_evenements(\"echap\", \"stop\")\nif \"stop\" in evenements:\n    print(\"stop\")\n\nou alors\n\nevenements = robot.check_events(\"echap\", \"stop\")\nif \"stop\" in evenements:\n    print(\"stop\")\n</code></pre> <p>Note</p> <p>Sans l'appel de cette m\u00e9thode, la croix de fermeture de la fen\u00eatre ne fonctionnera pas.</p>"},{"location":"module_robot/#supprimer-un-evenement","title":"Supprimer un \u00e9v\u00e8nement","text":"<p>Si on ne veut plus qu\u2019un \u00e9v\u00e8nement soit v\u00e9rifi\u00e9, il faudra le supprimer.</p> <p>Pour cela, on a la m\u00e9thode <code>supprimer_evenement(nom : str) (fr) \u2014 delete_event(nom : str) (en)</code> en lui passant le nom de l\u2019\u00e9v\u00e9nement que l\u2019on veut supprimer..</p> <p>Supprimer un \u00e9v\u00e8nement</p> <pre><code>robot.supprimer_evenement(\"stop\")\n\nou alorsdelete_event(nom : str)\n\nrobot.delete_event(\"stop\")\n</code></pre> <p>Warning</p> <p>Si plusieurs touches sont attribu\u00e9es au m\u00eame \u00e9v\u00e8nement, elles seront toutes supprim\u00e9es de la liste des \u00e9v\u00e8nements.</p>"},{"location":"module_robot/#exemple-2-utiliser-des-evenements","title":"Exemple 2: Utiliser des \u00e9v\u00e8nements","text":"<p>Warning</p> <p>Il est recommand\u00e9 de ne pas copier l'exemple mais de chercher par vous m\u00eame des utilisations possibles.</p> <p>Info</p> <p>Le robot final n'utilisera pas de clavier mais simplement une int\u00e9raction par la voix et par le touch\u00e9 sur \u00e9cran. Ces \u00e9v\u00e8nements par clavier servent principalement \u00e0 l'apprentissage du code python. Il s'agit d'une p\u00e9riode de transition.</p> <pre><code>from pybot import Robot\n\nrobot = Robot()\n\nlong = 1024\nhaut = 800\n\nrobot.demarrer_module_fenetre(long, haut)\nrobot.fenetre.ouvrir_fenetre()\n\nrobot.ajouter_evenement(\"echap\", \"stop\")\nwhile robot.est_actif():\n    evenements = robot.verifier_evenements()\n    if \"stop\" in evenements:\n        robot.desactiver()\n    robot.fenetre.actualiser_affichage()\n</code></pre>"},{"location":"module_robot/#la-webapp","title":"La webapp","text":"<p>Avant de lancer les modules, il est faut lancer la webapp. Surtout pour le module utilisateur, car il permet de cr\u00e9er, modifier, supprimer des utilisateurs du robot. C'est le serveur qui permettra d'acc\u00e9der \u00e0 l'application web et ainsi travailler avec la base de donn\u00e9e, on utilise pour cela la m\u00e9thode demarrer_webapp. Il est aussi possible de configurer le robot depuis un site web, par exemple pour ajouter des \u00e9l\u00e8ves \u00e0 la base de donn\u00e9es.</p> <p>Pour lancer la webapp, il suffit d'appeler la m\u00e9thode <code>demarrer_webapp() (fr) - start_webapp() (en)</code>.</p> <p>demarrer_webapp()</p> <pre><code>robot.demarrer_webapp()\n\nou alors\n\nrobot.start_webapp()\n</code></pre> <p>Le serveur web se lance et ne bloque pas le programme, on peut donc ensuite s'occuper de programmer le robot.</p> <p>Info</p> <p>Le site sera accessible localement, \u00e0 l'adresse : http://127.0.0.1:5000</p> <p>Note</p> <p>Il est possible de configurer le raspberry pi pour faire serveur et rendre le site accessible sur le r\u00e9seau local pour ainsi se connecter \u00e0 distance au robot.</p> <p>Warning</p> <p>Pour arreter le serveur il faut taper dans le terminal la combinaison au clavier : CTRL+C. Il est important de lancer la webapp avant de lancer tout autre module. Il est possible de lancer les modules sans avoir lanc\u00e9 la webapp, la webapp n'est utile que pour la gestion des utilisateurs avec le module utilisateur.</p>"},{"location":"module_user/","title":"Module Utilisateur - User","text":"<p>Vous \u00eates ici dans la documentation du module Utilisateur du robot.</p> <p>Ce module permet de g\u00e9rer les utilisateurs du robot. Il vous permet de cr\u00e9er, modifier, supprimer des utilisateurs du robot.</p> <p>Warning</p> <p>Avant d\u2019utiliser un module, il faudra toujours le lancer sinon il vous sera impossible d\u2019utiliser le module et les m\u00e9thodes lier \u00e0 celui-ci.</p> <p>Note</p> <p>Il faut lancer le module fen\u00eatre et Cam\u00e9ra avant de lancer le module Utilisateur. Et ouvrir la webapp pour pouvoir utiliser les m\u00e9thodes li\u00e9es \u00e0 ce module. Voir webapp pour plus d'informations.</p>"},{"location":"module_user/#introduction","title":"Introduction","text":"<p>Tout au long de cette partie vous allez \u00eatre ammen\u00e9s \u00e0 manipuler des seuils de d\u00e9tection. Un seuil de d\u00e9tection est une valeur comprise entre 0.00 et 1.00. Dans notre cas, le seuil sera utilis\u00e9 pour comparer des images:</p> <ul> <li>plus le score sera proche de 1.00 plus les images se ressemblent.  </li> <li>plus le score se rapproche de 0.00 plus les images sont diff\u00e9rentes.</li> </ul> <p>Les deux seuils \u00e0 manipuler :</p> <ul> <li>seuil_minimal: seules les cartes d\u00e9passant se seuil seront s\u00e9lectionn\u00e9es comme potentiellement bonnes.  </li> <li>seuil_arret_recherche: si une carte d\u00e9passe ce seuil, la recherche s'arr\u00eate : il s'agit de la bonne carte.</li> </ul> <p>Note</p> <p>Le code de d\u00e9tection de carte ne donnera jamais 1.00, car m\u00eame s'il sagit de la m\u00eame image, l'ordinateur va prendre en compte: la lumi\u00e8re, la position, l'inclinaison de la carte par rapport \u00e0 la cam\u00e9ra...</p> <p>Warning</p> <p>Plus on prend un score d arr\u00eat de recherche: - bas: plus on a de chances de mal interpr\u00e9ter les cartes. - haut: moins on detectera de carte.</p>"},{"location":"module_user/#connexion-deconnexion","title":"Connexion/ Deconnexion","text":""},{"location":"module_user/#connaitre-le-statut-de-connexion","title":"Connaitre le statut de connexion","text":"<p>Avant de connecter ou de d\u00e9connecter une personne, il est important de savoir si une personne est d\u00e9j\u00e0 connect\u00e9e \u00e0 l'application. Pour cela, on peut utiliser la m\u00e9thode <code>verifier_session() (fr) - check_session() (en)</code>.</p> <p>Success</p> <pre><code>if robot.utilisateur.verifier_session():\n    print(\"Une personne est connect\u00e9e\")\nelse:\n    print(\"Personne n'est connect\u00e9e\")\n\nou alors\n\nif robot.user.check_session():\n    print(\"Une personne est connect\u00e9e\")\nelse:\n    print(\"Personne n'est connect\u00e9e\")\n</code></pre>"},{"location":"module_user/#se-connecter","title":"Se connecter","text":"<p>Si on veut se connecter, on peut utiliser la m\u00e9thode <code>connecter(seuil_minimal : float, seuil_arret_recherche : float) (fr) - logging(self, minimum_threshold: float, search_stop_threshold: float) : (en)</code>.</p> <p>Connexion</p> <pre><code>robot.utilisateur.connecter(0.5, 0.7)\n\nou alors\n\nrobot.user.logging(0.5, 0.7)\n</code></pre> <p>Note</p> <p>Les seuils sont optionnels, si on ne les met pas, ils prendront les valeurs par d\u00e9faut qui sont 0.75 et 0.85.</p> <p>Warning</p> <p>Si la fonction est appel\u00e9e alors que l application web n' est pas lanc\u00e9e ou bien que la cam\u00e9ra n' est pas allum\u00e9e alors la fonction ne marchera pas.</p>"},{"location":"module_user/#se-deconnecter","title":"Se d\u00e9connecter","text":"<p>Pour se d\u00e9connecter, on peut utiliser la m\u00e9thode <code>deconnecter() (fr) - logout() (en)</code>.</p> <p>D\u00e9connexion</p> <pre><code>robot.utilisateur.deconnecter()\n\nou alors\n\nrobot.user.logout()\n</code></pre>"},{"location":"module_user/#creer-supprimer-un-compte-utilisateur","title":"Cr\u00e9er/ Supprimer un compte utilisateur","text":""},{"location":"module_user/#creer-une-session","title":"Cr\u00e9er une session","text":"<p>Pour pouvoir se connecter, il faut avoir un compte utilisateur, pour avoir un compte utilisateur, il faut le cr\u00e9er. Pour cr\u00e9er un utilisateur il faut utiliser la m\u00e9thode <code>creer_utilisateur(prenom, nom, carte) (fr) - create_user(firstname, lastname, card) (en)</code>.</p> <p>Cr\u00e9ation d'un utilisateur</p> <pre><code>robot.utilisateur.creer_utilisateur(\"Jean\", \"Dupont\", carte)\n\nou alors\n\nrobot.user.create_user(\"Jean\", \"Dupont\", card)\n</code></pre> <p>Note</p> <p>La carte en param\u00e8tre de la m\u00e9thode cr\u00e9er_utilisateur(prenom, nom, carte) doit \u00eatre une image r\u00e9cup\u00e9r\u00e9e avec la m\u00e9thode detecter_carte() (fr) - detect_card() (en).</p> <p>Warning</p> <p>La personne qui vient de cr\u00e9er son compte ne sera pas connect\u00e9, il faut appeler la m\u00e9thode <code>connecter() (fr) - logging() (en)</code> pour se connecter.</p>"},{"location":"module_user/#supprimer-une-session","title":"Supprimer une session","text":"<p>Pour supprimer un utilisateur, il faut faire appel \u00e0 la m\u00e9thode <code>supprimer_utilisateur() (fr) - delete_user() (en)</code>.</p> <p>Suppression d'un utilisateur</p> <pre><code>robot.utilisateur.supprimer_utilisateur()\n\nou alors\n\nrobot.user.delete_user()\n</code></pre> <p>Warning</p> <p>Si la personne est connect\u00e9e, elle sera d\u00e9connect\u00e9e. Cette m\u00e9thode supprime d\u00e9finitivement l'utilisateur connect\u00e9.</p>"},{"location":"module_user/#methodes-utiles-liees-aux-cartes-et-sessions","title":"Methodes utiles li\u00e9es aux cartes et sessions","text":""},{"location":"module_user/#recuperer-les-informations-de-la-personne-connectee","title":"R\u00e9cup\u00e9rer les informations de la personne connect\u00e9e","text":"<p>Pour r\u00e9cup\u00e9rer les informations de la personne connect\u00e9e, on peut utiliser la m\u00e9thode <code>obtenir_utilisateur_connecte() (fr) - get_logged_in_user() (en)</code>.</p> <p>Success</p> <pre><code>if robot.verifier_session():\n        utilisateur_connecte = robot.utilisateur.obtenir_utilisateur_connecte()\n        print(\"Le prenom de la personne connect\u00e9e est: \", utilisateur_connecte.prenom)\n        print(\"Le nom de la personne connect\u00e9e est:\", utilisateur_connecte.nom)\n\nou alors\n\nif robot.user.check_session():\n        logged_in_user = robot.user.get_logged_in_user()\n        print(\"Le prenom de la personne connect\u00e9e est: \", logged_in_user.firstname)\n        print(\"Le nom de la personne connect\u00e9e est: \", logged_in_user.lastname)\n</code></pre> <p>Ce code permet d' afficher dans le terminal le prenom et le nom de l' utilisateur. Voir User pour plus d'informations sur la structure de donn\u00e9es utilisateur.</p>"},{"location":"module_user/#recuperer-la-carte-detectee-a-lecran","title":"R\u00e9cuperer la carte detect\u00e9e \u00e0 l'\u00e9cran","text":"<p>Pour r\u00e9cup\u00e9rer la carte d\u00e9tect\u00e9e \u00e0 l'\u00e9cran, on peut utiliser la m\u00e9thode <code>detecter_carte(seuil_minimal : float, seuil_arret_recherche : float) (fr) - detect_card(minimum_threshold: float, search_stop_threshold: float) (en)</code>. Cette m\u00e9thode retourne l'image detect\u00e9e \u00e0 l'\u00e9cran.</p> <p>Note</p> <p>Les seuils sont optionnels, si on ne les met pas, ils prendront les valeurs par d\u00e9faut qui sont 0.75 et 0.85.</p> <p>Success</p> <pre><code>carte = robot.utilisateur.detecter_carte()\n\nou alors\n\ncard = robot.user.detect_card()\n</code></pre> <p>Warning</p> <p>Cette fonction retourne l'image qui n appartient pas selon le programme \u00e0 un utilisateur d\u00e9j\u00e0 connu.</p>"},{"location":"module_user/#exemple-complet","title":"Exemple Complet","text":"<pre><code>from pybot import Robot, Couleur\n\nrobot = Robot()\n\nrobot.demarrer_webapp()\n\nrobot.demarrer_module_fenetre()\n\nrobot.fenetre.ouvrir_fenetre(1500, 1000)\nrobot.demarrer_module_camera()\n\nrobot.demarrer_module_utilisateur()\n\nboutons = robot.attributs.boutons\nboutons.quitter = robot.fenetre.creer_bouton(100, 50, 10, 80, Couleur.BLANC)\nboutons.quitter.ajouter_texte(\"quitter\", 10, 10, 20, Couleur.NOIR)\n\nboutons.deconnecter = robot.fenetre.creer_bouton(200, 50, 10, 10, Couleur.BLANC)\nboutons.deconnecter.ajouter_texte(\"deconnecter\", 10, 10, 20, Couleur.NOIR)\n\nrobot.attributs.mettre_a_jour_affichage = False\n\nwhile robot.est_actif():\n\n    robot.verifier_evenements()\n    boutons = robot.attributs.boutons\n    boutons.quitter.afficher() \n    boutons.deconnecter.afficher()\n\n    if boutons.quitter.est_actif():\n        robot.desactiver()\n\n    if robot.utilisateur.verifier_session() == False:\n        robot.utilisateur.connecter()\n        if robot.utilisateur.verifier_session():\n            user = robot.utilisateur.obtenir_utilisateur_connecte()\n            robot.fenetre.afficher_fond()\n            robot.fenetre.afficher_texte(\"Bonjour \" + user.prenom + \" \" + user.nom, 400, 600, 20, Couleur.BLANC)\n\n    if boutons.deconnecter.est_actif():\n        if robot.utilisateur.verifier_session():\n            robot.utilisateur.deconnecter()\n            robot.fenetre.afficher_fond()\n            robot.fenetre.afficher_texte(\"Deconnexion reussie\", 400, 600, 20, Couleur.BLANC)\n        else:\n            robot.fenetre.afficher_fond()\n            robot.fenetre.afficher_texte(\"Personne n'est connect\u00e9e\", 400, 600, 20, Couleur.BLANC)\n\n    robot.camera.afficher_camera(300, 10)\n    robot.fenetre.actualiser_affichage()\n</code></pre>"},{"location":"module_window/","title":"Module Fen\u00eatre - Window","text":"<p>Vous \u00eates ici dans la documentation du module fen\u00eatre - window du robot.</p> <p>Ce module sert \u00e0 g\u00e9rer l\u2019interface graphique (fen\u00eatre), cette interface graphique servira d\u2019interm\u00e9diaire entre l\u2019utilisateur et le robot ainsi que ses autres modules.</p> <p>En effet, ce module est le module le plus important, car c\u2019est lui qui vous permettra d\u2019interagir avec le robot en d\u00e9clenchant des comportements selon vos actions (appui sur un bouton pour d\u00e9marrer une discussion avec le robot\u2026).</p> <p>Warning</p> <p>Avant d\u2019utiliser un module, il faudra toujours le lancer sinon il vous sera impossible d\u2019utiliser le module et les m\u00e9thodes lier \u00e0 celui-ci.</p> <p>Demmarer le module fenetre</p> <pre><code>robot.demarrer_module_fenetre()\n\nou alors\n\nrobot.start_window_module()\n</code></pre> <p>\u00c0 partir de ce moment, les objets fenetre et window sont initialis\u00e9s dans le robot, ils sont donc utilisables.</p> <p>Note</p> <p>La methode <code>demarrer_module_fenetre()</code> initialise les objets fenetre et window dans le robot et c'est pareil pour <code>start_window_module()</code>.</p>"},{"location":"module_window/#ouvrir-une-fenetre","title":"Ouvrir une fen\u00eatre","text":"<p>La premi\u00e8re chose que vous allez vouloir faire avec la fen\u00eatre, c'est de l\u2019ouvrir, en effet tant que vous n\u2019ouvrez pas la fen\u00eatre, celle-ci est inutilisable.</p> <p>Pour cela, on va donc faire appelle \u00e0 la m\u00e9thode <code>ouvrir_fenetre(longueur: int, hauteur: int) (fr) - open_window(width : int, height : int) (en)</code> en lui passant en param\u00e8tre la longueur et la largeur de la fen\u00eatre.</p> <p>Ouvrir la fenetre</p> <pre><code>l = 1200\nh = 900\nrobot.fenetre.ouvir_fenetre(l, h)\n\nou alors\n\nw = 1200\nh = 900\nrobot.window.open_window(w, h)\n</code></pre> <p>Note</p> <p>Si vous ne donnez pas de param\u00e8tre \u00e0 la m\u00e9thode, alors la fen\u00eatre s\u2019ouvrira avec une taille de 800 sur 600.</p>"},{"location":"module_window/#fermer-la-fenetre","title":"Fermer la fen\u00eatre","text":"<p>Pour fermer la fen\u00eatre, il suffit d\u2019appeler la m\u00e9thode <code>fermer_fenetre() (fr) - close_window() (en)</code>.</p> <p>Fermer la fenetre</p> <pre><code>robot.fenetre.fermer_fenetre()\n\nou alors\n\nrobot.window.close_window()\n</code></pre>"},{"location":"module_window/#actualiser-laffichage","title":"Actualiser l\u2019affichage","text":"<p>\u00c0 chaque fois qu'une modification est faite (ex: un changement de titre, un nouveau bouton, un texte \u00e0 afficher), il est important de mettre \u00e0 jour l'affichage de la fen\u00eatre. On utilise la m\u00e9thode <code>actualiser_affichage() (fr) - refresh_display() (en)</code>.</p> <p>Id\u00e9alement, cette m\u00e9thode est appel\u00e9e dans une boucle afin de garder l'affichage \u00e0 jour.</p> <p>Actualiser l'affichage</p> <pre><code>robot.fenetre.actualiser_affichage()\n\nou alors\n\nrobot.window.refresh_display()\n</code></pre>"},{"location":"module_window/#passer-la-fenetre-en-plein-ecran","title":"Passer la fen\u00eatre en plein \u00e9cran","text":"<p>Pour passer la fen\u00eatre en plein \u00e9cran, il suffit d\u2019appeler la m\u00e9thode <code>plein_ecran(changer : bool) (fr) - full_screen(change : bool) (en)</code>.</p> <p>Plein \u00e9cran</p> <pre><code>robot.fenetre.plein_ecran(True) # pour passer en plein \u00e9cran\nrobot.fenetre.plein_ecran(False) # pour sortir du plein \u00e9cran\n\nou alors\n\nrobot.window.full_screen(True) # for full screen\nrobot.window.full_screen(False) # for exit full screen\n</code></pre>"},{"location":"module_window/#modifier-le-titre-de-la-fenetre","title":"Modifier le titre de la fen\u00eatre","text":"<p>Pour modifier le titre de la fen\u00eatre, il suffit d\u2019appeler la m\u00e9thode <code>changer_titre(titre : str) (fr) - change_title(title : str) (en)</code>.</p> <p>Modifier le titre</p> <pre><code>titre = \"Nouveau titre\"\nrobot.fenetre.changer_titre(titre)\n\nou alors\n\ntitle = \"New title\"\nrobot.window.change_title(title)\n</code></pre>"},{"location":"module_window/#changer-la-couleur-de-fond-de-la-fenetre","title":"Changer la couleur de fond de la fen\u00eatre","text":"<p>Pour changer la couleur de fond de la fen\u00eatre, il suffit d\u2019appeler la m\u00e9thode <code>changer_couleur_fond(couleur : str) (fr) - change_background_color(color : str) (en)</code>.</p> <p>Changer la couleur de fond</p> <pre><code>couleur = (255, 255, 255) # blanc\nrobot.fenetre.changer_couleur_fond(couleur)\n\nou alors\n\ncolor = (0, 0, 0) # black\nrobot.window.change_background_color(color)\n</code></pre> <p>Note</p> <p>Voir la documentation sur les couleurs pour plus d'informations.</p>"},{"location":"module_window/#afficher-le-fond-de-la-fenetre","title":"Afficher le fond de la fen\u00eatre","text":"<p>Pour afficher le fond de la fen\u00eatre, il suffit d\u2019appeler la m\u00e9thode <code>afficher_fond() (fr) - display_background() (en)</code>.</p> <p>Afficher le fond</p> <pre><code>robot.fenetre.afficher_fond()\n\nou alors\n\nrobot.window.display_background()\n</code></pre> <p>Note</p> <p>Cette m\u00e9thode est utile si vous avez modifi\u00e9 la couleur de fond de la fen\u00eatre et que vous voulez voir le changement.</p>"},{"location":"module_window/#exemple-complet-1","title":"Exemple complet 1","text":"<pre><code>from pybot import Robot, Couleur\n\nrobot = Robot()\nrobot.demarrer_module_fenetre()\n\nrobot.fenetre.ouvrir_fenetre(1200, 900)\nrobot.fenetre.changer_titre(\"Nouveau titre\")\nrobot.fenetre.changer_couleur_fond(Couleur.BLANC)\nrobot.fenetre.afficher_fond()\nrobot.ajouter_evenement(\"echap\", \"sortir\")\n\nwhile robot.est_actif() :\n    evenement = robot.verifier_evenements()\n    if \"sortir\" in evenement:\n        robot.desactiver()\n        break # Sortie de la boucle\n    robot.fenetre.actualiser_affichage()\n</code></pre>"},{"location":"module_window/#dessiner-un-rectangle","title":"Dessiner un rectangle","text":"<p>Pour dessiner un rectangle, il suffit d\u2019appeler la m\u00e9thode <code>dessiner_rectangle(longueur: int, hauteur: int, position_x: int, position_y: int, couleur: Couleur) (fr) - draw_rectangle(width: int, height: int, position_x: int, position_y: int, color: Couleur)  (en)</code>.</p> <p>Warning</p> <p>La position (x, y) est le coin en haut \u00e0 gauche du rectangle.</p> <p>Dessiner un rectangle</p> <pre><code>l = 100\nh = 50\nx = 100\ny = 100\ncouleur = Couleur.BLEU\nrobot.fenetre.dessiner_rectangle(l, h, x, y, couleur)\n\nou alors\n\nw = 100\nh = 50\nx = 100\ny = 100\ncolor = Couleur.BLEU\nrobot.window.draw_rectangle(w, h, x, y, color)\n</code></pre> <p>Note</p> <p>Voir la documentation sur les positions pour plus d'informations.</p>"},{"location":"module_window/#afficher-un-texte","title":"Afficher un texte","text":"<p>Pour afficher une ligne de texte, il suffit d\u2019appeler la m\u00e9thode <code>afficher_texte(texte : str, position_x: int, position_y: int, taille: int, couleur: Couleur) (fr) -</code> <code>display_text(text : str, position_x: int, position_y: int, size: int, color: Couleur) (en)</code>.</p> <p>Warning</p> <p>La position (x, y) est le coin en haut \u00e0 gauche du texte.</p> <p>Afficher un texte</p> <pre><code>texte = \"Bonjour\"\nx = 100\ny = 100\ntaille = 24\ncouleur = Couleur.NOIR\nrobot.fenetre.afficher_texte(texte, x, y, taille, couleur)\n\nou alors\n\ntext = \"Hello\"\nx = 100\ny = 100\nsize = 24\ncolor = Couleur.NOIR\nrobot.window.display_text(text, x, y, size, color)\n</code></pre>"},{"location":"module_window/#afficher-une-image","title":"Afficher une image","text":"<p>Pour afficher une image, il suffit d\u2019appeler la m\u00e9thode <code>afficher_image(chemin_fichier : str, position_x: int, position_y: int) (fr) -</code> <code>display_image(file_path : str, position_x: int, position_y: int) (en)</code>.</p> <p>Warning</p> <p>La position (x, y) est le coin en haut \u00e0 gauche de l'image.</p> <p>Afficher une image</p> <pre><code>chemin = \"/images/photo.png\"\nx = 100\ny = 100\nrobot.fenetre.afficher_image(chemin, x, y)\n\nou alors\n\npath = \"/images/picture.png\"\nx = 100\ny = 100\nrobot.window.display_image(path, x, y)\n</code></pre> <p>Note</p> <p>Le module Cam\u00e9ra - Camera permet de prendre des photos et de les enregistrer dans un fichier.</p>"},{"location":"module_window/#exemple-complet-2","title":"Exemple complet 2","text":"<pre><code>from pybot import Robot, Couleur\n\nrobot = Robot()\nrobot.demarrer_module_fenetre()\n\nrobot.fenetre.ouvrir_fenetre(1200, 900)\nrobot.fenetre.changer_titre(\"Nouveau titre\")\nrobot.fenetre.changer_couleur_fond(Couleur.BLANC)\nrobot.fenetre.afficher_fond()\nrobot.ajouter_evenement(\"echap\", \"sortir\")\n\nrobot.fenetre.dessiner_rectangle(100, 50, 100, 100, Couleur.BLEU_CIEL)\nrobot.fenetre.afficher_texte(\"Bonjour\", 100, 100, 24, Couleur.NOIR)\nrobot.fenetre.afficher_image(\"images/photo.png\", 100, 100) # \u00e0 remplacer par le chemin de votre image\n\nwhile robot.est_actif() :\n    evenement = robot.verifier_evenements()\n    if \"sortir\" in evenement:\n        robot.desactiver()\n    robot.fenetre.actualiser_affichage()\n</code></pre>"},{"location":"module_window/#creer-un-bouton","title":"Creer un bouton","text":"<p>Pour cr\u00e9er un bouton, il suffit d\u2019appeler la m\u00e9thode <code>creer_bouton(longueur: int, hauteur: int, position_x: int, position_y: int, couleur: Couleur) (fr) -</code> <code>create_button(width: int, height: int, position_x: int, position_y: int, color: Couleur) (en)</code>.</p> <p>Warning</p> <p>La position (x, y) est le coin en haut \u00e0 gauche du bouton.</p> <p>Cr\u00e9er un bouton</p> <pre><code>l = 100\nh = 50\nx = 100\ny = 100\ncouleur = Couleur.BLEU\nbouton = robot.fenetre.creer_bouton(l, h, x, y, couleur)\n\nou alors\n\nw = 100\nh = 50\nx = 100\ny = 100\ncolor = Couleur.BLEU\nbutton = robot.window.create_button(w, h, x, y, color)\n</code></pre> <p>Note</p> <p>Voir la documentation sur les boutons pour plus d'informations. Regarder la documentation sur les attributs du robot pour plus d'informations.</p>"},{"location":"module_window/#creer-une-zone-de-texte","title":"Creer une zone de texte","text":"<p>Pour cr\u00e9er une zone de texte, il suffit d\u2019appeler la m\u00e9thode <code>creer_zone_texte(longueur: int, hauteur: int, position_x: int, position_y: int, couleur: Couleur) (fr) -</code> <code>create_text_area(width: int, height: int, position_x: int, position_y: int, color: Couleur) (en)</code>.</p> <p>Warning</p> <p>La position (x, y) est le coin en haut \u00e0 gauche de la zone de texte.</p> <p>Cr\u00e9er une zone de texte</p> <pre><code>l = 100\nh = 50\nx = 100\ny = 100\ncouleur = Couleur.BLEU\nzone_texte = robot.fenetre.creer_zone_texte(l, h, x, y, couleur)\n\nou alors\n\nw = 100\nh = 50\nx = 100\ny = 100\ncolor = Couleur.BLEU\ntext_area = robot.window.create_text_area(w, h, x, y, color)\n</code></pre> <p>Note</p> <p>Voir la documentation sur les zones de texte pour plus d'informations. Regarder la documentation sur les attributs du robot pour plus d'informations.</p>"},{"location":"module_window/#afficher-carte-detectee","title":"Afficher carte d\u00e9tect\u00e9e","text":"<p>Une fois une carte d\u00e9tect\u00e9e, il est possible de l'afficher sur la fen\u00eatre. Pour afficher une carte d\u00e9tect\u00e9e, il suffit d\u2019appeler la m\u00e9thode <code>afficher_carte_detectee(self, detected_card: MatLike, position_x: int, position_y: int) (fr)</code> <code>- display_detected_card(self, detected_card: MatLike, position_x: int, position_y: int) (en)</code>.</p> <p>Warning</p> <p>La position (x, y) est le coin en haut \u00e0 gauche de l'image.</p> <p>Afficher une carte d\u00e9tect\u00e9e</p> <pre><code>carte = robot.utilisateur.detecter_carte()\nx = 100\ny = 100\nrobot.fenetre.afficher_carte_detectee(carte, x, y)\n\nou alors\n\ncard = robot.user.detect_card()\nx = 100\ny = 100\nrobot.window.display_detected_card(card, x, y)\n</code></pre> <p>Voici o\u00f9 trouver la documentation sur la m\u00e9thode <code>detecter_carte() (fr) - detect_card() (en)</code>.</p>"},{"location":"module_window/#obtenir-limage-de-lemotion","title":"Obtenir l'image de l'\u00e9motion","text":"<p>Le module IA - AI permet de donner des \"\u00e9motions\" au robot. Pour afficher l'image de l'\u00e9motion, il faut appeler la m\u00e9thode <code>obtenir_image_emotion(emotion : str) (fr) - get_emotion_image(emotion : str) (en)</code>.</p> <p>Et ensuite, afficher l'image avec la m\u00e9thode <code>afficher_image(chemin : str, position_x: int, position_y: int) (fr) - display_image(path : str, position_x: int, position_y: int) (en)</code></p> <p>Obtenir l'image de l'\u00e9motion</p> <pre><code>emotion = \"heureux\"\nchemin = robot.fenetre.obtenir_image_emotion(emotion)\nx = 100\ny = 100\nrobot.fenetre.afficher_image(chemin, x, y)\n\nou alors\n\nemotion = \"heureux\"\npath = robot.window.get_emotion_image(emotion)\nx = 100\ny = 100\nrobot.window.display_image(path, x, y)\n</code></pre> <p>Info</p> <p>Les images des emotions sont stock\u00e9es dans le dossier <code>images/emotions</code>. Elles peuvent \u00eatre remplac\u00e9es par des images personnalis\u00e9es. Les images de bases font du 108x108 pixels. La taille de l'image peut changer si vous la remplacez. Mais essayez de garder la meme taille entre toute les images pour un meilleur rendu.</p> <p>Note</p> <p>Voir la documentation sur les \u00e9motions pour plus d'informations. IA - AI</p>"},{"location":"python/","title":"Apprendre python","text":"<p>Un cours d'initiation au language python avec des exemples.</p>"},{"location":"python/#1-les-variables","title":"1. Les Variables","text":"<p>Une variable est une mani\u00e8re de stocker une donn\u00e9e. La variable doit avoir un type pour d\u00e9finir la donn\u00e9e stock\u00e9e.</p> <p>Les types possibles sont: - int =&gt; Chiffre ou nombre - str =&gt; Caract\u00e8re ou cha\u00eene de caract\u00e8res - bool =&gt; Boolean True (\"Vrai\") ou False (\"Faux\") - ...</p>"},{"location":"python/#exemple","title":"Exemple:","text":"<pre><code>un_bool = True\nun_int = 42\nune_str = \"Coucou\"\n\nprint(\"Ceci est un boolean:\", un_bool)\nprint(\"Ceci est un integer:\", un_int)\nprint(\"Ceci est une chaine de caracteres:\", une_str)\n</code></pre>"},{"location":"python/#2-les-fonctions","title":"2. Les fonctions","text":"<p>Les fonctions d\u00e9finissent des actions \u00e0 faire lors de leur appel. Une fonction est constitu\u00e9e de son nom, des param\u00e8tres pris en entr\u00e9e et de son type de retour.</p>"},{"location":"python/#exemple_1","title":"Exemple:","text":"<pre><code># Cette fonction affiche \"bonjour\"\ndef afficher_bonjour():\n    print(\"Bonjour\")\n\n# Cette fonction affiche le contenu de mot\ndef afficher_argument(mot=\"Salut\"):\n    print(mot)\n\n# Cette fonction affiche \"Coucou\" et renvoi le m\u00eame mot\ndef afficher_et_renvoyer_coucou() -&gt; str:\n    mot = \"Coucou\"\n    print(mot)\n    return mot\n\ndef main():\n    afficher_bonjour()\n    afficher_argument(\"Bonjour \u00e0 tous, je suis un argument\")\n    afficher_argument()\n    retour = afficher_et_renvoyer_coucou()\n    print(\"retour =\", retour)\n</code></pre>"},{"location":"python/#3-les-conditions","title":"3. Les conditions","text":"<p>Les conditions permettent de limiter l'ex\u00e9cution d'une action si et seulement si la condition est valide.</p>"},{"location":"python/#exemple_2","title":"Exemple:","text":"<pre><code>def positif_ou_negatif(nombre: int):\n    if nombre &gt; 0:\n        print(nombre, \"est positif !\")\n    else:\n        print(nombre, \"est negatif !\")\n</code></pre>"},{"location":"python/#4-les-boucles","title":"4. Les Boucles","text":"<p>Les boucles sont des \u00e9l\u00e9ments qui permettent de r\u00e9p\u00e9ter une action, un nombre de fois d\u00e9finit par la condition d'arr\u00eat.</p>"},{"location":"python/#exemple_3","title":"Exemple:","text":"<pre><code>def dire_bonjour_a_tous_les_etudiants(nombre_etudiants: int):\n    indice = 1\n    while indice &lt;= nombre_etudiants:\n        print(\"Bonjour etudiant numero\", indice, \"\\n\")\n        indice = indice + 1\n</code></pre>"},{"location":"python/#5-les-classes","title":"5. Les classes","text":"<p>Les classes sont des structures de code qui d\u00e9finissent un objet et les comportements qu'il peut r\u00e9aliser. Comme dans l'exemple suivant, vous pouvez importer une classes \"Robot\" depuis la biblioth\u00e8que \"Robot\".  Ensuite, il vous faut cr\u00e9er un objet Robot, avec ici un nom et un \u00e2ge. Par la suite, vous pouvez donner des ordres \u00e0 votre robot, en faisant appel aux m\u00e9thodes que la classes Robot contient.</p>"},{"location":"python/#exemple_4","title":"Exemple:","text":"<pre><code>from pybot import Robot\n\n\ndef main():\n    robot = Robot(\"Nono\", 11)\n    robot.dire_bonjour()\n    robot.rendre_muet()\n    robot.dire_bonjour()\n    robot.donner_la_parole()\n    robot.dire_bonjour()\n</code></pre>"},{"location":"ref/","title":"R\u00e9f\u00e9rence de la biblioth\u00e8que","text":"<p>Pour en savoir plus, dans un \u00e9diteur tel que visual studio code, il suffit de passer la souris sur une fonction pour voir les commentaires la concernant.</p> <p></p>"},{"location":"ref/#les-evenements","title":"Les \u00e9v\u00e8nements","text":"<p>Liste des touches pour cr\u00e9er des \u00e9v\u00e8nements:</p> <pre><code>* echap (touche \u00c9chap)\n* espace (touche Espace)\n* 0\n* 1\n* 2\n* 3\n* 4\n* 5\n* 6\n* 7\n* 8\n* 9\n* a\n* b\n* c\n* d\n* e\n* f\n* g\n* h\n* i\n* j\n* k\n* l\n* m\n* n\n* o\n* p\n* q\n* r\n* s\n* t\n* u\n* v\n* w\n* x\n* y\n* z\n* F1\n* F2\n* F3\n* F4\n* F5\n* F6\n* F7\n* F8\n* F9\n* F10\n* F11\n* F12\n* F13\n* F14\n* F15\n</code></pre>"},{"location":"ref/#les-filtres","title":"Les filtres","text":"<p>Liste des filtres que l'on peut appliquer sur une image</p> <pre><code>* cartoon\n* ocean\n* alien\n* rose\n* flou\n* noir_et_blanc\n* tourner\n* vernis\n</code></pre>"},{"location":"ref/#liste-des-methodes-disponible-par-modules","title":"Liste des m\u00e9thodes disponible par modules","text":""},{"location":"ref/#module-robot","title":"Module Robot","text":"<pre><code>robot = Robot()\n</code></pre> <pre><code>robot.nom_de_la_methode(argument_de_la_methode)\n</code></pre> <pre><code>desactiver()\ndeactivate()\n</code></pre> <pre><code>est_actif()\nis_active()\n</code></pre> <pre><code>dort(secondes : int)\nsleep(secondes : int)\n</code></pre> <pre><code>ajouter_evenement(touche : str, nom : str)\nadd_event(key : str, name : str)\n</code></pre> <pre><code>verifier_evenements()\ncheck_events()\n</code></pre> <pre><code>supprimer_evenement(nom : str)\ndelete_event(nom : str)\n</code></pre> <pre><code>demarrer_webapp()\nstart_webapp()\n</code></pre>"},{"location":"ref/#module-fenetre-window","title":"Module Fenetre - Window","text":"<pre><code>robot.demarrer_module_fenetre()\nrobot.start_window_module()\n</code></pre> <pre><code>robot.fenetre.nom_de_la_methode(argument_de_la_methode)\nrobot.window.method_name(method_argument)\n</code></pre> <pre><code>ouvrir_fenetre(longueur: int, hauteur: int)\nopen_window(width : int, height : int)\n</code></pre> <pre><code>fermer_fenetre()\nclose_window()\n</code></pre> <pre><code>actualiser_affichage()\nrefresh_display()\n</code></pre> <pre><code>plein_ecran(changer : bool)\nfull_screen(change : bool)\n</code></pre> <pre><code>changer_titre(titre : str)\nchange_title(title : str)\n</code></pre> <pre><code>changer_couleur_fond(couleur : str)\nchange_background_color(color : str)\n</code></pre> <pre><code>afficher_fond()\ndisplay_background()\n</code></pre> <pre><code>dessiner_rectangle(longueur: int, hauteur: int, position_x: int, position_y: int, couleur: Couleur)\ndraw_rectangle(width: int, height: int, position_x: int, position_y: int, color: Couleur)\n</code></pre> <pre><code>afficher_texte(texte : str, position_x: int, position_y: int, taille: int, couleur: Couleur)\ndisplay_text(text : str, position_x: int, position_y: int, size: int, color: Couleur)\n</code></pre> <pre><code>afficher_image(chemin_fichier : str, position_x: int, position_y: int)\ndisplay_image(file_path : str, position_x: int, position_y: int)\n</code></pre> <pre><code>creer_bouton(longueur: int, hauteur: int, position_x: int, position_y: int, couleur: Couleur)\ncreate_button(width: int, height: int, position_x: int, position_y: int, color: Couleur)\n</code></pre> <pre><code>creer_zone_texte(longueur: int, hauteur: int, position_x: int, position_y: int, couleur: Couleur)\ncreate_text_area(width: int, height: int, position_x: int, position_y: int, color: Couleur)\n</code></pre> <pre><code>afficher_carte_detectee(self, detected_card: MatLike, position_x: int, position_y: int)\ndisplay_detected_card(self, detected_card: MatLike, position_x: int, position_y: int)\n</code></pre> <pre><code>obtenir_image_emotion(emotion : str)\nget_emotion_image(emotion : str)\n</code></pre>"},{"location":"ref/#module-camera","title":"Module Camera","text":"<pre><code>robot.demarrer_module_camera()\nrobot.start_camera_module()\n</code></pre> <pre><code>robot.camera.nom_de_la_methode(argument_de_la_methode)\nrobot.camera.method_name(method_argument)\n</code></pre> <pre><code>afficher_camera(position_x: int, position_y: int)\ndisplay_camera(position_x : int, position_y : int)\n</code></pre> <pre><code>prendre_photo(nom_fichier: str)\ntake_picture(file_name : str)\n</code></pre> <pre><code>appliquer_filtre(chemin_fichier: str, nom_filtre: str)\napply_filter(file_name : str, filter_name : str)\n</code></pre>"},{"location":"ref/#module-ia-ai","title":"Module IA - AI","text":"<pre><code>robot.demarrer_module_IA()\nrobot.start_AI_module()\n</code></pre> <pre><code>robot.IA.nom_de_la_m(argument_de_la_methode)\nrobot.AI.method_name(method_argument)\n</code></pre> <pre><code>demarrer_discussion()\nstart_conversation()\n</code></pre> <pre><code>arreter_discussion()\nstop_conversation()\n</code></pre> <pre><code>poser_question(question : str)\nask_question(question : str)\n</code></pre> <pre><code>creer_historique_conversation()\ncreate_conversation_history()\n</code></pre> <pre><code>charger_historique(historique_de_conversation : ConversationSummaryBufferMemory)\nload_history(conversation_history : ConversationSummaryBufferMemory)\n</code></pre> <pre><code>supprimer_historique()\ndelete_history()\n</code></pre> <pre><code>obtenir_historique_conversation()\nget_current_conversation_history()\n</code></pre> <pre><code>obtenir_emotion(phrase : str)\nget_emotion(sentence : str)\n</code></pre>"},{"location":"ref/#module-utilisateur-user","title":"Module Utilisateur - User","text":"<pre><code>robot.demarrer_module_utilisateur()\nrobot.start_user_module()\n</code></pre> <pre><code>robot.utilisateur.nom_de_la_methode(argument_de_la_methode)\nrobot.user.method_name(method_argument)\n</code></pre> <pre><code>verifier_session()\ncheck_session()\n</code></pre> <pre><code>connecter(seuil_minimal : float, seuil_arret_recherche : float)\nlogging(self, minimum_threshold: float, search_stop_threshold: float)\n</code></pre> <pre><code>deconnecter()\nlogout()\n</code></pre> <pre><code>creer_utilisateur(prenom, nom, carte)\ncreate_user(firstname, lastname, card)\n</code></pre> <pre><code>supprimer_utilisateur()\ndelete_user()\n</code></pre> <pre><code>obtenir_utilisateur_connecte()\nget_logged_in_user()\n</code></pre> <pre><code>detecter_carte(seuil_minimal : float, seuil_arret_recherche : float)\ndetect_card(minimum_threshold: float, search_stop_threshold: float)\n</code></pre>"},{"location":"ref/#module-audio","title":"Module Audio","text":"<p>Aucune Actuellement</p>"},{"location":"ref/#les-boutons","title":"Les boutons","text":"<pre><code>ajouter_texte(texte : str, position_x : int, position_y : int, taille : int, couleur : Couleur)\nadd_text(text : str, position_x : int, position_y : int, size : int, color : Couleur)\n</code></pre> <pre><code>afficher()\ndisplay()\n</code></pre> <pre><code>est_actif()\nis_active()\n</code></pre>"},{"location":"ref/#les-zones-de-texte","title":"Les zones de texte","text":"<pre><code>afficher()\ndisplay()\n</code></pre> <pre><code>est_actif()\nis_active()\n</code></pre> <pre><code>ecrire(robot : Robot)\nwrite(robot : Robot)\n</code></pre> <pre><code>obtenir_texte()\nget_text()\n</code></pre> <pre><code>effacer_texte()\nerase_text()\n</code></pre> <pre><code>modifier_taille_police(taille : int)\nchange_font_size(size : int)\n</code></pre> <pre><code>modifier_couleur_police(couleur : Couleur)\nchange_font_color(color : Couleur)\n</code></pre>"},{"location":"roadmap/","title":"Progression g\u00e9n\u00e9rale","text":"<p>L'objectif est d'obtenir une biblioth\u00e8que compos\u00e9e de modules dont l'utilisation combin\u00e9e permet d'interagir avec un bot (\u00e9paul\u00e9 par une IA conversationnelle) par la voix, le texte ou l\u2019image.</p> <p>Le premier cas d'usage pr\u00e9vu est l'assemblage d'un robot : un programme faisant appel \u00e0 cette biblioth\u00e8que alli\u00e9 \u00e0 une enveloppe physique et des composants vari\u00e9s : cam\u00e9ra, haut-parleurs, microphone, \u00e9cran notamment. Ce robot aura pour fonction principale d'accueillir des coll\u00e9giens dans le hall de l'\u00e9tablissement et pourrait par exemple, si entrain\u00e9 avec les donn\u00e9es du coll\u00e8ge, r\u00e9pondre \u00e0 des questions comme: \"Dans quelle salle se d\u00e9roule le cours de la 3e B dans 10 minutes ?\".</p> <p>Le projet se d\u00e9coupe en deux niveaux : la classe g\u00e9n\u00e9rale Robot qui doit avoir des m\u00e9thodes acc\u00e9dant \u00e0 toutes les fonctionnalit\u00e9s des modules de mani\u00e8re simple, correctement nomm\u00e9es et document\u00e9es (en fran\u00e7ais) pour une utilisation par les \u00e9l\u00e8ves.</p> <p>Les modules, avec leurs fonctionnalit\u00e9s plus bas niveau doivent aussi \u00eatre document\u00e9s pour que les \u00e9tudiants de 42 puissent s'int\u00e9grer plus facilement et participer au d\u00e9veloppement.</p>"},{"location":"roadmap/#liste-des-fonctionnalites-de-la-classe-robot-et-leur-avancement","title":"Liste des fonctionnalit\u00e9s de la classe Robot et leur avancement:","text":""},{"location":"roadmap/#fonctionnalites-a-creer-commenter-et-documenter","title":"Fonctionnalit\u00e9s \u00e0 cr\u00e9er, commenter et documenter","text":"<ul> <li> fonction fonctionnelle et stable</li> <li> fonction proprement comment\u00e9e</li> <li> fonction document\u00e9e (documentation externe)</li> </ul>"},{"location":"roadmap/#part-1-screen-basics","title":"part 1 - screen basics","text":"<ul> <li>robot.demarrer_webapp() : ,  , </li> <li>robot.creer_fenetre(...) : ,  , </li> <li>robot.changer_titre() : ,  , </li> <li>robot.actualiser_affichage() : ,  , </li> <li>robot.plein_ecran(changer) : ,  , </li> <li>robot.dort() : ,  , </li> </ul>"},{"location":"roadmap/#part-2-loop-and-events","title":"part 2 - loop and events","text":"<ul> <li>robot.est_actif() : ,  , </li> <li>robot.desactiver() : ,  , </li> <li>robot.fermer_fenetre() : ,  , </li> <li>robot.ajouter_evenement(...) : ,  , </li> <li>robot.verifier_evenements() : ,  , </li> <li>robot.supprimer_evenement(...) : ,  , </li> </ul>"},{"location":"roadmap/#part-3-buttons-and-layout","title":"part 3 - buttons and layout","text":"<ul> <li>robot.couleur_fond(couleur) : ,  , </li> <li>robot.afficher_fond() : ,  , </li> <li>robot.creer_bouton(...) : ,  , </li> <li>bouton.ajouter_texte(...) : ,  , </li> <li>bouton.afficher() : ,  , </li> <li>bouton.est_actif() : ,  , </li> <li>robot.dessiner_rectangle(...) : ,  , </li> <li>robot.afficher_texte(...) : ,  , </li> </ul>"},{"location":"roadmap/#part-4-camera-and-photos","title":"part 4 - camera and photos","text":"<ul> <li>robot.afficher_camera() : ,  , </li> <li>robot.prendre_photo(...) : ,  , </li> <li>robot.afficher_image(...) : ,  , </li> <li>robot.appliquer_filtre(...) : ,  , </li> </ul>"},{"location":"roadmap/#part-5-card-detection-and-user-session","title":"part 5 - card detection and user session","text":"<ul> <li>robot.detecter_carte() : ,  , </li> <li>robot.creer_utilisateur(...)  : ,  , </li> <li>robot.supprimer_utilisateur() : ,  , </li> <li>robot.robot.recuperer_utilisateur_connecte() : ,  , </li> <li>robot.connexion() : ,  , </li> <li>robot.deconnexion() : ,  , </li> <li>robot.verifier_session() : ,  , </li> </ul>"},{"location":"roadmap/#part-6-talk-to-robot","title":"part 6 - talk to robot","text":"<ul> <li>robot.entrainer(...) : ,  , </li> <li>robot.repondre_question(...) : ,  , </li> </ul>"},{"location":"roadmap/#part-7-robot-is-talking","title":"part 7 - robot is talking","text":"<ul> <li>robot.parler(...) : ,  , </li> </ul>"},{"location":"roadmap/#part-8-robot-emotions","title":"part 8 - robot emotions","text":"<ul> <li>robot.choisir_emotion(...) : ,  , </li> </ul>"},{"location":"roadmap/#extra","title":"extra","text":"<ul> <li>robot.message_erreur() : ,  , </li> </ul>"},{"location":"roadmap/#liste-des-different-modules-et-leur-avancement","title":"Liste des diff\u00e9rent modules et leur avancement:","text":""},{"location":"roadmap/#module-fenetre","title":"Module fen\u00eatre","text":"<ul> <li>Wrapper pygame et pygame_gui</li> <li>Visage minimaliste avec expressions. S\u2019anime en cas de connexion ou r\u00e9agit aux erreurs.</li> <li>Possibilit\u00e9 d'affichage de texte d\u00e9filant des interactions, pouvant remplacer le speaker.</li> <li> <p>Un application graphique (pygame GUI) client pour afficher le stream camera, des boutons, du texte ou des images depuis la base de donn\u00e9es.</p> </li> <li> <p>D\u00e8s l\u2019identification :</p> </li> <li>saluer, variable</li> <li>d\u00e9clencher les questions pr\u00e9-enregistr\u00e9es actives de la DB</li> <li>\u00e9change libre</li> </ul>"},{"location":"roadmap/#module-camera","title":"Module cam\u00e9ra","text":"<ul> <li>Reconnaissance (identification) via la cam\u00e9ra d\u2019un \u00e9l\u00e8ve gr\u00e2ce \u00e0 son motif.</li> </ul>"},{"location":"roadmap/#module-webapp","title":"Module webapp","text":"<ul> <li>Permet de faire le backend pour travailler avec la base de donn\u00e9e, propose aussi un interface client web pour aider \u00e0 l'administration du robot.</li> <li>Un serveur web flask local avec base de donn\u00e9es dans laquelle se   trouvent les \u00e9l\u00e8ves. Cette base de donn\u00e9e contient a minima:</li> <li>nom</li> <li>pr\u00e9nom</li> <li>image carte (chemin vers un dossier local)</li> <li>ann\u00e9e ou date de cr\u00e9ation (RGPD)</li> <li> <p>string: r\u00e9sum\u00e9 du dernier \u00e9change pour des conversations fil\u00e9es</p> </li> <li> <p>Application web permettant :</p> </li> <li> <p>CRUD : formulaire nom + pr\u00e9nom + image.</p> </li> <li>Avec bouton image qui d\u00e9clenche une photo, en analyse la validit\u00e9 : carte valide (sens, pr\u00e9sence d\u2019une carte), et pas de match d\u2019un motif existant.</li> <li>Puis l\u2019enregistre.</li> <li>Modifier des champs existants.</li> <li>Supprimer un utilisateur.</li> <li>Lire le tableau des utilisateurs.</li> <li> <p>Page de logs (erreurs)</p> </li> <li> <p>DB question \u00e0 poser avec fen\u00eatre de temps (deux dates), avec une liste d\u00e9finie de r\u00e9ponses possibles : oui/non, ou une \u201cenum\u201d (chat gpt saura retranscrire la r\u00e9ponse de l\u2019\u00e9l\u00e8ve).</p> </li> <li>Champs :<ul> <li>from</li> <li>to</li> <li>question</li> <li>r\u00e9ponse valide</li> <li>Liste <li>Liste des questions actives</li> <li>Liste des r\u00e9ponses \u00e0 une question + nombre d\u2019occurences de chaque   r\u00e9ponse</li>"},{"location":"roadmap/#module-ia","title":"Module IA","text":"<ul> <li>Communiquer avec chatgpt</li> </ul>"},{"location":"roadmap/#module-audio-speaker","title":"Module Audio (Speaker)","text":"<ul> <li>Text to speech. Le texte est l\u2019output de l\u2019IA vers speaker.</li> <li>Capable de r\u00e9agir de mani\u00e8re adaptee au public, r\u00e9pondre \u00e0 des questions. R\u00e9ponses courtes.</li> </ul>"},{"location":"roadmap/#module-microphone","title":"Module Microphone","text":"<ul> <li>Speech to text. Capture du son et transformation en texte pour donner en input a l\u2019IA.</li> <li>Partir d\u2019un input (module microphone), pr\u00e9parer un prompt pour obtenir la r\u00e9ponse qui servira d\u2019output (module speaker et module \u00e9cran).</li> <li>Limitations des tokens, r\u00e9ponses courtes. Des sujets de discussions.</li> <li>Donner de la donn\u00e9e concernant le college en apprentissage au mod\u00e8le. (Par exemple renseigner sur les horaires cantines.)</li> <li>Actif sur commande (fonction listen on/off), capable d\u2019\u00e9couter la voix en isolant les bruits parasites et transcrire le contenu en texte.</li> </ul>"},{"location":"roadmap/#liste-des-different-materiel-et-fonctionnement","title":"Liste des diff\u00e9rent mat\u00e9riel et fonctionnement :","text":"<ul> <li> <p>Raspberry PI alimente un microphone, une camera, des hauts-parleurs</p> </li> <li> <p>Raspberry 4B 4GO</p> </li> <li>2 cartes micro SD 64 GO</li> <li>\u00e9cran tactile LCD tactile</li> <li>c\u00e2ble HDMI vers micro-hdmi</li> <li>alimentation 48W</li> <li>heat sinks</li> <li>camera v3</li> <li>camera HQ</li> <li>objectif camera HQ</li> <li>Nappe c\u00e2ble</li> <li>mini haut parleur usb</li> <li>microphone usb</li> </ul>"},{"location":"rpi/","title":"Configurer la biblioth\u00e8que pybot sur le Raspberry pi","text":"<ul> <li>notes pour configurer linux (Debian) pour que la biblioth\u00e8que fonctionne correctement avec tout les p\u00e9riph\u00e9riques. \u00c0 venir.</li> </ul>"},{"location":"text_area/","title":"Les zones de texte - text_area","text":"<p>Les zones de texte sont des \u00e9l\u00e9ments graphiques permettant de r\u00e9cup\u00e9rer des informations de l'utilisateur. Elles sont utilis\u00e9es pour permettre \u00e0 l'utilisateur de saisir des informations dans le robot.</p> <p>Warning</p> <p>Le robot \u00e0 la fin n'est pas cens\u00e9 utiliser le clavier pour saisir des informations. Ceci est une fonctionnalit\u00e9 qui sert d'entre deux avant l'ajout du module audio.</p>"},{"location":"text_area/#creer-une-zone-de-texte","title":"Cr\u00e9er une zone de texte","text":"<p>Voir la documentation de la fen\u00eatre.</p> <p>Apr\u00e8s avoir cr\u00e9\u00e9 une zone de texte, vous obtenez un objet (la zone de texte) qui vous permet de manipuler et personnaliser la zone de texte. Pour cela, vous pouvez utiliser les m\u00e9thodes qui vont vous \u00eatre pr\u00e9sent\u00e9es ci-dessous.</p> <p>Attention</p> <p>Les m\u00e9thodes pr\u00e9sent\u00e9es ci-dessous sont utilisables uniquement sur un objet cr\u00e9\u00e9 par la m\u00e9thode <code>creer_zone_texte() (fr) - create_text_area() (en)</code>.</p> <p>Note</p> <p>Pens\u00e9 \u00e0 donner une taille assez grande \u00e0 la zone de texte pour que l'utilisateur puisse saisir des informations, sans que cela sorte de la zone de texte, cr\u00e9ant un effet de \"d\u00e9passement\" de la zone de texte.</p>"},{"location":"text_area/#afficher-la-zone-de-texte","title":"Afficher la zone de texte","text":"<p>Quand vous cr\u00e9ez une zone de texte, elle n'est pas affich\u00e9e dans la fen\u00eatre. Pour l'afficher, il suffit d\u2019appeler la m\u00e9thode <code>afficher() (fr) - display() (en)</code>.</p> <p>Afficher la zone de texte</p> <pre><code>zone_texte = robot.fenetre.creer_zone_texte(100, 100, 100, 100, Couleur.BLANC)\nzone_texte.afficher()\n\nou alors\n\ntext_area = robot.window.create_text_area(100, 100, 100, 100, Couleur.BLANC)\ntext_area.display()\n</code></pre>"},{"location":"text_area/#verifier-si-la-zone-de-texte-est-cliquee","title":"Verifier si la zone de texte est cliqu\u00e9e","text":"<p>Pour verifier si la zone de texte est cliqu\u00e9e, il suffit d\u2019appeler la m\u00e9thode <code>est_actif() (fr) - is_active() (en)</code>. Cela permet de savoir si la zone de texte a \u00e9t\u00e9 cliqu\u00e9e ou non pour ainsi d\u00e9clencher l'ecriture.</p> <p>Warning</p> <p>Il faut absolument que la fonction verifier_evenements() soit appel\u00e9e pour que la m\u00e9thode est_actif() fonctionne.</p> <p>V\u00e9rifier si la zone de texte est cliqu\u00e9e</p> <pre><code>zone_texte = robot.fenetre.creer_zone_texte(100, 100, 100, 100, Couleur.BLANC)\nzone_texte.afficher()\nif zone_texte.est_actif():\n    print(\"La zone de texte a \u00e9t\u00e9 cliqu\u00e9e\")\n\nou alors\n\ntext_area = robot.window.create_text_area(100, 100, 100, 100, Couleur.BLANC)\ntext_area.display()\nif text_area.is_active():\n    print(\"The text area has been clicked\")\n</code></pre>"},{"location":"text_area/#ecrire-dans-la-zone-de-texte","title":"Ecrire dans la zone de texte","text":"<p>Pour \u00e9crire dans la zone de texte, il suffit d\u2019appeler la m\u00e9thode <code>ecrire(robot : Robot) (fr) - write(robot : Robot) (en)</code>. Utilisez cette m\u00e9thode en combinaison avec la m\u00e9thode <code>est_actif() (fr) - is_active() (en)</code> pour v\u00e9rifier si la zone de texte est cliqu\u00e9e. Sinon, vous vous exposez \u00e0 des erreurs.</p> <p>\u00c9crire dans la zone de texte</p> <pre><code>zone_texte = robot.fenetre.creer_zone_texte(100, 100, 100, 100, Couleur.BLANC)\nzone_texte.afficher()\nif zone_texte.est_actif():\n    zone_texte.ecrire(robot)\n\nou alors\n\ntext_area = robot.window.create_text_area(100, 100, 100, 100, Couleur.BLANC)\ntext_area.display()\nif text_area.is_active():\n    text_area.write(robot)\n</code></pre> <p>Cette m\u00e9thode renvoie le texte apr\u00e8s que l'utilisateur a quitt\u00e9 la zone de texte.</p> <p>Warning</p> <p>Lorsque l'utilisateur \u00e9crit, le robot est mis en pause tant que l'utilisateur n'a pas quitt\u00e9 la zone d'\u00e9criture en cliquant en dehors de celle-ci ou alors en tapant sur la touche entr\u00e9e.</p> <p>Note</p> <p>Cette m\u00e9thode est sp\u00e9ciale, elle prend en param\u00e8tre le robot pour pouvoir r\u00e9cup\u00e9rer les informations saisies par l'utilisateur.</p>"},{"location":"text_area/#recuperer-le-texte-de-la-zone-de-texte","title":"R\u00e9cup\u00e9rer le texte de la zone de texte","text":"<p>Pour r\u00e9cup\u00e9rer le texte de la zone de texte, il suffit d\u2019appeler la m\u00e9thode <code>obtenir_texte() (fr) - get_text() (en)</code>.</p> <p>R\u00e9cup\u00e9rer le texte de la zone de texte</p> <pre><code>zone_texte = robot.fenetre.creer_zone_texte(100, 100, 100, 100, Couleur.BLANC)\nzone_texte.afficher()\nif zone_texte.est_actif():\n    zone_texte.ecrire(robot)\ntexte = zone_texte.obtenir_texte()\nprint(texte)\n\nou alors\n\ntext_area = robot.window.create_text_area(100, 100, 100, 100, Couleur.BLANC)\ntext_area.display()\nif text_area.is_active():\n    text_area.write(robot)\ntext = text_area.get_text()\nprint(text)\n</code></pre>"},{"location":"text_area/#effacer-le-texte-de-la-zone-de-texte","title":"Effacer le texte de la zone de texte","text":"<p>Pour effacer le texte de la zone de texte, il suffit d\u2019appeler la m\u00e9thode <code>effacer_texte() (fr) - erase_text() (en)</code>. Cela permet de vider la zone de texte pour une nouvelle saisie. Renvoi le texte effac\u00e9.</p> <p>Effacer le texte de la zone de texte</p> <pre><code>zone_texte = robot.fenetre.creer_zone_texte(100, 100, 100, 100, Couleur.BLANC)\nzone_texte.afficher()\nif zone_texte.est_actif():\n    zone_texte.ecrire(robot)\ntexte = zone_texte.effacer_texte()\nprint(texte)\n\nou alors\n\ntext_area = robot.window.create_text_area(100, 100, 100, 100, Couleur.BLANC)\ntext_area.display()\nif text_area.is_active():\n    text_area.write(robot)\ntext = text_area.erase_text()\nprint(text)\n</code></pre>"},{"location":"text_area/#exemple-complet-1","title":"Exemple complet 1","text":"<pre><code>from pybot import Robot, Couleur\n\nrobot = Robot()\nrobot.demarrer_module_fenetre()\n\nrobot.fenetre.ouvrir_fenetre(1200, 900)\n\nzones_de_texte = robot.attributs.zones_de_texte\nzones_de_texte.zone_texte_quitter = robot.fenetre.creer_zone_texte(100, 100, 100, 100, Couleur.BLANC)\n\nwhile robot.est_actif() :\n    zones_de_texte = robot.attributs.zones_de_texte\n    evenement = robot.verifier_evenements()\n    if zones_de_texte.zone_texte_quitter.est_actif():\n        zones_de_texte.zone_texte_quitter.ecrire(robot)\n        texte = zones_de_texte.zone_texte_quitter.obtenir_texte()\n        if texte == \"Quitter\":\n            robot.desactiver()\n            break\n    zones_de_texte.zone_texte_quitter.afficher()\n    robot.fenetre.actualiser_affichage()\n</code></pre>"},{"location":"text_area/#personnaliser-la-zone-de-texte","title":"Personnaliser la zone de texte","text":""},{"location":"text_area/#modifier-la-taille-de-la-police","title":"Modifier la taille de la police","text":"<p>Pour modifier la taille de la police, il suffit d\u2019appeler la m\u00e9thode <code>modifier_taille_police(taille : int) (fr) - change_font_size(size : int) (en)</code>. Par defaut, la taille de la police est de 16.</p> <p>Modifier la taille de la police</p> <pre><code>zone_texte = robot.fenetre.creer_zone_texte(100, 100, 100, 100, Couleur.BLANC)\nzone_texte.modifier_taille_police(20)\nzone_texte.afficher()\n\nou alors\n\ntext_area = robot.window.create_text_area(100, 100, 100, 100, Couleur.BLANC)\ntext_area.change_font_size(20)\ntext_area.display()\n</code></pre>"},{"location":"text_area/#modifier-la-couleur-de-la-police","title":"Modifier la couleur de la police","text":"<p>Pour modifier la couleur de la police, il suffit d\u2019appeler la m\u00e9thode <code>modifier_couleur_police(couleur : Couleur) (fr) - change_font_color(color : Couleur) (en)</code>.</p> <p>Modifier la couleur de la police</p> <pre><code>zone_texte = robot.fenetre.creer_zone_texte(100, 100, 100, 100, Couleur.BLANC)\nzone_texte.modifier_couleur_police(Couleur.ROUGE)\nzone_texte.afficher()\n\nou alors\n\ntext_area = robot.window.create_text_area(100, 100, 100, 100, Couleur.BLANC)\ntext_area.change_font_color(Couleur.ROUGE)\ntext_area.display()\n</code></pre>"},{"location":"text_area/#exemple-complet-2","title":"Exemple complet 2","text":"<pre><code>from pybot import Robot, Couleur\n\nrobot = Robot()\nrobot.demarrer_module_fenetre()\n\nrobot.fenetre.ouvrir_fenetre(1200, 900)\n\nzones_de_texte = robot.attributs.zones_de_texte\nzones_de_texte.zone_texte = robot.fenetre.creer_zone_texte(100, 100, 100, 100, Couleur.BLANC)\n\nwhile robot.est_actif() :\n    zones_de_texte = robot.attributs.zones_de_texte\n    evenement = robot.verifier_evenements()\n    if zones_de_texte.zone_texte.est_actif():\n        zones_de_texte.zone_texte.ecrire(robot)\n        texte = zones_de_texte.zone_texte.effacer_texte()\n        if texte == \"Quitter\":\n            robot.desactiver()\n            break\n        elif texte == \"Rouge\":\n            zones_de_texte.zone_texte.modifier_couleur_police(Couleur.ROUGE)\n        elif texte == \"20\":\n            zones_de_texte.zone_texte.modifier_taille_police(20)\n    zones_de_texte.zone_texte.afficher()\n    robot.fenetre.actualiser_affichage()\n</code></pre>"}]}