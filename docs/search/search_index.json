{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"La biblioth\u00e8que Pybot","text":"<p>Ce qu'est Pybot</p> <p>Pybot est une biblioth\u00e8que logicielle permettant \u00e0 des \u00e9l\u00e8ves de coll\u00e8ge de programmer eux m\u00eame un robot immobile.</p> <p>Vous trouverez ici les informations pour utiliser la biblioth\u00e8que pybot avec des exemples concret pour r\u00e9aliser des programmes d'un simple affichage de cam\u00e9ra jusqu'\u00e0 un robot conversationnel complet.</p>"},{"location":"#les-fonctionnalites-du-robot","title":"Les fonctionnalit\u00e9s du robot :","text":"<p>Le robot complet.</p> <p>Le Robot a \u00e9t\u00e9 pens\u00e9 pour fonctionner sur un Raspberry Pi configur\u00e9 avec Linux (Debian). Un \u00e9cran pour le visage, une cam\u00e9ra pour les yeux, un haut-parleur pour la bouche et un microphone pour les oreilles. La coquille entourant le raspberry pi est libre d'interpr\u00e9tation esth\u00e9tique.</p> <p>Avec la biblioth\u00e8que vous pouvez :</p> <p>  Construire une interface graphique pour int\u00e9ragir avec le robot.  Utiliser une reconnaissance visuelle par cam\u00e9ra (pas biom\u00e9trique comme le visage mais des dessins sur cartes).  Des fonctionnalit\u00e9s de communication avec une IA utilisant une transformation de l'audio en texte (microphone) et de texte en audio (haut parleur) qui interagisse avec une IA conversationnelle de type chatGPT.  Une base de donn\u00e9e et une administration web pour configurer le robot, par exemple: enregistrer les cartes d'identification des \u00e9l\u00e8ves, pr\u00e9parer des questions qui seront pos\u00e9 aux \u00e9l\u00e8ves et dont les r\u00e9ponses seront enregistr\u00e9 en base de donn\u00e9e pour consultation.</p>"},{"location":"#utilisation-de-la-bibliotheque","title":"Utilisation de la biblioth\u00e8que","text":"<pre><code>print(\"bonjour, Pybot!\")\n</code></pre> <p>Pybot se pr\u00e9sente comme un objet avec des m\u00e9thodes que l'on peut utiliser ensemble pour faire le programme.</p> <p>Les chapitres suivant vous pr\u00e9sentent les diff\u00e9rentes m\u00e9thodes possibles et des exemples d'utilisation.</p> <p>Avant de suivre ce tutoriel, vous souhaitez peut-\u00eatre savoir comment configurer et utiliser pybot.</p>"},{"location":"admin/","title":"Utiliser l'administration web","text":""},{"location":"admin/#ajouter-une-nouvelle-carte-eleve","title":"Ajouter une nouvelle carte \u00e9l\u00e8ve","text":""},{"location":"chap1/","title":"Chapitre 1: Un premier programme.","text":""},{"location":"chap1/#1-pour-demarrer-nous-avons-besoin-dimporter-la-bibliotheque-et-de-demarrer-le-robot","title":"1. Pour demarrer nous avons besoin d'importer la biblioth\u00e8que et de d\u00e9marrer le robot","text":"<p>Le programme doit toujours commencer par ces deux lignes de code.</p> <p>Importer et activer le robot</p> <p><code>python     from pybot import Robot     robot = Robot()</code></p>"},{"location":"chap1/#2-lancer-lapplication-web-pour-faire-tourner-la-base-de-donnees","title":"2. Lancer l'application web pour faire tourner la base de donn\u00e9es.","text":"<p>Une des premi\u00e8res choses \u00e0 faire est de lancer le serveur qui permettra d'acc\u00e9der \u00e0 l'application web et ainsi travailler avec la base de donn\u00e9e, on utilise pour cela la m\u00e9thode demarrer_webapp. Il est aussi possible de configurer le robot depuis un site web, par exemple pour ajouter des \u00e9l\u00e8ves \u00e0 la base de donn\u00e9es.</p> <p>demarrer_webapp()</p> <p><code>python     robot.demarrer_webapp()</code></p> <p>Le serveur web se lance et ne bloque pas le programme, on peut donc ensuite s'occuper de programmer le robot.</p> <p>Info</p> <p>Le site sera accessible localement, \u00e0 l'adresse : http://127.0.0.1:5000</p> <p>Note</p> <p>Il est possible de configurer le raspberry pi pour faire serveur et rendre le site accessible sur le r\u00e9seau local pour ainsi se connecter \u00e0 distance au robot.</p> <p>Warning</p> <p>Pour arreter le serveur il faut taper dans le terminal la combinaison au clavier : CTRL+C.</p>"},{"location":"chap1/#3-creer-fenetre-pour-demarrer-laffichage","title":"3. Cr\u00e9er fen\u00eatre pour d\u00e9marrer l'affichage.","text":"<p>Il est ensuite important d'ouvrir une fen\u00eatre qui permet d'interagir avec le robot. La m\u00e9thode creer_fenetre utilise deux param\u00e8tres, la longueur et la hauteur de la fen\u00eatre qui correspondent aux nombres de pixels horizontaux et verticaux. Ces deux param\u00e8tres sont optionnels. Si aucun param\u00e8tre n'est donn\u00e9 (ou un seul), la fen\u00eatre aura pour taille 800 pixels de longueur et 600 pixels de hauteur.</p> <p>creer_fenetre(longueur, hauteur)</p> <p><code>python     robot.creer_fenetre()</code> ou bien <code>python     l = 1000     h = 400     robot.creer_fenetre(l, h)</code></p>"},{"location":"chap1/#4-changer-le-titre-de-la-fenetre","title":"4. Changer le titre de la fen\u00eatre.","text":"<p>La m\u00e9thode changer_titre(titre) change le titre de la fen\u00eatre avec le param\u00e8tre titre.</p> <p>changer_titre(titre)</p> <p><code>python     titre = \"Mon Programme\"     robot.changer_titre(titre)</code></p> <p>Une message d'erreur</p> <p>Il est a noter qu'il est important d'avoir d\u00e9marr\u00e9 la fen\u00eatre avant de pouvoir changer son titre. Des erreurs avec plusieurs m\u00e9thodes peuvent survenir et il est utile de regarder dans le terminal le message d'erreur pour pouvoir ensuite r\u00e9parer le programme. <code>python     robot.changer_titre(\"Mon super titre\")     robot.creer_fenetre()</code> Dans le terminal: <code>Erreur: Le titre doit \u00eatre d\u00e9fini apr\u00e9s cr\u00e9ation de la fen\u00eatre.</code></p>"},{"location":"chap1/#5-mettre-a-jour-laffichage-de-la-fenetre","title":"5. Mettre \u00e0 jour l'affichage de la fen\u00eatre.","text":"<p>\u00c0 chaque fois qu'une modification est faite (ex: un changement de titre, un nouveau bouton, un texte \u00e0 afficher), il est important de mettre \u00e0 jour l'affichage de la fen\u00eatre. On utilise la m\u00e9thode actualiser_affichage.</p> <p>Id\u00e9alement, cette m\u00e9thode est appel\u00e9e dans une boucle afin de garder l'affichage \u00e0 jour.</p> <p>actualiser_affichage()</p> <p><code>python     robot.actualiser_affichage()</code></p>"},{"location":"chap1/#6-passer-laffichage-en-plein-ecran","title":"6. Passer l'affichage en plein \u00e9cran.","text":"<p>Pour que l'affichage remplisse l'\u00e9cran, on peut utiliser la m\u00e9thode plein_ecran(changer) avec le param\u00e8tre changer ayant la valeur vrai (True) ou faux (False).</p> <p>plein_ecran(changer)</p> <p>pour passer en plein \u00e9cran <code>python     robot.plein_ecran(True)</code> ou pour en sortir <code>python     robot.plein_ecran(False)</code></p>"},{"location":"chap1/#7-faire-dormir-le-robot","title":"7. Faire dormir le robot.","text":"<p>Il est parfois utile de ralentir l'ex\u00e9cution du programme en lui faisant faire des pauses. La m\u00e9thode dort(secondes) le permet, il suffit de passer en param\u00e8tre le nombre de secondes \u00e0 attendre.</p> <p>dort(secondes)</p> <p><code>python     secondes = 2     robot.dort(secondes)</code></p>"},{"location":"chap1/#exemple-1-un-premier-programme","title":"Exemple 1: Un premier programme.","text":"<p>Warning</p> <p>Il est recommand\u00e9 de ne pas copier l'exemple mais de chercher par vous m\u00eame des utilisations possibles.</p> <p>Nous verrons apr\u00e9s comment maintenir le programme actif avec une boucle et des \u00e9v\u00e8nements. Mais pour le moment nous allons faire dormir le robot pour ralentir l'ex\u00e9cution du robot.</p> <pre><code>from pybot import Robot\nrobot = Robot()\n\nrobot.changer_titre(\"bonjour,pybot!\") # Erreur\nrobot.creer_fenetre()\nrobot.changer_titre(\"bonjour,pybot!\")\nrobot.actualiser_affichage()\nrobot.dort(1)\nrobot.changer_titre(\"plein \u00e9cran dans une seconde\")\nrobot.actualiser_affichage()\nrobot.dort(1)\nrobot.plein_ecran(True)\nrobot.actualiser_affichage()\nrobot.dort(1)\nrobot.changer_titre(\"fin du programme dans une seconde\")\nrobot.plein_ecran(False)\nrobot.actualiser_affichage()\nrobot.dort(1)\n</code></pre>"},{"location":"chap2/","title":"Chapitre 2: Une boucle et des \u00e9v\u00e8nements.","text":""},{"location":"chap2/#1-boucle-et-controle-de-lactivite-du-robot","title":"1. Boucle et contr\u00f4le de l'activit\u00e9 du robot.","text":"<p>\u00c0 l'initiation du robot, il est possible de v\u00e9rifier ce status avec la m\u00e9thode robot.est_actif() qui peut alors servir de v\u00e9rification dans une boucle while et ainsi maintenir le programme en cours d'ex\u00e9cution.</p> <p>Note</p> <p>Au lancement du programme robot.est_actif() retourn vrai (True). Il est possible de rendre le robot inactif avec la m\u00e9thode robot.desactiver() qui fera simplement retourner Faux (False) \u00e0 la m\u00e9thode robot.est_actif().</p> <p>Activit\u00e9 du robot</p> <p><code>python     while robot.est_actif():         robot.dort(2)         robot.desactiver()</code></p>"},{"location":"chap2/#2-fermer-la-fenetre-et-terminer-le-programme","title":"2. Fermer la fen\u00eatre et terminer le programme.","text":"<p>La m\u00e9thode robot.fermer_fenetre permet de d\u00e9truire la fen\u00eatre pr\u00e9c\u00e9demment ouverte.</p> <p>Note</p> <p>Le status du robot devient inactif, la m\u00e9thode robot.est_actif() retournera alors False.</p> <p>Fermer fen\u00eatre</p> <p><code>python     while robot.est_actif():         robot.dort(2)         robot.fermer_fenetre()</code></p> <p>Note</p> <p>En g\u00e9n\u00e9ral, il est pr\u00e9f\u00e9rable d'utiliser robot.fermer_fenetre car le programme s'arr\u00eatera plus proprement qu'en sortant simplement de la boucle avec robot.desactiver.</p>"},{"location":"chap2/#3-creer-un-evenement","title":"3. Cr\u00e9er un \u00e9v\u00e8nement.","text":"<p>Note</p> <p>Un \u00e9v\u00e8nement est une action sur le clavier associ\u00e9e \u00e0 un nom d'\u00e9v\u00e8nement. Nous cr\u00e9ons un nouvel \u00e9v\u00e8nement avec la m\u00e9thode ajouter_evenement(touche, nom).</p> <p>Ajouter un \u00e9v\u00e8nement</p> <p><code>python     robot.ajouter_evenement(\"echap\", \"stop\")</code></p> <p>Info</p> <p>Voir la r\u00e9f\u00e9rence pour voir une liste des touches possible, par exemple la touche du clavier a s'appelera \"a\". \u00c0 noter, les touches qui se nomment \"espace\" et \"echap\" pour la barre d'espace et la touche d'\u00e9chappement.</p>"},{"location":"chap2/#4-verifier-un-evenement","title":"4. V\u00e9rifier un \u00e9v\u00e8nement.","text":"<p>Nous pouvons r\u00e9cup\u00e9rer les \u00e9v\u00e8nements dans une boucle en faisant appel \u00e0 la m\u00e9thode robot.verifier_evenements().</p> <p>Info</p> <p>La m\u00e9thode retourne une liste avec les \u00e9v\u00e8nements qui viennent d'\u00eatre execut\u00e9s. Il est possible ensuite d'utiliser une v\u00e9rification avec if ... in ...: comme dans l'exemple si dessous.</p> <p>V\u00e9rifier les \u00e9v\u00e8nements.</p> <p><code>python         evenements = robot.verifier_evenements(\"echap\", \"stop\")         if \"stop\" in evenements:             print(\"stop\")</code></p>"},{"location":"chap2/#5-supprimer-un-evenement","title":"5. Supprimer un \u00e9v\u00e8nement.","text":"<p>Il est ensuite possible de supprimer un \u00e9v\u00e8nement avec la m\u00e9thode robot.supprimer_evenement(nom).</p> <p>Supprimer un \u00e9v\u00e8nement.</p> <p><code>python         robot.supprimer_evenement(\"stop\")</code></p> <p>Warning</p> <p>Si plusieurs touches sont attribu\u00e9es au m\u00eame \u00e9v\u00e8nement, elles seront toutes supprim\u00e9es de la liste des \u00e9v\u00e8nements.</p>"},{"location":"chap2/#exemple-2-utiliser-des-evenements","title":"Exemple 2: Utiliser des \u00e9v\u00e8nements.","text":"<p>Warning</p> <p>Il est recommand\u00e9 de ne pas copier l'exemple mais de chercher par vous m\u00eame des utilisations possibles.</p> <p>Info</p> <p>Le robot final n'utilisera pas de clavier mais simplement une int\u00e9raction par la voix et par le touch\u00e9 sur \u00e9cran. Ces \u00e9v\u00e8nements par clavier servent principalement \u00e0 l'apprentissage du code python. Il s'agit d'une p\u00e9riode de transition.</p> <p>Warning</p> <p>Pour travailler avec cet exemple, pensez \u00e0 garder un oeil sur le terminal pour voir l'affichage des fonctions print.</p> <pre><code>from pybot import Robot\nrobot = Robot()\n\nlong = 1024\nhaut = 800\n\ndef ecrire_nom_evenement(event_name):\n    print(\"L'\u00e9v\u00e8nement est:\", event_name)\n\ndef preparer_robot():\n    robot.creer_fenetre(long, haut)\n    robot.changer_titre(\"Bonjour!\")\n    robot.ajouter_evenement(\"echap\", \"stop\")\n    robot.ajouter_evenement(\"B\", \"banane\")\n    robot.ajouter_evenement(\"C\", \"carotte\")\n    print(\"Vous pouvez maintenant utiliser Echap et C\")\n\npreparer_robot()\n\nnom = \"poireau\"\nwhile robot.est_actif():\n    evenements = robot.verifier_evenements()\n    if \"stop\" in evenements:\n        robot.fermer_fenetre()\n    elif \"carotte\" in evenements:\n        print(\"Vous pouvez maintenant utiliser P\")\n        ecrire_nom_evenement(\"carotte\")\n        robot.supprimer_evenement(\"carotte\")\n        robot.ajouter_evenement(\"P\", \"poireau\")\n    elif nom in evenements:\n        ecrire_nom_evenement(nom)\n        if nom == \"poireau\":\n            print(\"Vous pouvez maintenant utiliser B\")\n            robot.supprimer_evenement(\"poireau\")\n            nom = \"banane\"\n        elif nom == \"banane\":\n            print(\"Echap ne permet plus de quitter, il faut maintenant utiliser Q\")\n            robot.supprimer_evenement(\"stop\")\n            robot.supprimer_evenement(\"banane\")\n            robot.ajouter_evenement(\"Q\", \"stop\")\n    robot.actualiser_affichage()\n</code></pre>"},{"location":"chap3/","title":"Chapitre 3: Des boutons et du texte.","text":""},{"location":"chap3/#1-les-couleurs-en-informatique","title":"1. Les couleurs en informatique.","text":"<p>Note</p> <p>En informatique, nous utilisons les couleurs de base dites RGB en anglais (Rouge (Red), Vert (Green), Bleu (Blue)). Pour repr\u00e9senter une couleur, il faut combiner les diff\u00e9rentes intensit\u00e9s de ces trois couleurs de base.</p> <p></p> <p>Info</p> <p>La valeur num\u00e9rique d'une composante de base (R, G et B) est une valeur num\u00e9rique entre 0 et 255.  0 signifie aucune intensit\u00e9 de couleur, et 255 signifie une intensit\u00e9 maximale.  Pour obtenir une couleur sp\u00e9cifique il faut combiner les trois valeurs de rouge, vert et bleu.  Par exemple, le blanc pur est obtenu en ayant les trois composantes \u00e0 255 (255, 255, 255), tandis que le noir pur est obtenu en ayant toutes les composantes \u00e0 0 (0, 0, 0).</p> <p>Success</p> <p>Dans Pybot, nous associons les trois valeurs RGB dans une variable selon l'exemple ci-dessous: variable = (R, G, B)</p> <pre><code>```python\ncouleur_violette = (128, 0, 128)\ncouleur_noir = (0, 0, 0)\ncouleur_blanc = (128, 0, 128)\ncouleur_orange = (255, 127, 0)\n```\n</code></pre> <p>Note</p> <p>Vous pouvez utiliser un s\u00e9lecteur de couleur pour trouver une couleur sp\u00e9cifique. Par exemple via ce site.</p>"},{"location":"chap3/#2-afficher-la-couleur-du-fond-decran-et-la-changer","title":"2. Afficher la couleur du fond d'\u00e9cran et la changer.","text":"<p>Pour changer la couleur du fond d'\u00e9cran on utilise la m\u00e9thode robot.couleur_fond(couleur) ou couleur est au format variable = (R, G, B).</p> <p>Success</p> <p><code>python     robot.couleur_fond(couleur)</code></p> <p>Pour afficher cette couleur il faut utiliser une autre m\u00e9thode robot.afficher_fond().</p> <p>Success</p> <p><code>python     robot.afficher_fond()</code></p>"},{"location":"chap3/#3-creer-un-bouton","title":"3. Cr\u00e9er un bouton.","text":"<p>Cr\u00e9er et retourner un bouton qui peut \u00eatre affich\u00e9 et v\u00e9rifi\u00e9 plus tard :</p> <p>Success</p> <p><code>python     robot.creer_bouton(longueur, hauteur, position_x, position_y, couleur)</code></p> <p>Les param\u00e8tres attendus sont :  _ la longueur et la hauteur du bouton.  _ la position x et y du bouton (son coin en haut \u00e0 gauche).  * la couleur du bouton.</p> <p>Les positions x et y de la fen\u00eatre</p> <p>Les coordonn\u00e9es dans une fen\u00eatre informatique sont g\u00e9n\u00e9ralement d\u00e9finies \u00e0 partir du coin sup\u00e9rieur gauche.  Le premier pixel qui se trouve en haut \u00e0 gauche correspond aux coordonn\u00e9es x = 0 et y = 0.  Alors que le dernier pixel en bas \u00e0 droite correspond \u00e0 la coordonn\u00e9e x maximale et \u00e0 la coordonn\u00e9e y maximale.  Par exemple, si la fen\u00eatre fait 300 pixels de long et 200 pixels de haut. Le dernier pixel a les coordonn\u00e9es x = 299 et y = 199.</p> <p></p>"},{"location":"chap3/#4-ajouter-un-texte-au-bouton","title":"4. Ajouter un texte au bouton.","text":"<p>Success</p> <p><code>python     bouton.ajouter_texte(self, texte, position_x, position_y, taille, couleur)</code> La m\u00e9thode qui s'applique sur le bouton (et non le robot comme les m\u00e9thodes pr\u00e9c\u00e9dentes) permet d'ajouter un texte dans le bouton.</p> <p>Est attendu dans la m\u00e9thode, le texte, la position x et y, la taille et la couleur.</p> <p>Les positions x et y sur le bouton</p> <p>x, y sont les coordon\u00e9es par rapport au coin gauche et haut du bouton et non celles de la fen\u00eatre.</p>"},{"location":"chap3/#5-afficher-le-bouton","title":"5. Afficher le bouton.","text":"<p>Pour afficher le bouton dans la fen\u00eatre principale.</p> <p>Success</p> <p><code>python     bouton.afficher()</code></p>"},{"location":"chap3/#6-verifier-le-clique-sur-le-bouton","title":"6. V\u00e9rifier le clique sur le bouton.","text":"<p>Pour v\u00e9rifier que le bouton est cliqu\u00e9 ou non, une valeur vrai (True) ou faux (False) est retourn\u00e9e, voir l'exemple.</p> <p>Success</p> <p><code>python     bouton.est_actif()</code> Exemple de cr\u00e9ation et utilisation d'un bouton:</p> <pre><code>from pybot import Robot\nrobot = Robot()\n\nlong = 600\nhaut = 300\n\nblanc = (255, 255, 255)\nnoir = (0, 0, 0)\n\nmettre_a_jour = True\n\nrobot.creer_fenetre(long, haut)\nrobot.changer_titre(\"Un bouton.\")\nrobot.couleur_fond(noir)\n\nbouton_quitter = robot.creer_bouton(120, 50, 10, 110, blanc)\nbouton_quitter.ajouter_texte(\"Quitter\", 10, 10, 24, noir)\n\nwhile robot.est_actif():\n    robot.verifier_evenements()\n    if mettre_a_jour:\n        robot.afficher_fond()\n        bouton_quitter.afficher()\n        mettre_a_jour = False\n\n    if bouton_quitter.est_actif():\n        robot.desactiver()\n</code></pre>"},{"location":"chap3/#7-dessiner-un-rectangle","title":"7. Dessiner un rectangle.","text":"<p>Afficher un rectangle pouvant servir, par exemple, de fond pour afficher du texte.</p> <p>Success</p> <p><code>python     robot.dessiner_rectangle(longueur, hauteur, position_x, position_y, couleur)</code> Les param\u00e8tres attendus sont : la longueur et la hauteur du rectangle. la position x et y du rectangle (son coin en haut \u00e0 gauche) par rapport \u00e0 la fen\u00eatre. la couleur du rectangle.</p>"},{"location":"chap3/#8-afficher-du-texte","title":"8. Afficher du texte.","text":"<p>Afficher une ligne de texte.</p> <p>Success</p> <p><code>python     robot.afficher_texte(texte, position_x, position_y, taille, couleur)</code> Les param\u00e8tres attendus sont: le texte \u00e0 afficher. la position x et y du texte (son coin en haut \u00e0 gauche) par rapport \u00e0 la fen\u00eatre. la taille du texte. la couleur du texte.</p>"},{"location":"chap3/#9-exemple-3","title":"9. Exemple 3 :","text":"<p>Warning</p> <p>Il est recommand\u00e9 de ne pas copier l'exemple mais de chercher par vous m\u00eame des utilisations possibles.</p> <pre><code>from pybot import Robot\nrobot = Robot()\n\nlong = 840\nhaut = 300\n\nblanc = (255, 255, 255)\nnoir = (0, 0, 0)\nrouge = (235, 64, 52)\nrouge_sombre = (117, 23, 16)\nbleu = (52, 164, 235)\nbleu_sombre = (30, 93, 133)\nvert = (105, 230, 83)\nvert_sombre = (59, 135, 46)\njaune = (237, 212, 66)\njaune_sombre = (171, 128, 19)\n\nparoles_index = 0\nparoles_robot = [\n    \"Salut ! Je m'appelle Pybot le robot. Je suis ici pour t'aider,\",\n    \"jouer avec toi et r\u00e9pondre \u00e0 toutes tes questions.\",\n    \"Je peux raconter des histoires passionnantes, jouer \u00e0 des jeux amusants,\",\n    \"et m\u00eame t'aider avec tes devoirs.\",\n    \"J'ai aussi une super fonction de danse pour les moments joyeux.\",\n    \"Alors, pr\u00eat pour des moments incroyables en ma compagnie ?\"\n]\n\nbouton_menu = None\nbouton_quitter = None\nbouton_discussion = None\nbouton_plus = None\n\nmettre_a_jour_affichage = True\n\nzone = \"menu\"\n\ndef preparer_programme():\n    global bouton_menu, bouton_quitter, bouton_discussion, bouton_plus\n    robot.creer_fenetre(long, haut)\n    robot.changer_titre(\"Bonjour boutons!\")\n    robot.couleur_fond(rouge)\n\n    robot.ajouter_evenement(\"echap\", \"stop\")\n    bouton_menu = robot.creer_bouton(120, 50, 10, 10, bleu)\n    bouton_menu.ajouter_texte(\"Menu\", couleur=jaune)\n    bouton_quitter = robot.creer_bouton(120, 50, 10, 110, vert)\n    bouton_quitter.ajouter_texte(\"Quitter\", 10, 10, 24)\n    bouton_discussion = robot.creer_bouton(120, 50, 10, 220, jaune)\n    bouton_discussion.ajouter_texte(\"Discussion\", 5, 30, 20, rouge)\n    bouton_plus = robot.creer_bouton(180, 40, 200, 200, rouge)\n    bouton_plus.ajouter_texte(\"suite du texte\", 10, 10, 20, noir)\n\ndef verifier_boutons():\n    global mettre_a_jour_affichage, paroles_index, zone\n    if bouton_menu.est_actif():\n        zone = \"menu\"\n        mettre_a_jour_affichage = True\n    if bouton_quitter.est_actif():\n        robot.fermer_fenetre()\n    if bouton_discussion.est_actif():\n        zone = \"discussion\"\n        mettre_a_jour_affichage = True\n    if bouton_plus.est_actif():\n        paroles_index = paroles_index + 1\n        if paroles_index == len(paroles_robot):\n            paroles_index = 0\n        mettre_a_jour_affichage = True\n\ndef dessiner_fenetre():\n    global mettre_a_jour_affichage\n    if mettre_a_jour_affichage:\n        if zone == \"menu\":\n            robot.couleur_fond(rouge_sombre)\n        else:\n            robot.couleur_fond(bleu_sombre)\n        robot.afficher_fond()\n        bouton_menu.afficher()\n        bouton_quitter.afficher()\n        if zone == \"menu\":\n            bouton_discussion.afficher()\n        if zone == \"discussion\":\n            robot.dessiner_rectangle(700, 100, 150, 50, blanc)\n            robot.afficher_texte(paroles_robot[paroles_index], 150, 80, 20)\n            bouton_plus.afficher()\n        mettre_a_jour_affichage = False\n\ndef boucle_programme():\n    while robot.est_actif():\n        events = robot.verifier_evenements()\n        if \"stop\" in events:\n            robot.fermer_fenetre()\n        dessiner_fenetre()\n        verifier_boutons()\n        robot.actualiser_affichage()\n\nif __name__ == \"__main__\":\n    preparer_programme()\n    boucle_programme()\n</code></pre> <p>Info</p> <p>D'autres fonctionnalit\u00e9s li\u00e9es \u00e0 l'interface utilisateur (zones de texte) sont pr\u00e9sent\u00e9es au chapitre 6.5.</p>"},{"location":"chap4/","title":"Chapitre 4: Prendre une photo avec une cam\u00e9ra et appliquer des filtres.","text":""},{"location":"chap4/#pour-afficher-la-camera","title":"Pour afficher la cam\u00e9ra :","text":"<p>Il est possible d'afficher la cam\u00e9ra dans la fen\u00eatre.</p> <p>Success</p> <p><code>python     robot.afficher_camera(position_x, position_y)</code></p> <p>La cam\u00e9ra sera affich\u00e9e aux coordonn\u00e9es x et y pass\u00e9es en param\u00e8tres.</p>"},{"location":"chap4/#pour-enregistrer-une-photo","title":"Pour enregistrer une photo :","text":"<p>On peut capturer une photo de la cam\u00e9ra avec cette m\u00e9thode:</p> <p>Success</p> <p><code>python     robot.prendre_photo(nom_fichier)</code></p> <p>La photo sera enregistr\u00e9 dans le dossier images au nom_fichier pass\u00e9 en param\u00e8tre.</p>"},{"location":"chap4/#pour-afficher-une-image-ex-la-photo-enregistree","title":"Pour afficher une image (ex. la photo enregistr\u00e9e) :","text":"<p>On peut afficher une image avec la m\u00e9thode:</p> <p>Success</p> <p><code>python     robot.afficher_image(chemin_fichier)</code></p> <p>Nous avons besoin du chemin et du nom du fichier (ex: /images/photo.jpg) pass\u00e9s en param\u00e8tres, ainsi que des coordonn\u00e9es x et y ou seront affich\u00e9es l'image.</p>"},{"location":"chap4/#pour-appliquer-un-filtre-sur-une-photo","title":"Pour appliquer un filtre sur une photo :","text":"<p>Nous pouvons appliquer un filtre \u00e0 une image avec la m\u00e9thode:</p> <p>Success</p> <p><code>python     robot.appliquer_filtre(chemin_fichier, nom_filtre)</code></p> <p>Les param\u00e8tres attendus sont le chemin et nom du fichier (ex: /images/photo.jpg) ainsi que le nom du filtre (ex: cartoon, alien, miroir...).</p> <ul> <li>voir documentation pour la liste compl\u00e8te des filtres</li> </ul>"},{"location":"chap4/#exemple-4","title":"Exemple 4 :","text":"<p>Warning</p> <p>Il est recommand\u00e9 de ne pas copier l'exemple mais de chercher par vous-m\u00eame des utilisations possibles.</p> <pre><code>from pybot import Robot\nrobot = Robot()\n\nlong = 1200\nhaut = 1000\n\nblanc = (255, 255, 255)\nnoir = (0, 0, 0)\nrouge = (235, 64, 52)\nrouge_sombre = (117, 23, 16)\nbleu = (52, 164, 235)\nbleu_sombre = (30, 93, 133)\nvert = (105, 230, 83)\nvert_sombre = (59, 135, 46)\njaune = (237, 212, 66)\njaune_sombre = (171, 128, 19)\n\nbouton_camera = None\nbouton_capture = None\nbouton_photo = None\nbouton_stop = None\nbouton_filter_1 = None\nbouton_filter_2 = None\nbouton_filter_3 = None\nbouton_filter_4 = None\nbouton_filter_5 = None\nbouton_filter_6 = None\nbouton_filter_7 = None\nbouton_filter_8 = None\n\nafficher_camera = False\nafficher_photo = False\n\nmettre_a_jour_affichage = True\n\ndef preparer_programme():\n    global bouton_camera, bouton_capture, bouton_photo, bouton_stop, \\\n    bouton_filter_1, bouton_filter_2, bouton_filter_3, bouton_filter_4, \\\n    bouton_filter_5, bouton_filter_6, bouton_filter_7, bouton_filter_8\n    robot.creer_fenetre(long, haut)\n    robot.changer_titre(\"Bonjour camera!\")\n    robot.couleur_fond(noir)\n\n    robot.ajouter_evenement(\"echap\", \"stop\")\n    bouton_camera = robot.creer_bouton(180, 60, 10, 10, bleu)\n    bouton_camera.ajouter_texte(\"camera - allumer\", 5, 20)\n    bouton_capture = robot.creer_bouton(180, 60, 10, 80, rouge)\n    bouton_capture.ajouter_texte(\"capture photo\", 10, 10, 20)\n    bouton_photo = robot.creer_bouton(180, 60, 10, 150, jaune)\n    bouton_photo.ajouter_texte(\"afficher photo\", 10, 10, 16)\n    bouton_filter_1 = robot.creer_bouton(200, 60, 15, 220, jaune_sombre)\n    bouton_filter_1.ajouter_texte(\"filtre: ocean\", 10, 10, 16)\n    bouton_filter_2 = robot.creer_bouton(200, 60, 15, 290, jaune_sombre)\n    bouton_filter_2.ajouter_texte(\"filtre: cartoon\", 10, 10, 16)\n    bouton_filter_3 = robot.creer_bouton(200, 60, 15, 360, jaune_sombre)\n    bouton_filter_3.ajouter_texte(\"filtre: alien\", 10, 10, 16)\n    bouton_filter_4 = robot.creer_bouton(200, 60, 15, 430, jaune_sombre)\n    bouton_filter_4.ajouter_texte(\"filtre: rose\", 10, 10, 16)\n    bouton_filter_5 = robot.creer_bouton(200, 60, 15, 500, jaune_sombre)\n    bouton_filter_5.ajouter_texte(\"filtre: flou\", 10, 10, 16)\n    bouton_filter_6 = robot.creer_bouton(200, 60, 15, 570, jaune_sombre)\n    bouton_filter_6.ajouter_texte(\"filtre: noir et blanc\", 10, 10, 16)\n    bouton_filter_7 = robot.creer_bouton(200, 60, 15, 640, jaune_sombre)\n    bouton_filter_7.ajouter_texte(\"filtre: tourner\", 10, 10, 16)\n    bouton_filter_8 = robot.creer_bouton(200, 60, 15, 710, jaune_sombre)\n    bouton_filter_8.ajouter_texte(\"filtre: vernis\", 10, 10, 16)\n    bouton_stop = robot.creer_bouton(180, 60, 10, 900, vert)\n    bouton_stop.ajouter_texte(\"quitter\", 10, 10, 20)\n\ndef dessiner_fenetre():\n    global mettre_a_jour_affichage\n    if mettre_a_jour_affichage:\n        robot.afficher_fond()\n        bouton_camera.afficher()\n        bouton_photo.afficher()\n        bouton_filter_1.afficher()\n        bouton_filter_2.afficher()\n        bouton_filter_3.afficher()\n        bouton_filter_4.afficher()\n        bouton_filter_5.afficher()\n        bouton_filter_6.afficher()\n        bouton_filter_7.afficher()\n        bouton_filter_8.afficher()\n        bouton_stop.afficher()\n        if afficher_camera:\n            bouton_capture.afficher()\n        mettre_a_jour_affichage = False\n\ndef verifier_boutons():\n    global mettre_a_jour_affichage, afficher_camera, afficher_photo\n    if bouton_camera.est_actif():\n        afficher_camera = not afficher_camera\n        if afficher_camera:\n            bouton_camera.ajouter_texte(\"camera - eteindre\")\n        else:\n            bouton_camera.ajouter_texte(\"camera - alumer\")\n        if afficher_photo:\n            bouton_photo.ajouter_texte(\"cacher photo\")\n        else:\n            bouton_photo.ajouter_texte(\"afficher photo\")\n        mettre_a_jour_affichage = True\n    if afficher_camera:\n        if bouton_capture.est_actif():\n            robot.prendre_photo(\"photo\")\n    if bouton_photo.est_actif():\n        afficher_photo = not afficher_photo\n        mettre_a_jour_affichage = True\n    if bouton_stop.est_actif():\n        robot.desactiver()\n    if bouton_filter_1.est_actif():\n        robot.appliquer_filtre(\"/images/photo.jpg\", \"ocean\")\n        mettre_a_jour_affichage = True\n    if bouton_filter_2.est_actif():\n        robot.appliquer_filtre(\"/images/photo.jpg\", \"cartoon\")\n        mettre_a_jour_affichage = True\n    if bouton_filter_3.est_actif():\n        robot.appliquer_filtre(\"/images/photo.jpg\", \"alien\")\n        mettre_a_jour_affichage = True\n    if bouton_filter_4.est_actif():\n        robot.appliquer_filtre(\"/images/photo.jpg\", \"rose\")\n        mettre_a_jour_affichage = True\n    if bouton_filter_5.est_actif():\n        robot.appliquer_filtre(\"/images/photo.jpg\", \"flou\")\n        mettre_a_jour_affichage = True\n    if bouton_filter_6.est_actif():\n        robot.appliquer_filtre(\"/images/photo.jpg\", \"noir_et_blanc\")\n        mettre_a_jour_affichage = True\n    if bouton_filter_7.est_actif():\n        robot.appliquer_filtre(\"/images/photo.jpg\", \"tourner\")\n        mettre_a_jour_affichage = True\n    if bouton_filter_8.est_actif():\n        robot.appliquer_filtre(\"/images/photo.jpg\", \"vernis\")\n        mettre_a_jour_affichage = True\n\ndef boucle_programme():\n    while robot.est_actif():\n        events = robot.verifier_evenements()\n        if \"stop\" in events:\n            robot.fermer_fenetre()\n        dessiner_fenetre()\n        if afficher_camera:\n            robot.afficher_camera(300, 10)\n        if afficher_photo:\n            robot.afficher_image(\"/images/photo.jpg\", 300, 500)\n            robot.afficher_image(\"/images/fier.png\", 1000, 500)\n        verifier_boutons()\n        robot.actualiser_affichage()\n\nif __name__ == \"__main__\":\n    preparer_programme()\n    boucle_programme()\n</code></pre>"},{"location":"chap5/","title":"Chapitre 5: Reconnaissance d'un \u00e9l\u00e8ve avec sa carte.","text":""},{"location":"chap5/#1-detecter-une-carte","title":"1. D\u00e9tecter une carte","text":"<p>La m\u00e9thode robot.detecter_carte() permet de r\u00e9cup\u00e9rer l'identit\u00e9 de la personne sous la forme d'une chaine de caract\u00e8re: \"<code>Nom Pr\u00e9nom</code>\".</p> <p>Si une carte invalide, n' appartenant \u00e0 personne ou bien que aucune carte n' est visible pour la cam\u00e9ra, alors la m\u00e9thode retournera une cha\u00eene de caract\u00e8res vide: \"<code></code>\".</p> <p>Warning</p> <p>Si la fonction est appel\u00e9e alors que l application web n' est pas lanc\u00e9e ou bien que la cam\u00e9ra n' est pas allum\u00e9e alors la fonction retournera aussi une chaine vide: \"<code></code>\".</p> <p>Success</p> <p><pre><code>robot.demarrer_webapp()\n# [...]\nnom_eleve = robot.detecter_carte()\nprint(nom_eleve)\n</code></pre> Si une carte valide est pr\u00e9sente et que la cam\u00e9ra est allum\u00e9e alors ce morceau de code affichera dans le terminal le nom de la personne.</p>"},{"location":"chap5/#2-creer-fermer-une-session","title":"2. Cr\u00e9er/ Fermer une session","text":"<p><pre><code>- robot.creer_session(nom_eleve)\n</code></pre> <pre><code>- robot.fermer_session()\n</code></pre></p>"},{"location":"chap5/#3-verifier-une-session","title":"3. V\u00e9rifier une session","text":"<pre><code>- robot.verifier_session()\n</code></pre>"},{"location":"chap6.5/","title":"Chapitre 6: Zone de texte / Entr\u00e9e Utilisateur","text":""},{"location":"chap6.5/#recuperer-les-entrees-utilisateur","title":"R\u00e9cup\u00e9rer les entr\u00e9es utilisateur","text":""},{"location":"chap6.5/#zone-de-texte","title":"Zone de texte","text":""},{"location":"chap6.5/#creer-une-zone-de-texte","title":"Cr\u00e9er une zone de texte","text":"<p>Cr\u00e9er et retourner une zone texte qui peut \u00eatre affich\u00e9e et v\u00e9rifi\u00e9e plus tard</p> <p>Success</p> <p><code>python     - creer_zone_texte(longueur, hauteur, position_x, position_y, couleur)</code></p> <p>Les param\u00e8tres attendus sont :  _ la longueur et la hauteur de la zone de texte.  _ la position x et y de la zone de texte (son coin en haut \u00e0 gauche).  * la couleur de la zone de texte.</p> <p>Note</p> <p>La couleur est au format (R, G, B), comme vu avec les boutons.</p> <p>Les positions x et y dans la fen\u00eatre</p> <p>Les coordonn\u00e9es sur un \u00e9cran informatique sont g\u00e9n\u00e9ralement d\u00e9finies \u00e0 partir du coin sup\u00e9rieur gauche. Le premier pixel qui se trouve en haut \u00e0 gauche de la fen\u00eatre correspond aux coordonn\u00e9es x = 0 et y = 0. Alors que le dernier pixel en bas \u00e0 droite correspond \u00e0 la coordonn\u00e9e x maximale et \u00e0 la coordonn\u00e9e y maximale.  Par exemple, si la fen\u00eatre fait 300 pixels de long et 200 pixels de haut : le dernier pixel a les coordonn\u00e9es x = 299 et y = 199.</p> <p></p>"},{"location":"chap6.5/#afficher-la-zone-de-texte","title":"Afficher la zone de texte","text":"<p>Pour afficher la zone de texte dans la fen\u00eatre principale.</p> <p>Success</p> <p><code>python     zone_texte.afficher()</code></p> <p>Note</p> <p>La m\u00e9thode s'applique sur la zone de texte (et non le robot comme avec les boutons).</p>"},{"location":"chap6.5/#verifier-le-clic-sur-la-zone-de-texte","title":"V\u00e9rifier le clic sur la zone de texte","text":"<p>Pour v\u00e9rifier que la zone de texte soit active ou non, une valeur vraie (True) ou fausse (False) est retourn\u00e9e, voir l'exemple.</p> <p>Success</p> <p><code>python     zone_texte.est_actif()</code></p> <p>Cela fonctionne comme avec les boutons.</p>"},{"location":"chap6.5/#ecrire-dans-la-zone-de-texte","title":"\u00c9crire dans la zone de texte","text":"<p>Une fois la zone de texte active, il faut faire appel \u00e0 la m\u00e9thode ecrire() pour pouvoir \u00e9crire dans la zone de texte.</p> <p>Success</p> <p><code>pyhton     robot.ecrire(self, zone_texte)</code></p> <p>Cette fonction renvoie le texte apr\u00e8s que l'utilisateur ait quitt\u00e9 la zone de texte.</p> <p>Warning</p> <p>Lorsque l'utilisateur \u00e9crit, le robot est mis en pause tant que l'utilisateur n'a pas quitt\u00e9 la zone d'\u00e9criture en cliquant en dehors de celle-ci ou alors en tapant sur la touche entr\u00e9e.</p> <p>Note</p> <p>Cette m\u00e9thode est sp\u00e9ciale : elle s'applique sur le robot et elle prend en param\u00e8tre la zone de texte active.</p>"},{"location":"chap6.5/#recuperer-lentree-utilisateur","title":"R\u00e9cup\u00e9rer l'entr\u00e9e utilisateur","text":"<p>Une fois que l'utilisateur a termin\u00e9 d'entrer son texte, vous pouvez r\u00e9cup\u00e9rer cette entr\u00e9e gr\u00e2ce aux m\u00e9thodes recuperer_texte() ou effacer_texte().</p> <p>Success</p> <p><code>pyhton     zone_texte.recuperer_texte()</code></p> <p>Cette fonction renvoit le texte contenu dans la zone de texte sans l'effacer.</p> <p>Success</p> <p><code>pyhton     zone_texte.effacer_texte()</code></p> <p>Cette fonction renvoit le texte contenu dans la zone de texte en l'effa\u00e7ant.</p> <p>Warning</p> <p>Cette fonction efface le texte contenu dans la zone de texte, le texte n'est donc plus r\u00e9cup\u00e9rable apr\u00e8s.</p>"},{"location":"chap6.5/#personnaliser-la-zone-de-texte","title":"Personnaliser la zone de texte","text":"<p>Si vous voulez modifier la taille d'\u00e9criture du texte dans la zone de texte vous pouvez utiliser la m\u00e9thode modifier_taille_police(taille).</p> <p>Success</p> <p><code>pyhton     zone_texte.modifier_taille_police(taille)</code></p> <p>Info</p> <p>Si vous ne mettez aucun param\u00e8tre, cela r\u00e9initialisera la taille d'\u00e9criture.</p> <p>Si vous voulez modifier la couleur du texte dans la zone de texte vous pouvez utiliser la m\u00e9thode modifier_couleur_police(couleur).</p> <p>Success</p> <p><code>pyhton     zone_texte.modifier_couleur_police(couleur)</code></p> <p>Info</p> <p>Si vous ne mettez aucun param\u00e8tre, cela r\u00e9initialisera la couleur du texte.</p> <p>Note</p> <p>La couleur est au format variable = (R, G, B), comme vu avec les boutons.</p>"},{"location":"chap6/","title":"Chapitre 6: Parler au robot","text":""},{"location":"chap6/#discuter-avec-le-robot","title":"Discuter avec le robot","text":""},{"location":"chap6/#commencer-a-discuter-avec-le-robot","title":"Commencer \u00e0 discuter avec le robot","text":"<p>Pour commencer une discussion avec le robot, il faut utiliser la m\u00e9thode demarrer_discussion().</p> <p>Success</p> <p><code>python     - robot.demarrer_discussion()</code></p> <p>Warning</p> <p>Il faut toujours commencer une discussion avec le robot avant d'utiliser les m\u00e9thodes suivantes.</p>"},{"location":"chap6/#arreter-de-discuter-avec-le-robot","title":"Arr\u00eater de discuter avec le robot","text":"<p>Pour arr\u00eater la discussion avec le robot, il faut utiliser la m\u00e9thode arreter_discussion().</p> <p>Success</p> <p><code>python     - robot.arreter_discussion()</code></p> <p>Warning</p> <p>A partir de ce moment l\u00e0 le robot ne pourra plus vous r\u00e9pondre et il faudra recommencer la discussion avec demarrer_discussion().</p>"},{"location":"chap6/#poser-une-question-parler-au-robot","title":"Poser une question / parler au robot","text":"<p>Pour pouvoir parler au robot (poser des questions, donner des informations, ...), il faut utiliser la m\u00e9thode repondre_question(question).</p> <p>Success</p> <p><code>python     - robot.repondre_question(question)</code></p> <p>Le robot r\u00e9pondra \u00e0 la question pos\u00e9e en param\u00e8tre. Cette fonction retourne la r\u00e9ponse du robot.</p> <p>Info</p> <p>La r\u00e9ponse du robot appara\u00eetra dans le terminal. Quelques lignes de code suppl\u00e9mentaire permettront de r\u00e9cup\u00e9rer la r\u00e9ponse pour la manipuler. Le robot peut prendre un certain temps de r\u00e9flexion pour vous r\u00e9pondre pendant ce temps de r\u00e9flexion le robot semblera \u00eatre en pause (inutilisable). Il suffit simplement d'attendre sa r\u00e9ponse pour qu'il ne soit plus en pause (utilisable).</p> <p>Warning</p> <p>Tant qu'aucun historique n'est charg\u00e9 le robot est d\u00e9pourvu de m\u00e9moire de pr\u00e9c\u00e9dents messages.</p>"},{"location":"chap6/#la-memoire-du-robot","title":"La m\u00e9moire du robot","text":"<p>Comme dit pr\u00e9c\u00e9demment si on ne donne pas de m\u00e9moire au robot, il ne se rappellera de rien entre les questions.</p> <p>La m\u00e9thode creer_historique() permet au robot de lui demander de garder en m\u00e9moire l'historique de la conversation \u00e0 venir.</p> <p>Success</p> <p><code>python     - robot.creer_historique()</code></p> <p>Note</p> <p>Il est pr\u00e9f\u00e9rable d'avoir un historique de conversation par utilisateur et aussi de sauvegarder l'historique de conversation dans les donn\u00e9es de l'utilisateur correspondant.</p>"},{"location":"chap6/#gerer-lhistorique-de-conversation","title":"G\u00e9rer l'historique de conversation","text":""},{"location":"chap6/#se-souvenir","title":"Se souvenir","text":"<p>Une fois l'historique de conversation cr\u00e9\u00e9 il faut le charger dans le robot avec la m\u00e9thode charger_historique(historique_de_conversation). Ici, vous donnez donc au robot la capacit\u00e9 de se souvenir des interactions qu'il a eues avec l'utilisateur.</p> <p>Success</p> <p><code>python     - robot.charger_historique(historique_de_conversation)</code></p> <p>Warning</p> <p>Si un historique de conversation est d\u00e9j\u00e0 charg\u00e9 et qu'un autre historique vient \u00e0 \u00eatre charg\u00e9 l'ancien historique sera \u00e9cras\u00e9.</p> <p>Note</p> <p>Si l'historique n'est pas vide, le robot reprendra la discussion l\u00e0 o\u00f9 l'utilisateur l'avait arr\u00eat\u00e9e la derni\u00e8re fois.</p>"},{"location":"chap6/#effacer-la-memoire","title":"Effacer la m\u00e9moire","text":"<p>Si vous voulez changer de discussion ou bien effacer l'historique de la conversation vous pouvez utilisez la m\u00e9thode supprimer_historique().</p> <p>Success</p> <p><code>python     - robot.supprimer_historique()</code></p> <p>Warning</p> <p>Pensez \u00e0 recuperer et sauvegarder l'historique avant de le supprimer</p>"},{"location":"chap6/#recuperer-la-memoire-du-robot","title":"R\u00e9cup\u00e9rer la m\u00e9moire du robot","text":"<p>Pour pouvoir sauvegarder l'historique de conversation (m\u00e9moire du robot), il faut pouvoir r\u00e9cup\u00e9rer l'historique de conversation pour cela il faut utiliser la m\u00e9thode recuperer_historique_de_conversation().</p> <p>Success</p> <p><code>python     - robot.recuperer_historique_de_conversation()</code></p> <p>Cette m\u00e9thode renvoit la m\u00e9moire du robot permettant ainsi la sauvegarde de celle-ci.</p>"},{"location":"chap6/#exemple-5","title":"Exemple 5 :","text":"<p>Voil\u00e0 un exemple de fonction permettant la gestion de la discussion avec le robot</p> <p>Warning</p> <p>Cela n'est qu'un exemple, il n'est pas parfait car par exemple l'entr\u00e9e de l'utilisateur n'est pas effac\u00e9e, le robot n'a pas de m\u00e9moire (historique de conversation), etc.</p> <pre><code>Je vous conseille donc de vous en inspirer mais pas de le copier-coller.\nDe plus, il manque toutes les parties (vu pr\u00e9c\u00e9demment) n\u00e9cessaires au fonctionnement du robot.\n</code></pre> <pre><code>def declencher_discussion(robot : Robot):\n    global mettre_a_jour_affichage, discussion_commencer, text_area, bouton_question\n    if bouton_question.est_actif():\n        discussion_commencer = not discussion_commencer\n        if discussion_commencer :\n            robot.demarrer_discussion()\n            bouton_question.ajouter_texte(\"Arreter la discussion\")\n        else :\n            bouton_question.ajouter_texte(\"Poser question\")\n            robot.arreter_discussion()\n        mettre_a_jour_affichage = True\n    if discussion_commencer and text_area.est_actif() :\n        user_entry = robot.ecrire(text_area)\n        robot.repondre_question(user_entry)\n</code></pre>"},{"location":"chap7/","title":"Chapitre 7: \u00c9couter le robot.","text":"<pre><code>- robot.parler(texte)\n</code></pre>"},{"location":"chap8/","title":"Chapitre 8: Le visage et les \u00e9motions du robot.","text":""},{"location":"chap8/#pour-trouver-lemotion-dun-texte","title":"Pour trouver l'\u00e9motion d'un texte.","text":"<pre><code>robot.choisir_emotion(texte, liste_emotions)\n</code></pre>"},{"location":"chap8/#pour-afficher-un-visage-si-les-emotions-correspondent-a-une-image","title":"Pour afficher un visage, si les \u00e9motions correspondent \u00e0 une image.","text":"<pre><code>robot.afficher_image(emotion)\n</code></pre>"},{"location":"config/","title":"Configurer l'\u00e9diteur VS Code pour programmer le robot.","text":""},{"location":"config/#configurer-lenvironnement-python-et-installer-les-dependances","title":"Configurer l'environnement python et installer les d\u00e9pendances","text":"<p>Commandes :</p> <pre><code>git clone git@github.com:42Angouleme/pybot.git\ncd pybot\npython -m venv venv\nsource venv/bin/activate\npip install -r requirements.txt\n</code></pre>"},{"location":"config/#lancer-le-programme-principal","title":"Lancer le programme principal","text":"<p>Commandes :</p> <p>Utiliser la commande python avec le nom du fichier terminant avec .py o\u00f9 se trouve le programme.</p> <pre><code>python3 main.py\n</code></pre>"},{"location":"config/#pour-preparer-vscode","title":"Pour pr\u00e9parer vscode","text":"<p>Commandes :</p> <pre><code>code --install-extension ms-python.python\ncode --install-extension MS-CEINTL.vscode-language-pack-fr\ncd pybot\ncode main.py\n</code></pre>"},{"location":"config/#cliquer-sur-licone-extension","title":"Cliquer sur l'icone extension","text":""},{"location":"config/#chercher-python-et-installer","title":"Chercher python et installer","text":""},{"location":"config/#python-est-installe","title":"Python est install\u00e9","text":""},{"location":"config/#ouvrir-lexplorateur-de-fichiers","title":"Ouvrir l'explorateur de fichiers","text":""},{"location":"config/#creer-un-nouveau-fichier","title":"Cr\u00e9er un nouveau fichier","text":""},{"location":"config/#nommer-le-fichier","title":"Nommer le fichier","text":""},{"location":"config/#ecrire-son-code-dans-le-fichier","title":"\u00c9crire son code dans le fichier","text":""},{"location":"config/#lancer-le-programme","title":"Lancer le programme","text":""},{"location":"contribute/","title":"Contribuer au projet Pybot","text":"<p>L'objectif est de cr\u00e9er une biblioth\u00e8que logicielle qui permettra \u00e0 des \u00e9l\u00e8ves de coll\u00e8ge de niveau 3\u00e9me de r\u00e9aliser un robot par eux m\u00eame (Tout en s'initiant \u00e0 la programmation Python).</p> <p>Il existe trois d\u00e9p\u00f4ts github publics li\u00e9s au projet : - La biblioth\u00e8que pybot  - La documentation du projet (que tu lis actuellement)  - La d\u00e9mo (archive) qui a servi aux coll\u00e9giens lors de la journ\u00e9e d'immersion \u00e0 l'\u00e9cole de 42 Angoul\u00eame le 27 Novembre 2023.</p> <p>La d\u00e9mo est archiv\u00e9e et sert seulement comme r\u00e9f\u00e9rence, le d\u00e9veloppement se d\u00e9roule exclusivement sur le d\u00e9p\u00f4t de la biblioth\u00e8que pybot et les tickets sont rassembl\u00e9s ici.</p>"},{"location":"contribute/#installation-du-projet","title":"Installation du projet","text":"<p>La biblioth\u00e8que utilise le language Python (&gt;3.10) avec un grand nombre de d\u00e9pendances (pygame, flask, opencv...). Pour l'installer en local il suffit de cloner le d\u00e9p\u00f4t, installer un environnement virtuel python avec les d\u00e9pendances.</p> <p>Commandes :</p> <pre><code>git clone git@github.com:42Angouleme/pybot.git\ncd pybot\npython3 -m venv venv\nsource venv/bin/activate\npython3 -m pip install -r requirements.txt\n</code></pre>"},{"location":"contribute/#ajouter-un-package-python-et-mettre-a-jour-le-fichier-requirementstxt","title":"Ajouter un package python et mettre \u00e0 jour le fichier requirements.txt","text":"<p>Commandes :</p> <pre><code>python3 -m pip install &lt;package_name&gt;\npython3 -m pip freeze &gt; requirements.txt\n</code></pre>"},{"location":"contribute/#exploration-et-creation-de-tickets","title":"Exploration et cr\u00e9ation de tickets","text":"<p>Pour participer au d\u00e9veloppement vous pouvez explorer les diff\u00e9rents tickets en cours ou bien en ajouter de nouveaux.</p> <p></p> <p>Pour ajouter un ticket, il suffit de donner une indication sur le bug \u00e0 corriger ou la fonctionnalit\u00e9 \u00e0 ajouter. Il est aussi int\u00e9ressant de mettre des tags pour indiquer quel est le type du ticket. Par exemple, un ticket avec le tag good first issue est utile pour signifier aux nouveaux d\u00e9veloppeurs qui souhaitent contribuer que ce ticket est un point d'entr\u00e9e interressant pour d\u00e9couvrir et commencer \u00e0 participer au code.</p> <p></p> <p>Une fois que le ticket est cr\u00e9\u00e9, tout le monde peut participer \u00e0 la discussion pour aider \u00e0 la r\u00e9solution du probl\u00e8me. Lorsque vous souhaitez adopter un ticket pour le r\u00e9soudre il suffit de s'assigner \u00e0 soi-m\u00eame la r\u00e9solution du ticket (que ce soit le votre ou un ticket disponible qui est assign\u00e9 \u00e0 personne) et de cr\u00e9er la branche depuis le ticket (ce qui permet de fermer automatiquement le ticket lorsque la branche sera merge \u00e0 la branche main).</p> <p></p> <p></p> <p>Apr\u00e9s avoir cr\u00e9\u00e9 la branche, il faut la r\u00e9cup\u00e9rer sur son code localement.</p> <pre><code>git fetch origin\ngit checkout numero-nom-de-la-branche\n</code></pre> <p>Il suffit ensuite de faire les modifications.</p> <p></p>"},{"location":"contribute/#resolution-de-tickets","title":"R\u00e9solution de tickets","text":"<p>Une fois que l'on a r\u00e9solu le ticket, l'objectif est d'amener sa contribution \u00e0 \u00eatre ajout\u00e9 \u00e0 la base de code principale (merge). Avec git on ajoute ses modifications sur la branche que l'on pousse sur le d\u00e9p\u00f4t.</p> <p></p> <p>En retournant sur la page du d\u00e9p\u00f4t on constate maintenant qu'il est possible de cr\u00e9er une pull request. La pull request ne bloque pas la branche, il est ensuite toujours possible de faire d'autres modifications sur la branche. Toutes les modifications pouss\u00e9es sur la branche d'une pull request seront automatiquement ajout\u00e9es au futur merge.</p> <p></p> <p>Comme les tickets, les pull requests sont des espaces de discussions ouvert \u00e0 tous et am\u00e9liorable jusqu'\u00e0 ce que le mainteneur valide et merge votre branche \u00e0 la branche main.</p> <p></p> <p>Il existe une liste des pull request comme il existe une liste de ticket (issues).</p> <p></p> <p>Quand le mainteneur fera le merge il supprimera la branche (ce qui supprimera par la m\u00eame occasion le ticket li\u00e9).</p> <p></p> <p>La branche est merge et la modification est ajout\u00e9e \u00e0 la branche main principale.</p> <p></p> <p>Bravo, vous savez maintenant contribuer \u00e0 un projet open source.</p>"},{"location":"doc/","title":"The Pybot documentation","text":"<p>The pybot documentation use mkdocs https://www.mkdocs.org/ and the material theme https://squidfunk.github.io/mkdocs-material/.</p>"},{"location":"doc/#install-mkdocs","title":"Install mkdocs","text":"<pre><code>git clone git@github.com:42Angouleme/42Angouleme.github.io.git\ncd 42Angouleme.github.io\npython -m venv venv\nsource venv/bin/activate\npip install mkdocs mkdocs-material\nmkdocs --help\n</code></pre>"},{"location":"doc/#run-the-server","title":"Run the server","text":"<pre><code>cd src\nmkdocs serve\n</code></pre>"},{"location":"doc/#build-and-set-the-site-folder-as-the-new-site-version","title":"Build and set the site folder as the new site version","text":"<pre><code>rm -rf docs\ncd src\nmkdocs build\nmv site ../docs\ncd ..\nrm docs/assets/images/favicon.png\ncp favicon.png docs/assets/images\n</code></pre> <p>Then commit push to get the new version, the new site should be online.</p>"},{"location":"python/","title":"Apprendre python","text":"<p>Un cours d'initiation au language python avec des exemples.</p>"},{"location":"python/#1-les-variables","title":"1. Les Variables","text":"<p>Une variable est une mani\u00e8re de stocker une donn\u00e9e. La variable doit avoir un type pour d\u00e9finir la donn\u00e9e stock\u00e9e.</p> <p>Les types possibles sont: - int =&gt; Chiffre ou nombre - str =&gt; Caract\u00e8re ou cha\u00eene de caract\u00e8res - bool =&gt; Boolean True (\"Vrai\") ou False (\"Faux\") - ...</p>"},{"location":"python/#exemple","title":"Exemple:","text":"<pre><code>un_bool = True\nun_int = 42\nune_str = \"Coucou\"\n\nprint(\"Ceci est un boolean:\", un_bool)\nprint(\"Ceci est un integer:\", un_int)\nprint(\"Ceci est une chaine de caracteres:\", une_str)\n</code></pre>"},{"location":"python/#2-les-fonctions","title":"2. Les fonctions","text":"<p>Les fonctions d\u00e9finissent des actions \u00e0 faire lors de leur appel. Une fonction est constitu\u00e9e de son nom, des param\u00e8tres pris en entr\u00e9e et de son type de retour.</p>"},{"location":"python/#exemple_1","title":"Exemple:","text":"<pre><code># Cette fonction affiche \"bonjour\"\ndef afficher_bonjour():\n    print(\"Bonjour\")\n\n# Cette fonction affiche le contenu de mot\ndef afficher_argument(mot=\"Salut\"):\n    print(mot)\n\n# Cette fonction affiche \"Coucou\" et renvoi le m\u00eame mot\ndef afficher_et_renvoyer_coucou() -&gt; str:\n    mot = \"Coucou\"\n    print(mot)\n    return mot\n\ndef main():\n    afficher_bonjour()\n    afficher_argument(\"Bonjour \u00e0 tous, je suis un argument\")\n    afficher_argument()\n    retour = afficher_et_renvoyer_coucou()\n    print(\"retour =\", retour)\n</code></pre>"},{"location":"python/#3-les-conditions","title":"3. Les conditions","text":"<p>Les conditions permettent de limiter l'ex\u00e9cution d'une action si et seulement si la condition est valide.</p>"},{"location":"python/#exemple_2","title":"Exemple:","text":"<pre><code>def positif_ou_negatif(nombre: int):\n    if nombre &gt; 0:\n        print(nombre, \"est positif !\")\n    else:\n        print(nombre, \"est negatif !\")\n</code></pre>"},{"location":"python/#4-les-boucles","title":"4. Les Boucles","text":"<p>Les boucles sont des \u00e9l\u00e9ments qui permettent de r\u00e9p\u00e9ter une action, un nombre de fois d\u00e9finit par la condition d'arr\u00eat.</p>"},{"location":"python/#exemple_3","title":"Exemple:","text":"<pre><code>def dire_bonjour_a_tous_les_etudiants(nombre_etudiants: int):\n    indice = 1\n    while indice &lt;= nombre_etudiants:\n        print(\"Bonjour etudiant numero\", indice, \"\\n\")\n        indice = indice + 1\n</code></pre>"},{"location":"python/#5-les-classes","title":"5. Les classes","text":"<p>Les classes sont des structures de code qui d\u00e9finissent un objet et les comportements qu'il peut r\u00e9aliser. Comme dans l'exemple suivant, vous pouvez importer une classes \"Robot\" depuis la biblioth\u00e8que \"Robot\".  Ensuite, il vous faut cr\u00e9er un objet Robot, avec ici un nom et un \u00e2ge. Par la suite, vous pouvez donner des ordres \u00e0 votre robot, en faisant appel aux m\u00e9thodes que la classes Robot contient.</p>"},{"location":"python/#exemple_4","title":"Exemple:","text":"<pre><code>from pybot import Robot\n\n\ndef main():\n    robot = Robot(\"Nono\", 11)\n    robot.dire_bonjour()\n    robot.rendre_muet()\n    robot.dire_bonjour()\n    robot.donner_la_parole()\n    robot.dire_bonjour()\n</code></pre>"},{"location":"ref/","title":"R\u00e9f\u00e9rence de la biblioth\u00e8que","text":"<p>Pour en savoir plus, dans un \u00e9diteur tel que visual studio code, il suffit de passer la souris sur une fonction pour voir les commentaires la concernant.</p> <p></p>"},{"location":"ref/#la-fenetre","title":"La fen\u00eatre","text":"<ul> <li>Importer et utiliser pybot</li> </ul> <pre><code>from pybot import Robot\nrobot = Robot()\n</code></pre> <ul> <li>D\u00e9marrer la webapp.</li> </ul> <pre><code>robot.demarrer_webapp()\n</code></pre> <ul> <li>Ouvrir une fen\u00eatre.</li> </ul> <pre><code>robot.creer_fenetre(longeur, hauteur)\n</code></pre> <ul> <li>Changer le titre.</li> </ul> <pre><code>robot.changer_titre(titre)\n</code></pre> <ul> <li>Mettre \u00e0 jour l'affichage de la fen\u00eatre.</li> </ul> <pre><code>robot.actualiser_affichage()\n</code></pre> <ul> <li>Entrer ou sortir du plein \u00e9cran.</li> </ul> <pre><code>plein_ecran(changer)\n</code></pre> <ul> <li>Mettre en pause le robot.</li> </ul> <pre><code>robot.dort(secondes)\n</code></pre> <ul> <li>V\u00e9rifier si le robot est actif (Vrai ou Faux).</li> </ul> <pre><code>robot.est_actif()\n</code></pre> <ul> <li>Passer le robot en mode inactif.</li> </ul> <pre><code>robot.desactiver()\n</code></pre> <ul> <li>Passer le robot en mode inactif et fermer l'affichage.</li> </ul> <pre><code>robot.fermer_fenetre()\n</code></pre>"},{"location":"ref/#les-evenements","title":"les \u00e9v\u00e8nements","text":"<p>Liste des touches pour cr\u00e9er des \u00e9v\u00e8nements:</p> <pre><code>* echap (touche \u00c9chap)\n* espace (touche Espace)\n* 0\n* 1\n* 2\n* 3\n* 4\n* 5\n* 6\n* 7\n* 8\n* 9\n* a\n* b\n* c\n* d\n* e\n* f\n* g\n* h\n* i\n* j\n* k\n* l\n* m\n* n\n* o\n* p\n* q\n* r\n* s\n* t\n* u\n* v\n* w\n* x\n* y\n* z\n* F1\n* F2\n* F3\n* F4\n* F5\n* F6\n* F7\n* F8\n* F9\n* F10\n* F11\n* F12\n* F13\n* F14\n* F15\n</code></pre> <ul> <li>Cr\u00e9er un nouvel \u00e9v\u00e8nement.</li> </ul> <pre><code>robot.ajouter_evenement(touche, nom)\n</code></pre> <ul> <li>V\u00e9rifier les \u00e9v\u00e8nements.</li> </ul> <pre><code>robot.verifier_evenements()\n</code></pre> <ul> <li>Supprimer un \u00e9v\u00e8nement.</li> </ul> <pre><code>robot.supprimer_evenement(nom)\n</code></pre>"},{"location":"ref/#fond-decran","title":"fond d'\u00e9cran","text":"<ul> <li>Changer la couleur du fond</li> </ul> <pre><code>robot.couleur_fond(couleur)\n</code></pre> <ul> <li>Afficher la couleur du fond d'\u00e9cran</li> </ul> <pre><code>robot.afficher_fond()\n</code></pre>"},{"location":"ref/#les-boutons","title":"les boutons","text":"<ul> <li>Cr\u00e9er un nouveau bouton.</li> </ul> <pre><code>bouton = robot.creer_bouton(longueur, hauteur, position_x, position_y, couleur)\n</code></pre> <ul> <li>Ajouter un texte au bouton.</li> </ul> <pre><code>bouton.ajouter_texte(texte, position_x, position_y, taille, couleur)\n</code></pre> <ul> <li>Afficher le bouton.</li> </ul> <pre><code>bouton.afficher()\n</code></pre> <ul> <li>V\u00e9rifier le clique sur le bouton.</li> </ul> <pre><code>bouton.est_actif()\n</code></pre>"},{"location":"ref/#rectangle-et-texte","title":"rectangle et texte","text":"<ul> <li>Afficher un rectangle.</li> </ul> <pre><code>robot.dessiner_rectangle(longueur, hauteur, position_x, position_y, couleur)\n</code></pre> <ul> <li>Afficher du texte.</li> </ul> <pre><code>robot.afficher_texte(texte, position_x, position_y, taille, couleur)\n</code></pre>"},{"location":"ref/#la-camera","title":"la cam\u00e9ra","text":"<ul> <li>Afficher la cam\u00e9ra.</li> </ul> <pre><code>robot.afficher_camera(position_x, position_y)\n</code></pre> <ul> <li>Capturer une photo de la cam\u00e9ra.</li> </ul> <pre><code>robot.prendre_photo(self, nom_fichier)\n</code></pre> <ul> <li>Afficher une image.</li> </ul> <pre><code>robot.afficher_image(chemin_fichier, position_x, position_y)\n</code></pre> <ul> <li>Appliquer un filtre.</li> </ul> <pre><code>robot.appliquer_filtre(chemin_fichier, nom_filtre)\n</code></pre>"},{"location":"ref/#les-filtres","title":"les filtres","text":"<p>Liste des filtres que l'on peut appliquer sur une image</p> <pre><code>* cartoon\n* ocean\n* alien\n* rose\n* flou\n* noir_et_blanc\n* tourner\n* vernis\n</code></pre>"},{"location":"ref/#reconnaissance-carte-et-session","title":"reconnaissance carte et session","text":"<p>-</p>"},{"location":"ref/#parler-avec-le-robot","title":"parler avec le robot","text":"<p>-</p>"},{"location":"roadmap/","title":"Progression g\u00e9n\u00e9rale","text":"<p>L'objectif est d'obtenir une biblioth\u00e8que compos\u00e9e de modules dont l'utilisation combin\u00e9e permet d'interagir avec un bot (\u00e9paul\u00e9 par une IA conversationnelle) par la voix, le texte ou l\u2019image.</p> <p>Le premier cas d'usage pr\u00e9vu est l'assemblage d'un robot : un programme faisant appel \u00e0 cette biblioth\u00e8que alli\u00e9 \u00e0 une enveloppe physique et des composants vari\u00e9s : cam\u00e9ra, haut-parleurs, microphone, \u00e9cran notamment. Ce robot aura pour fonction principale d'accueillir des coll\u00e9giens dans le hall de l'\u00e9tablissement et pourrait par exemple, si entrain\u00e9 avec les donn\u00e9es du coll\u00e8ge, r\u00e9pondre \u00e0 des questions comme: \"Dans quelle salle se d\u00e9roule le cours de la 3e B dans 10 minutes ?\".</p> <p>Le projet se d\u00e9coupe en deux niveaux : la classe g\u00e9n\u00e9rale Robot qui doit avoir des m\u00e9thodes acc\u00e9dant \u00e0 toutes les fonctionnalit\u00e9s des modules de mani\u00e8re simple, correctement nomm\u00e9es et document\u00e9es (en fran\u00e7ais) pour une utilisation par les \u00e9l\u00e8ves.</p> <p>Les modules, avec leurs fonctionnalit\u00e9s plus bas niveau doivent aussi \u00eatre document\u00e9s pour que les \u00e9tudiants de 42 puissent s'int\u00e9grer plus facilement et participer au d\u00e9veloppement.</p>"},{"location":"roadmap/#liste-des-fonctionnalites-de-la-classe-robot-et-leur-avancement","title":"Liste des fonctionnalit\u00e9s de la classe Robot et leur avancement:","text":""},{"location":"roadmap/#fonctionnalites-a-creer-commenter-et-documenter","title":"Fonctionnalit\u00e9s \u00e0 cr\u00e9er, commenter et documenter","text":"<ul> <li> fonction fonctionnelle et stable</li> <li> fonction proprement comment\u00e9e</li> <li> fonction document\u00e9e (documentation externe)</li> </ul>"},{"location":"roadmap/#part-1-screen-basics","title":"part 1 - screen basics","text":"<ul> <li>robot.demarrer_webapp() : ,  , </li> <li>robot.creer_fenetre(...) : ,  , </li> <li>robot.changer_titre() : ,  , </li> <li>robot.actualiser_affichage() : ,  , </li> <li>robot.plein_ecran(changer) : ,  , </li> <li>robot.dort() : ,  , </li> </ul>"},{"location":"roadmap/#part-2-loop-and-events","title":"part 2 - loop and events","text":"<ul> <li>robot.est_actif() : ,  , </li> <li>robot.desactiver() : ,  , </li> <li>robot.fermer_fenetre() : ,  , </li> <li>robot.ajouter_evenement(...) : ,  , </li> <li>robot.verifier_evenements() : ,  , </li> <li>robot.supprimer_evenement(...) : ,  , </li> </ul>"},{"location":"roadmap/#part-3-buttons-and-layout","title":"part 3 - buttons and layout","text":"<ul> <li>robot.couleur_fond(couleur) : ,  , </li> <li>robot.afficher_fond() : ,  , </li> <li>robot.creer_bouton(...) : ,  , </li> <li>bouton.ajouter_texte(...) : ,  , </li> <li>bouton.afficher() : ,  , </li> <li>bouton.est_actif() : ,  , </li> <li>robot.dessiner_rectangle(...) : ,  , </li> <li>robot.afficher_texte(...) : ,  , </li> </ul>"},{"location":"roadmap/#part-4-camera-and-photos","title":"part 4 - camera and photos","text":"<ul> <li>robot.afficher_camera() : ,  , </li> <li>robot.prendre_photo(...) : ,  , </li> <li>robot.afficher_image(...) : ,  , </li> <li>robot.appliquer_filtre(...) : ,  , </li> </ul>"},{"location":"roadmap/#part-5-card-detection-and-user-session","title":"part 5 - card detection and user session","text":"<ul> <li>robot.detecter_carte() : ,  , </li> <li>robot.creer_session(...) : ,  , </li> <li>robot.fermer_session(): ,  , </li> <li>robot.verifier_session(): ,  , </li> </ul>"},{"location":"roadmap/#part-6-talk-to-robot","title":"part 6 - talk to robot","text":"<ul> <li>robot.entrainer(...) : ,  , </li> <li>robot.repondre_question(...) : ,  , </li> </ul>"},{"location":"roadmap/#part-7-robot-is-talking","title":"part 7 - robot is talking","text":"<ul> <li>robot.parler(...) : ,  , </li> </ul>"},{"location":"roadmap/#part-8-robot-emotions","title":"part 8 - robot emotions","text":"<ul> <li>robot.choisir_emotion(...) : ,  , </li> </ul>"},{"location":"roadmap/#extra","title":"extra","text":"<ul> <li>robot.message_erreur() : ,  , </li> </ul>"},{"location":"roadmap/#liste-des-different-modules-et-leur-avancement","title":"Liste des diff\u00e9rent modules et leur avancement:","text":""},{"location":"roadmap/#module-fenetre","title":"Module fen\u00eatre","text":"<ul> <li>Wrapper pygame et pygame_gui</li> <li>Visage minimaliste avec expressions. S\u2019anime en cas de connexion ou r\u00e9agit aux erreurs.</li> <li>Possibilit\u00e9 d'affichage de texte d\u00e9filant des interactions, pouvant remplacer le speaker.</li> <li> <p>Un application graphique (pygame GUI) client pour afficher le stream camera, des boutons, du texte ou des images depuis la base de donn\u00e9es.</p> </li> <li> <p>D\u00e8s l\u2019identification :</p> </li> <li>saluer, variable</li> <li>d\u00e9clencher les questions pr\u00e9-enregistr\u00e9es actives de la DB</li> <li>\u00e9change libre</li> </ul>"},{"location":"roadmap/#module-camera","title":"Module cam\u00e9ra","text":"<ul> <li>Reconnaissance (identification) via la cam\u00e9ra d\u2019un \u00e9l\u00e8ve gr\u00e2ce \u00e0 son motif.</li> </ul>"},{"location":"roadmap/#module-webapp","title":"Module webapp","text":"<ul> <li>Permet de faire le backend pour travailler avec la base de donn\u00e9e, propose aussi un interface client web pour aider \u00e0 l'administration du robot.</li> <li>Un serveur web flask local avec base de donn\u00e9es dans laquelle se   trouvent les \u00e9l\u00e8ves. Cette base de donn\u00e9e contient a minima:</li> <li>nom</li> <li>pr\u00e9nom</li> <li>image carte (chemin vers un dossier local)</li> <li>ann\u00e9e ou date de cr\u00e9ation (RGPD)</li> <li> <p>string: r\u00e9sum\u00e9 du dernier \u00e9change pour des conversations fil\u00e9es</p> </li> <li> <p>Application web permettant :</p> </li> <li> <p>CRUD : formulaire nom + pr\u00e9nom + image.</p> </li> <li>Avec bouton image qui d\u00e9clenche une photo, en analyse la validit\u00e9 : carte valide (sens, pr\u00e9sence d\u2019une carte), et pas de match d\u2019un motif existant.</li> <li>Puis l\u2019enregistre.</li> <li>Modifier des champs existants.</li> <li>Supprimer un utilisateur.</li> <li>Lire le tableau des utilisateurs.</li> <li> <p>Page de logs (erreurs)</p> </li> <li> <p>DB question \u00e0 poser avec fen\u00eatre de temps (deux dates), avec une liste d\u00e9finie de r\u00e9ponses possibles : oui/non, ou une \u201cenum\u201d (chat gpt saura retranscrire la r\u00e9ponse de l\u2019\u00e9l\u00e8ve).</p> </li> <li>Champs :<ul> <li>from</li> <li>to</li> <li>question</li> <li>r\u00e9ponse valide</li> <li>Liste <li>Liste des questions actives</li> <li>Liste des r\u00e9ponses \u00e0 une question + nombre d\u2019occurences de chaque   r\u00e9ponse</li>"},{"location":"roadmap/#module-ia","title":"Module IA","text":"<ul> <li>Communiquer avec chatgpt</li> </ul>"},{"location":"roadmap/#module-audio-speaker","title":"Module Audio (Speaker)","text":"<ul> <li>Text to speech. Le texte est l\u2019output de l\u2019IA vers speaker.</li> <li>Capable de r\u00e9agir de mani\u00e8re adaptee au public, r\u00e9pondre \u00e0 des questions. R\u00e9ponses courtes.</li> </ul>"},{"location":"roadmap/#module-microphone","title":"Module Microphone","text":"<ul> <li>Speech to text. Capture du son et transformation en texte pour donner en input a l\u2019IA.</li> <li>Partir d\u2019un input (module microphone), pr\u00e9parer un prompt pour obtenir la r\u00e9ponse qui servira d\u2019output (module speaker et module \u00e9cran).</li> <li>Limitations des tokens, r\u00e9ponses courtes. Des sujets de discussions.</li> <li>Donner de la donn\u00e9e concernant le college en apprentissage au mod\u00e8le. (Par exemple renseigner sur les horaires cantines.)</li> <li>Actif sur commande (fonction listen on/off), capable d\u2019\u00e9couter la voix en isolant les bruits parasites et transcrire le contenu en texte.</li> </ul>"},{"location":"roadmap/#liste-des-different-materiel-et-fonctionnement","title":"Liste des diff\u00e9rent mat\u00e9riel et fonctionnement :","text":"<ul> <li> <p>Raspberry PI alimente un microphone, une camera, des hauts-parleurs</p> </li> <li> <p>Raspberry 4B 4GO</p> </li> <li>2 cartes micro SD 64 GO</li> <li>\u00e9cran tactile LCD tactile</li> <li>c\u00e2ble HDMI vers micro-hdmi</li> <li>alimentation 48W</li> <li>heat sinks</li> <li>camera v3</li> <li>camera HQ</li> <li>objectif camera HQ</li> <li>Nappe c\u00e2ble</li> <li>mini haut parleur usb</li> <li>microphone usb</li> </ul>"},{"location":"rpi/","title":"Configurer la biblioth\u00e8que pybot sur le Raspberry pi","text":"<ul> <li>notes pour configurer linux (Debian) pour que la biblioth\u00e8que fonctionne correctement avec tout les p\u00e9riph\u00e9riques. \u00c0 venir.</li> </ul>"}]}